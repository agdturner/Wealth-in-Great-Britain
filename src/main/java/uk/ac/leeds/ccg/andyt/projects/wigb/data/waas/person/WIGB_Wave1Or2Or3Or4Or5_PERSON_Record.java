/**
 * Source code generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas.person;
import java.io.Serializable;
public class WIGB_Wave1Or2Or3Or4Or5_PERSON_Record implements Serializable {
protected String[] s;
protected Double ATTEND;
protected String BACCBEG2;
protected String BACCBEG3;
protected Double BACCSA2;
protected Double BACCSA3;
protected Double BACCSB2;
protected Double BACCSB3;
protected Double BBEFORE2;
protected Double BBEFORE3;
protected Double BDEBTS2;
protected Double BDEBTS3;
protected Double BDIRNI2;
protected Double BDIRNI3;
protected Double BDOCS2;
protected Double BDOCS3;
protected Double BEMPN2;
protected Double BEMPN3;
protected Double BFUND1;
protected Double BFUND10;
protected Double BFUND17;
protected Double BFUND2;
protected Double BFUND9;
protected Double BMOREBUS;
protected Double BNATINS2;
protected Double BNATINS3;
protected Double BONTAX;
protected Double BOWED2;
protected Double BOWED3;
protected Double BOWN2;
protected Double BOWN3;
protected Double BPART2;
protected Double BPART3;
protected Double BPAST;
protected Double BPROFIT2;
protected Double BPROFIT3;
protected Double BPROPN2;
protected Double BPROPN3;
protected Double BRETIRE2;
protected Double BRETIRE3;
protected Double BSELLAB;
protected Double BSELLAM;
protected Double BSELLTX;
protected Double BSELLYR;
protected Double BSIZE2;
protected Double BSIZE3;
protected Double BSTART2;
protected Double BSTART3;
protected Double BTAX2;
protected Double BTAX3;
protected Double BTYPE2;
protected Double BTYPE3;
protected Double BVAL2;
protected Double BVAL3;
protected Double BVALB2;
protected Double BWORTH;
protected Double BWORTHB;
protected Double BYEAR2;
protected Double BYEAR3;
protected Double CACTF;
protected Double CACTF_I;
protected Double CACTF_IFLAG;
protected Double CACTV;
protected Double CACTV_I;
protected Double CACTV_IFLAG;
protected Double CASAV;
protected Double CASAV_I;
protected Double CASAV_IFLAG;
protected Integer CASEW1;
protected Double CASVB;
protected Double CASVV;
protected Double CASVV_I;
protected Double CASVV_IFLAG;
protected Double COURSE;
protected Double CURRAC;
protected Double DBURD;
protected Double DBURDA;
protected Double DCAMC2;
protected Double DCAMC3;
protected Double DCAMD2;
protected Double DCAMD3;
protected Double DCAMP2;
protected Double DCAMP3;
protected Double DCANU;
protected Double DCANY;
protected Double DCCOS2;
protected Double DCCOS3;
protected Double DCCSP2;
protected Double DCCSP3;
protected Double DCESB2;
protected Double DCESB3;
protected Double DCINZ2;
protected Double DCINZ3;
protected Double DCNAM2;
protected Double DCNAM3;
protected Double DCOINV2;
protected Double DCOINV2_I;
protected Double DCOINV2_IFLAG;
protected Double DCOINV3;
protected Double DCOINVB2;
protected Double DCOINVB3;
protected Double DCONM1;
protected Double DCONM2;
protected Double DCONM3;
protected Double DCONM4;
protected Double DCONM5;
protected Double DCONM6;
protected Double DCOSHV2;
protected Double DCOSHV2_I;
protected Double DCOSHV2_IFLAG;
protected Double DCOSHV3;
protected Double DCOSHVB2;
protected Double DCPER2;
protected Double DCPER3;
protected Double DCREC2;
protected Double DCREC3;
protected Double DCRSP2;
protected Double DCRSP3;
protected Double DHBAMT01;
protected Double DHBAMT01_I;
protected Double DHBAMT01_IFLAG;
protected Double DHBAMT02;
protected Double DHBAMT02_I;
protected Double DHBAMT02_IFLAG;
protected Double DHBAMT03;
protected Double DHBAMT03_I;
protected Double DHBAMT03_IFLAG;
protected Double DHBAMT04;
protected Double DHBAMT04_I;
protected Double DHBAMT04_IFLAG;
protected Double DHBAMT05;
protected Double DHBAMT05_I;
protected Double DHBAMT05_IFLAG;
protected Double DHBAMT06;
protected Double DHBAMT06_I;
protected Double DHBAMT06_IFLAG;
protected Double DHBAMT07;
protected Double DHBAMT07_I;
protected Double DHBAMT07_IFLAG;
protected Double DHBAMT08;
protected Double DHBAMT08_I;
protected Double DHBAMT08_IFLAG;
protected Double DHBAMT09;
protected Double DHBAMT09_I;
protected Double DHBAMT09_IFLAG;
protected Double DHBAMT10;
protected Double DHBAMT10_I;
protected Double DHBAMT10_IFLAG;
protected Double DHBAMT11;
protected Double DHBAMT11_I;
protected Double DHBAMT11_IFLAG;
protected Double DHBANY01;
protected Double DHBANY01_I;
protected Double DHBANY01_IFLAG;
protected Double DHBANY02;
protected Double DHBANY02_I;
protected Double DHBANY02_IFLAG;
protected Double DHBANY03;
protected Double DHBANY03_I;
protected Double DHBANY03_IFLAG;
protected Double DHBANY04;
protected Double DHBANY04_I;
protected Double DHBANY04_IFLAG;
protected Double DHBANY05;
protected Double DHBANY05_I;
protected Double DHBANY05_IFLAG;
protected Double DHBANY06;
protected Double DHBANY06_I;
protected Double DHBANY06_IFLAG;
protected Double DHBANY07;
protected Double DHBANY07_I;
protected Double DHBANY07_IFLAG;
protected Double DHBEST01;
protected Double DHBEST02;
protected Double DHBEST03;
protected Double DHBEST04;
protected Double DHBEST05;
protected Double DHBEST06;
protected Double DHBEST07;
protected Double DHBEST08;
protected Double DHBEST09;
protected Double DHBEST10;
protected Double DHBEST11;
protected Double DHBFIX;
protected Double DHPANY1;
protected Double DHPANY1_I;
protected Double DHPANY1_IFLAG;
protected Double DHPANY2;
protected Double DHPANY2_I;
protected Double DHPANY2_IFLAG;
protected Double DHPANY3;
protected Double DHPANY3_I;
protected Double DHPANY3_IFLAG;
protected Double DHPBEH2;
protected Double DHPBEH2_I;
protected Double DHPBEH2_IFLAG;
protected Double DHPEST2;
protected Double DHPINS2;
protected Double DHPINS2_I;
protected Double DHPINS2_IFLAG;
protected Double DHPINT2;
protected Double DHPNUM;
protected Double DHPNUM_I;
protected Double DHPNUM_IFLAG;
protected Double DHPOFT2;
protected Double DHPOFT2_I;
protected Double DHPOFT2_IFLAG;
protected Double DHPOWE2;
protected Double DHPOWE2_I;
protected Double DHPOWE2_IFLAG;
protected Double DHPWEST2;
protected Double DHPWHNM2;
protected Double DHPWHNM2_I;
protected Double DHPWHNM2_IFLAG;
protected Double DHPWHNY2;
protected Double DHPWHNY2_I;
protected Double DHPWHNY2_IFLAG;
protected Double DISEVER;
protected Double DISTYPE1;
protected Double DISTYPE2;
protected Double DISTYPE3;
protected Double DISTYPE4;
protected Double DISTYPE5;
protected Double DISTYPE6;
protected Double DISTYPE7;
protected Double DISTYPE8;
protected Double DISTYPE9;
protected Double DLANY;
protected Double DLANY_I;
protected Double DLANY_IFLAG;
protected Double DLBEH2;
protected Double DLBEH2_I;
protected Double DLBEH2_IFLAG;
protected Double DLBEH3;
protected Double DLBEH3_I;
protected Double DLBEH3_IFLAG;
protected Double DLBEH4;
protected Double DLBEH4_I;
protected Double DLBEH4_IFLAG;
protected Double DLBEH5;
protected Double DLBEH5_I;
protected Double DLBEH5_IFLAG;
protected Double DLEST2;
protected Double DLEST3;
protected Double DLEST4;
protected Double DLINS2;
protected Double DLINS2_I;
protected Double DLINS2_IFLAG;
protected Double DLINS3;
protected Double DLINS3_I;
protected Double DLINS3_IFLAG;
protected Double DLINS4;
protected Double DLINS4_I;
protected Double DLINS4_IFLAG;
protected Double DLINS5;
protected Double DLINS5_I;
protected Double DLINS5_IFLAG;
protected Double DLINT2;
protected Double DLINT3;
protected Double DLINT4;
protected Double DLINT5;
protected Double DLNUM;
protected Double DLNUM_I;
protected Double DLNUM_IFLAG;
protected Double DLOFT2;
protected Double DLOFT2_I;
protected Double DLOFT2_IFLAG;
protected Double DLOFT3;
protected Double DLOFT3_I;
protected Double DLOFT3_IFLAG;
protected Double DLOFT4;
protected Double DLOFT4_I;
protected Double DLOFT4_IFLAG;
protected Double DLOFT5;
protected Double DLOFT5_I;
protected Double DLOFT5_IFLAG;
protected Double DLOWE2;
protected Double DLOWE2_I;
protected Double DLOWE2_IFLAG;
protected Double DLOWE3;
protected Double DLOWE3_I;
protected Double DLOWE3_IFLAG;
protected Double DLOWE4;
protected Double DLOWE4_I;
protected Double DLOWE4_IFLAG;
protected Double DLOWE5;
protected Double DLOWE5_I;
protected Double DLOWE5_IFLAG;
protected Double DLSEC2;
protected Double DLSEC3;
protected Double DLSEC4;
protected Double DLSEC5;
protected Double DLTYPE2;
protected Double DLTYPE2_I;
protected Double DLTYPE2_IFLAG;
protected Double DLTYPE3;
protected Double DLTYPE3_I;
protected Double DLTYPE3_IFLAG;
protected Double DLTYPE4;
protected Double DLTYPE4_I;
protected Double DLTYPE4_IFLAG;
protected Double DLTYPE5;
protected Double DLTYPE5_I;
protected Double DLTYPE5_IFLAG;
protected Double DLWEST2;
protected Double DLWEST3;
protected Double DLWEST4;
protected Double DLWEST5;
protected Double DLWHNM2;
protected Double DLWHNM2_I;
protected Double DLWHNM2_IFLAG;
protected Double DLWHNM3;
protected Double DLWHNM3_I;
protected Double DLWHNM3_IFLAG;
protected Double DLWHNM4;
protected Double DLWHNM4_I;
protected Double DLWHNM4_IFLAG;
protected Double DLWHNM5;
protected Double DLWHNM5_I;
protected Double DLWHNM5_IFLAG;
protected Double DLWHNY2;
protected Double DLWHNY2_I;
protected Double DLWHNY2_IFLAG;
protected Double DLWHNY3;
protected Double DLWHNY3_I;
protected Double DLWHNY3_IFLAG;
protected Double DLWHNY4;
protected Double DLWHNY4_I;
protected Double DLWHNY4_IFLAG;
protected Double DLWHNY5;
protected Double DLWHNY5_I;
protected Double DLWHNY5_IFLAG;
protected Double DLWHY1;
protected Double DLWHY10;
protected Double DLWHY15;
protected Double DLWHY16;
protected Double DLWHY2;
protected Double DLWHY22;
protected Double DLWHY23;
protected Double DLWHY29;
protected Double DLWHY3;
protected Double DLWHY4;
protected Double DLWHY5;
protected Double DLWHY8;
protected Double DLWHY9;
protected Double DMOANY;
protected Double DMOANY_I;
protected Double DMOANY_IFLAG;
protected Double DMOBEH2;
protected Double DMOBEH2_I;
protected Double DMOBEH2_IFLAG;
protected Double DMOEST2;
protected Double DMOINS2;
protected Double DMOINS2_I;
protected Double DMOINS2_IFLAG;
protected Double DMOINT2;
protected Double DMONUM;
protected Double DMONUM_I;
protected Double DMONUM_IFLAG;
protected Double DMOOFT2;
protected Double DMOOFT2_I;
protected Double DMOOFT2_IFLAG;
protected Double DMOOWE2;
protected Double DMOOWE2_I;
protected Double DMOOWE2_IFLAG;
protected Double DMOWEST2;
protected Double DMOWHNM2;
protected Double DMOWHNM2_I;
protected Double DMOWHNM2_IFLAG;
protected Double DMOWHNY2;
protected Double DMOWHNY2_I;
protected Double DMOWHNY2_IFLAG;
protected Double DSAMC2;
protected Double DSAMC3;
protected Double DSAMD2;
protected Double DSAMD3;
protected Double DSAMP2;
protected Double DSAMP3;
protected Double DSANU1;
protected Double DSANU2;
protected Double DSANY1;
protected Double DSANY2;
protected Double DSCOS2;
protected Double DSCOS3;
protected Double DSCSP2;
protected Double DSCSP3;
protected Double DSESB2;
protected Double DSESB3;
protected Double DSLAMT2;
protected Double DSLAMT2_I;
protected Double DSLAMT2_IFLAG;
protected Double DSLAMT3;
protected Double DSLAMT3_I;
protected Double DSLAMT3_IFLAG;
protected Double DSLAMT4;
protected Double DSLAMT4_I;
protected Double DSLAMT4_IFLAG;
protected Double DSLAMT5;
protected Double DSLAMT5_I;
protected Double DSLAMT5_IFLAG;
protected Double DSLEST2;
protected Double DSLEST3;
protected Double DSLEST4;
protected Double DSLEST5;
protected Double DSLPAY2;
protected Double DSLPAY3;
protected Double DSLPAY4;
protected Double DSLPAY5;
protected Double DSNAM2;
protected Double DSNAM3;
protected Double DSONM1;
protected Double DSONM2;
protected Double DSONM3;
protected Double DSONM4;
protected Double DSONM5;
protected Double DSONM6;
protected Double DSPER2;
protected Double DSREC2;
protected Double DSREC3;
protected String DTJBL;
protected Double DVAGE17;
protected Double DVANYARR;
protected Double DVCACTV;
protected Double DVCASVV;
protected Double DVCHMARR;
protected Double DVCISAV;
protected Double DVCOINV2;
protected Double DVCOINV3;
protected Double DVCRTARR;
protected Double DVCTARR;
protected Double DVDBINC1;
protected Double DVDBINC2;
protected Double DVDBINC3;
protected Double DVDBINCALL;
protected Double DVDBLUMP1;
protected Double DVDBLUMP2;
protected Double DVDBLUMP3;
protected Double DVDBRWEALTHVAL;
protected Double DVDHPOWE2;
protected Double DVDLOWE2;
protected Double DVDLOWE3;
protected Double DVDLOWE4;
protected Double DVDMOOWE2;
protected Double DVELARR;
protected Double DVFBONDV;
protected Double DVFCINVAL;
protected Double DVFCOLLV;
protected Double DVFEOPTV;
protected Double DVFESHAV;
protected Double DVFGLTFOV;
protected Double DVFGLTUKV;
protected Double DVFINFLV;
protected Double DVFINFV;
protected Double DVFINVOTV;
protected Double DVFLFENV;
protected Double DVFLFFSV;
protected Double DVFLFSIV;
protected Double DVFLFTEV;
protected Double DVFNSVAL;
protected Double DVFSHOSV;
protected Double DVFSHUKV;
protected Double DVFSINVAL;
protected Double DVGASARR;
protected Double DVGRSPAY;
protected Double DVHASAVC;
protected Double DVHASDB;
protected Double DVHASDC;
protected Double DVHASPFCUR;
protected Double DVHASPFD;
protected Double DVHASPP;
protected Double DVHPAR;
protected Double DVIISAV;
protected Double DVILO3A;
protected Double DVILO4A;
protected Double DVJB12ML;
protected Double DVKISAV;
protected Double DVMRDF;
protected Double DVNETPAY;
protected Double DVOTHARR;
protected Double DVPAVCUV;
protected Double DVPFCURVAL;
protected Double DVPFDDV;
protected Double DVPINPVAL;
protected Double DVPPVAL;
protected Double DVRNTARR;
protected Double DVSHCVAL;
protected Double DVSHODVAL2;
protected Double DVSHODVAL3;
protected Double DVSHSVAL;
protected Double DVSPEN;
protected Double DVTAXARR;
protected Double DVTELARR;
protected Double DVVALDBLUM;
protected Double DVVALDBT;
protected Double DVVALDCOS;
protected Double DVVALPBLUM;
protected Double DVVATARR;
protected Double DVWATARR;
protected Double EDATTN1;
protected Double EDATTN2;
protected Double EDATTN3;
protected Double EDLEVEL;
protected Double EMPN;
protected Double EMPSTY;
protected Double EMSHAR1;
protected Double EMSHAR2;
protected Double EMSHAR3;
protected Double ENROLL;
protected Double EVERWK;
protected Double FBONDTY1;
protected Double FBONDTY2;
protected Double FBONDTY3;
protected Double FBONDV;
protected Double FBONDVB;
protected Double FBONDV_I;
protected Double FBONDV_IFLAG;
protected Double FCACSH;
protected Double FCACSH_I;
protected Double FCACSH_IFLAG;
protected Double FCINVAL;
protected Double FCINVAL_I;
protected Double FCINVAL_IFLAG;
protected Double FCINVLB;
protected Double FCISAB;
protected Double FCISAV;
protected Double FCISAV_I;
protected Double FCISAV_IFLAG;
protected Double FCNUMIN;
protected Double FCNUMIN_I;
protected Double FCNUMIN_IFLAG;
protected Double FCNUMSH;
protected Double FCNUMSH_I;
protected Double FCNUMSH_IFLAG;
protected Double FCOLLV;
protected Double FCOLLVB;
protected Double FCOLLV_I;
protected Double FCOLLV_IFLAG;
protected Double FCOVDIF;
protected Double FCOVDIN;
protected Double FCOVDIN_I;
protected Double FCOVDIN_IFLAG;
protected Double FCOVDSH;
protected Double FCOVDSH_I;
protected Double FCOVDSH_IFLAG;
protected Double FCOVNIN;
protected Double FCOVNIN_I;
protected Double FCOVNIN_IFLAG;
protected Double FCOVNSH;
protected Double FCOVNSH_I;
protected Double FCOVNSH_IFLAG;
protected Double FCSHVAL;
protected Double FCSHVAL_I;
protected Double FCSHVAL_IFLAG;
protected Double FCSHVLB;
protected Double FCSUPPR;
protected Double FEOPTV;
protected Double FEOPTV_I;
protected Double FEOPTV_IFLAG;
protected Double FEOPVB;
protected Double FESHA;
protected Double FESHAV;
protected Double FESHAV_I;
protected Double FESHAV_IFLAG;
protected Double FESHA_I;
protected Double FESHA_IFLAG;
protected Double FESHVB;
protected Double FGFOVB;
protected Double FGILTS1;
protected Double FGILTS1_I;
protected Double FGILTS1_IFLAG;
protected Double FGILTS2;
protected Double FGILTS2_I;
protected Double FGILTS2_IFLAG;
protected Double FGILTS3;
protected Double FGILTS3_I;
protected Double FGILTS3_IFLAG;
protected Double FGILTS4;
protected Double FGILTS4_I;
protected Double FGILTS4_IFLAG;
protected Double FGLTFOV;
protected Double FGLTFOV_I;
protected Double FGLTFOV_IFLAG;
protected Double FGLTUKV;
protected Double FGLTUKV_I;
protected Double FGLTUKV_IFLAG;
protected Double FGUKVB;
protected Double FIISAB;
protected Double FIISAV;
protected Double FIISAV_I;
protected Double FIISAV_IFLAG;
protected Double FINCVB;
protected Double FINFLV;
protected Double FINFLV_I;
protected Double FINFLV_IFLAG;
protected Double FINFSAV1;
protected Double FINFSAV1_I;
protected Double FINFSAV1_IFLAG;
protected Double FINFSAV2;
protected Double FINFSAV2_I;
protected Double FINFSAV2_IFLAG;
protected Double FINFSAV3;
protected Double FINFSAV3_I;
protected Double FINFSAV3_IFLAG;
protected Double FINFSAV4;
protected Double FINFSAV4_I;
protected Double FINFSAV4_IFLAG;
protected Double FINFV;
protected Double FINFVB;
protected Double FINFV_I;
protected Double FINFV_IFLAG;
protected Double FINS;
protected Double FINSV;
protected Double FINSV_I;
protected Double FINSV_IFLAG;
protected Double FINS_I;
protected Double FINS_IFLAG;
protected Double FINVOTV;
protected Double FINVOTV_I;
protected Double FINVOTV_IFLAG;
protected Double FINVOVB;
protected Double FINVTY01;
protected Double FINVTY01_I;
protected Double FINVTY02;
protected Double FINVTY02_I;
protected Double FINVTY03;
protected Double FINVTY03_I;
protected Double FINVTY04;
protected Double FINVTY04_I;
protected Double FINVTY05;
protected Double FINVTY05_I;
protected Double FINVTY06;
protected Double FINVTY06_I;
protected Double FINVTY07;
protected Double FINVTY07_I;
protected Double FINVTY08;
protected Double FINVTY08_I;
protected Double FINVTY09;
protected Double FINVTY09_I;
protected Double FINVTY10;
protected Double FINVTY10_I;
protected Double FINVTY11;
protected Double FISA1;
protected Double FISA1_I;
protected Double FISA1_IFLAG;
protected Double FISA2;
protected Double FISA2_I;
protected Double FISA2_IFLAG;
protected Double FKISAB;
protected Double FKISAV;
protected Double FKISAV_I;
protected Double FKISAV_IFLAG;
protected Double FLFENV;
protected Double FLFENVB;
protected Double FLFENV_I;
protected Double FLFENV_IFLAG;
protected Double FLFFSV;
protected Double FLFFSVB;
protected Double FLFFSV_I;
protected Double FLFFSV_IFLAG;
protected Double FLFSIV;
protected Double FLFSIVB;
protected Double FLFSIV_I;
protected Double FLFSIV_IFLAG;
protected Double FLFTEV;
protected Double FLFTEVB;
protected Double FLFTEV_I;
protected Double FLFTEV_IFLAG;
protected Double FLNOS1;
protected Double FLNOS2;
protected Double FLNOS3;
protected Double FLNOS4;
protected Double FLOANVB;
protected Double FLPROD1;
protected Double FLPROD1_I;
protected Double FLPROD1_IFLAG;
protected Double FLPROD2;
protected Double FLPROD2_I;
protected Double FLPROD2_IFLAG;
protected Double FLPROD3;
protected Double FLPROD3_I;
protected Double FLPROD3_IFLAG;
protected Double FLPROD4;
protected Double FLPROD4_I;
protected Double FLPROD4_IFLAG;
protected Double FNSAV1;
protected Double FNSAV2;
protected Double FNSAV3;
protected Double FNSAV4;
protected Double FNSVAL_IFLAG;
protected Double FNSVB;
protected Double FSACSH;
protected Double FSACSH_I;
protected Double FSACSH_IFLAG;
protected Double FSHARE1;
protected Double FSHARE1_I;
protected Double FSHARE1_IFLAG;
protected Double FSHARE2;
protected Double FSHARE2_I;
protected Double FSHARE2_IFLAG;
protected Double FSHARE3;
protected Double FSHARE3_I;
protected Double FSHARE3_IFLAG;
protected Double FSHOSV;
protected Double FSHOSVB;
protected Double FSHOSV_I;
protected Double FSHOSV_IFLAG;
protected Double FSHUKV;
protected Double FSHUKVB;
protected Double FSHUKV_I;
protected Double FSHUKV_IFLAG;
protected Double FSINVAL;
protected Double FSINVAL_I;
protected Double FSINVAL_IFLAG;
protected Double FSINVLB;
protected Double FSNUMIN;
protected Double FSNUMIN_I;
protected Double FSNUMIN_IFLAG;
protected Double FSNUMSH;
protected Double FSNUMSH_I;
protected Double FSNUMSH_IFLAG;
protected Double FSOSHAV;
protected Double FSOSVLB;
protected Double FSSHVAL;
protected Double FSSHVAL_I;
protected Double FSSHVAL_IFLAG;
protected Double FSSHVLB;
protected Double FSSUPPR;
protected Double FSTYPIN1;
protected Double FSTYPIN2;
protected Double FSTYPIN3;
protected Double FSTYPSH1;
protected Double FSTYPSH2;
protected Double FSTYPSH3;
protected Double FSTYPSH4;
protected Double FTED;
protected Double FTED19;
protected Double FTPTWK;
protected Double GOR;
protected Double GRSESM;
protected Double GRSESP;
protected Double HASCHD;
protected Double HASDEP;
protected Double HASNDEP;
protected Double HOUSGDST;
protected Double HPLFT2;
protected Double HPOS1;
protected Double HPOS2;
protected Double IGDS1;
protected Double IGDS10;
protected Double IGDS11;
protected Double IGDS15;
protected Double IGDS2;
protected Double IGDS3;
protected Double IGDS4;
protected Double IGDS5;
protected Double IGDS8;
protected Double IGDS9;
protected Double IGFVALB;
protected Double IHRCNUM;
protected Double IHRECNT;
protected Double IHSE1;
protected Double IHSE2;
protected Double IHSE7;
protected Double ILACB;
protected Double ILGIFT;
protected Double ILIFB;
protected Double ILINB;
protected Double ILLLIM;
protected Double ILOTB;
protected Double ILRDB;
protected Double ILUMP;
protected Double ILUMTY1;
protected Double ILUMTY2;
protected Double ILUMTY3;
protected Double ILUPB;
protected Double ILUPP;
protected Double ILWNB;
protected Double IOUT1;
protected Double ISDEP;
protected Double ISNDEP;
protected Double IVALB2;
protected Double IVALB3;
protected Double IWAT1;
protected Double IWAT13;
protected Double IWAT2;
protected Double IWAT3;
protected Double IWAT4;
protected Double IWAT5;
protected Double IWAT7;
protected Double IWHO2;
protected Double IWHO3;
protected Double JBAWAY;
protected Double JOBNO;
protected Double LKTIME;
protected Double LNLFT2;
protected Double LNLFT3;
protected Double LNLFT4;
protected Double LNLFT5;
protected Double LNOS1;
protected Double LNOS2;
protected Double LNOS3;
protected Double LNOS4;
protected Double LNOS5;
protected Double LOOKED;
protected Double LSILL;
protected Double MARBEF;
protected Double MOLFT2;
protected Double MONTH;
protected Double MOOS1;
protected Double MOOS2;
protected Double NSSEC3;
protected Double NSSEC5;
protected Double NSSEC8;
protected Double NSSECB;
protected Double OCSVR1;
protected Double OCSVR2;
protected Double OCSVR3;
protected Double OCSVR4;
protected Double OCSVR5;
protected Double OCSVR6;
protected Double OCSVR7;
protected Double OCSVR8;
protected Double OINTEND;
protected Double OLARGE;
protected Double OLEFT;
protected Double OLEFTDO;
protected Double OLONG;
protected Double OLONGYR;
protected Double ONETEN;
protected Double OPENS01;
protected Double OPENS02;
protected Double OPENS03;
protected Double OPENS04;
protected Double OPENS05;
protected Double OPENS06;
protected Double OPENS07;
protected Double OPENS08;
protected Double ORETINC;
protected Double ORISKA;
protected Double ORISKC;
protected Double ORUNDO01;
protected Double ORUNDO02;
protected Double ORUNDO03;
protected Double ORUNDO04;
protected Double ORUNDO05;
protected Double ORUNDO06;
protected Double ORUNDO07;
protected Double ORUNDO08;
protected Double ORUNOUT;
protected Double OSITUAT;
protected Double OSTANDL;
protected Double OTHSRC1;
protected Double OTHSRC1_I;
protected Double OTHSRC1_IFLAG;
protected Double OTHSRC2;
protected Double OTHSRC2_I;
protected Double OTHSRC2_IFLAG;
protected Double OTHSRC3;
protected Double OTHSRC3_I;
protected Double OTHSRC3_IFLAG;
protected Double OTRUST01;
protected Double OTRUST02;
protected Double OTRUST03;
protected Double OTRUST04;
protected Double OTRUST05;
protected Double OTRUST06;
protected Double OTRUST07;
protected Double OTRUST08;
protected Double OTRUST09;
protected Double OTRUST10;
protected Double OTRUST11;
protected Double OTRUST12;
protected Double OTRUST13;
protected Double OTRUST14;
protected Double OUNDER;
protected Double OWNBUS;
protected Double PAGERET;
protected Double PARTNER;
protected Double PARTNO;
protected Double PAYBON;
protected Double PAYESM;
protected Double PAYESP;
protected Double PAYINC1;
protected Double PAYINC2;
protected Double PAYINC3;
protected Double PAYINC4;
protected Double PAYINC5;
protected Double PAYINC6;
protected Double PAYPER;
protected Double PAYSLP;
protected Double PEARLRS;
protected Double PEMELG;
protected Double PEMELG_I;
protected Double PEMELG_IFLAG;
protected Double PEMMEM;
protected Double PEMMEM_I;
protected Double PEMMEM_IFLAG;
protected Double PEMOFF;
protected Double PEMOFF_I;
protected Double PEMOFF_IFLAG;
protected Integer PERSONW1;
protected Double PERSPROX;
protected Double PEVERC;
protected Double PEVERC_I;
protected Double PEVERC_IFLAG;
protected Double PEVERNC;
protected Double PEVERNC_I;
protected Double PEVERNC_IFLAG;
protected Double PEXPRET;
protected Double PFNUM;
protected Double PFNUM_I;
protected Double PFNUM_IFLAG;
protected Double PFULRET;
protected Double PINCINP;
protected Double POCNMSC;
protected Double POCNMSC_I;
protected Double POCNMSC_IFLAG;
protected Double PPRNMSC;
protected Double PPRNMSC_I;
protected Double PPRNMSC_IFLAG;
protected Double PPYSTP10;
protected Double PRETAIN;
protected Double PRETAIN_I;
protected Double PRETAIN_IFLAG;
protected Double PSCHM_F;
protected Double PSCHM_F_I;
protected Double PSCHM_F_IFLAG;
protected Double PSCHM_S;
protected Double PSCHM_S_I;
protected Double PSCHM_S_IFLAG;
protected Double PSCHM_T;
protected Double PSCHM_T_I;
protected Double PSCHM_T_IFLAG;
protected Double PSIT;
protected Double PSITF;
protected Double PWEXPA;
protected Double PWEXPA_I;
protected Double PWEXPA_IFLAG;
protected Double PWEXPH;
protected Double PWEXPH_I;
protected Double PWEXPH_IFLAG;
protected Double PWID;
protected Double PWIDFUT;
protected Double PWIDFUT_I;
protected Double PWIDFUT_IFLAG;
protected Double P_FLAG1;
protected Double P_FLAG3;
protected Double P_FLAG4;
protected Double QHEALTH1;
protected Double QUALCHK;
protected Double REGLRPY1;
protected Double REGLRPY2;
protected Double RELBUS;
protected Double RENTPAY;
protected Double SCHEMEET;
protected Double SEAMK;
protected Double SEESM;
protected Double SEESW;
protected Double SELECTAD;
protected Double SEMN;
protected Double SEMPSTY;
protected Double SEPEL;
protected Double SEPER;
protected Double SEX;
protected Double SINGPAR;
protected Double SJEMP1;
protected Double SJEMP2;
protected Double SJOB2;
protected Double SOLO;
protected Double STARTJ;
protected Double STAT;
protected Double STAT_I;
protected Double SVISE;
protected Double TBENEF;
protected Double TBENNUM;
protected Double TEA;
protected Double TINTRO;
protected Double TOTPEN;
protected Double TSETT;
protected Double TYPE;
protected Double UNMTYP;
protected Double UNUMBD;
protected Double UNUMBD_I;
protected Double UNUMBD_IFLAG;
protected Double UNUMHS;
protected Double UNUMHS_I;
protected Double UNUMHS_IFLAG;
protected Double UNUMLA;
protected Double UNUMLA_I;
protected Double UNUMLA_IFLAG;
protected Double UNUMOV;
protected Double UNUMOV_I;
protected Double UNUMOV_IFLAG;
protected Double UNUMRE;
protected Double UNUMRE_I;
protected Double UNUMRE_IFLAG;
protected Double UPROP1;
protected Double UPROP1_I;
protected Double UPROP2;
protected Double UPROP2_I;
protected Double UPROP3;
protected Double UPROP3_I;
protected Double UPROP4;
protected Double UPROP4_I;
protected Double UPRSH1;
protected Double UPRSH2;
protected Double UPRSH3;
protected Double UPRSH4;
protected Double UPRSH5;
protected Double WORKAGE;
protected Double WRKING;
protected Double XINSOL;
protected Double XINTYP;
protected Double YEAR;
protected Double YINACT;
protected final void initATTEND(String s) {
if (!s.trim().isEmpty()) {
ATTEND = new Double(s);
}
}

protected final void initBACCBEG2(String s) {
if (!s.trim().isEmpty()) {
BACCBEG2 = s;
}
}

protected final void initBACCBEG3(String s) {
if (!s.trim().isEmpty()) {
BACCBEG3 = s;
}
}

protected final void initBACCSA2(String s) {
if (!s.trim().isEmpty()) {
BACCSA2 = new Double(s);
}
}

protected final void initBACCSA3(String s) {
if (!s.trim().isEmpty()) {
BACCSA3 = new Double(s);
}
}

protected final void initBACCSB2(String s) {
if (!s.trim().isEmpty()) {
BACCSB2 = new Double(s);
}
}

protected final void initBACCSB3(String s) {
if (!s.trim().isEmpty()) {
BACCSB3 = new Double(s);
}
}

protected final void initBBEFORE2(String s) {
if (!s.trim().isEmpty()) {
BBEFORE2 = new Double(s);
}
}

protected final void initBBEFORE3(String s) {
if (!s.trim().isEmpty()) {
BBEFORE3 = new Double(s);
}
}

protected final void initBDEBTS2(String s) {
if (!s.trim().isEmpty()) {
BDEBTS2 = new Double(s);
}
}

protected final void initBDEBTS3(String s) {
if (!s.trim().isEmpty()) {
BDEBTS3 = new Double(s);
}
}

protected final void initBDIRNI2(String s) {
if (!s.trim().isEmpty()) {
BDIRNI2 = new Double(s);
}
}

protected final void initBDIRNI3(String s) {
if (!s.trim().isEmpty()) {
BDIRNI3 = new Double(s);
}
}

protected final void initBDOCS2(String s) {
if (!s.trim().isEmpty()) {
BDOCS2 = new Double(s);
}
}

protected final void initBDOCS3(String s) {
if (!s.trim().isEmpty()) {
BDOCS3 = new Double(s);
}
}

protected final void initBEMPN2(String s) {
if (!s.trim().isEmpty()) {
BEMPN2 = new Double(s);
}
}

protected final void initBEMPN3(String s) {
if (!s.trim().isEmpty()) {
BEMPN3 = new Double(s);
}
}

protected final void initBFUND1(String s) {
if (!s.trim().isEmpty()) {
BFUND1 = new Double(s);
}
}

protected final void initBFUND10(String s) {
if (!s.trim().isEmpty()) {
BFUND10 = new Double(s);
}
}

protected final void initBFUND17(String s) {
if (!s.trim().isEmpty()) {
BFUND17 = new Double(s);
}
}

protected final void initBFUND2(String s) {
if (!s.trim().isEmpty()) {
BFUND2 = new Double(s);
}
}

protected final void initBFUND9(String s) {
if (!s.trim().isEmpty()) {
BFUND9 = new Double(s);
}
}

protected final void initBMOREBUS(String s) {
if (!s.trim().isEmpty()) {
BMOREBUS = new Double(s);
}
}

protected final void initBNATINS2(String s) {
if (!s.trim().isEmpty()) {
BNATINS2 = new Double(s);
}
}

protected final void initBNATINS3(String s) {
if (!s.trim().isEmpty()) {
BNATINS3 = new Double(s);
}
}

protected final void initBONTAX(String s) {
if (!s.trim().isEmpty()) {
BONTAX = new Double(s);
}
}

protected final void initBOWED2(String s) {
if (!s.trim().isEmpty()) {
BOWED2 = new Double(s);
}
}

protected final void initBOWED3(String s) {
if (!s.trim().isEmpty()) {
BOWED3 = new Double(s);
}
}

protected final void initBOWN2(String s) {
if (!s.trim().isEmpty()) {
BOWN2 = new Double(s);
}
}

protected final void initBOWN3(String s) {
if (!s.trim().isEmpty()) {
BOWN3 = new Double(s);
}
}

protected final void initBPART2(String s) {
if (!s.trim().isEmpty()) {
BPART2 = new Double(s);
}
}

protected final void initBPART3(String s) {
if (!s.trim().isEmpty()) {
BPART3 = new Double(s);
}
}

protected final void initBPAST(String s) {
if (!s.trim().isEmpty()) {
BPAST = new Double(s);
}
}

protected final void initBPROFIT2(String s) {
if (!s.trim().isEmpty()) {
BPROFIT2 = new Double(s);
}
}

protected final void initBPROFIT3(String s) {
if (!s.trim().isEmpty()) {
BPROFIT3 = new Double(s);
}
}

protected final void initBPROPN2(String s) {
if (!s.trim().isEmpty()) {
BPROPN2 = new Double(s);
}
}

protected final void initBPROPN3(String s) {
if (!s.trim().isEmpty()) {
BPROPN3 = new Double(s);
}
}

protected final void initBRETIRE2(String s) {
if (!s.trim().isEmpty()) {
BRETIRE2 = new Double(s);
}
}

protected final void initBRETIRE3(String s) {
if (!s.trim().isEmpty()) {
BRETIRE3 = new Double(s);
}
}

protected final void initBSELLAB(String s) {
if (!s.trim().isEmpty()) {
BSELLAB = new Double(s);
}
}

protected final void initBSELLAM(String s) {
if (!s.trim().isEmpty()) {
BSELLAM = new Double(s);
}
}

protected final void initBSELLTX(String s) {
if (!s.trim().isEmpty()) {
BSELLTX = new Double(s);
}
}

protected final void initBSELLYR(String s) {
if (!s.trim().isEmpty()) {
BSELLYR = new Double(s);
}
}

protected final void initBSIZE2(String s) {
if (!s.trim().isEmpty()) {
BSIZE2 = new Double(s);
}
}

protected final void initBSIZE3(String s) {
if (!s.trim().isEmpty()) {
BSIZE3 = new Double(s);
}
}

protected final void initBSTART2(String s) {
if (!s.trim().isEmpty()) {
BSTART2 = new Double(s);
}
}

protected final void initBSTART3(String s) {
if (!s.trim().isEmpty()) {
BSTART3 = new Double(s);
}
}

protected final void initBTAX2(String s) {
if (!s.trim().isEmpty()) {
BTAX2 = new Double(s);
}
}

protected final void initBTAX3(String s) {
if (!s.trim().isEmpty()) {
BTAX3 = new Double(s);
}
}

protected final void initBTYPE2(String s) {
if (!s.trim().isEmpty()) {
BTYPE2 = new Double(s);
}
}

protected final void initBTYPE3(String s) {
if (!s.trim().isEmpty()) {
BTYPE3 = new Double(s);
}
}

protected final void initBVAL2(String s) {
if (!s.trim().isEmpty()) {
BVAL2 = new Double(s);
}
}

protected final void initBVAL3(String s) {
if (!s.trim().isEmpty()) {
BVAL3 = new Double(s);
}
}

protected final void initBVALB2(String s) {
if (!s.trim().isEmpty()) {
BVALB2 = new Double(s);
}
}

protected final void initBWORTH(String s) {
if (!s.trim().isEmpty()) {
BWORTH = new Double(s);
}
}

protected final void initBWORTHB(String s) {
if (!s.trim().isEmpty()) {
BWORTHB = new Double(s);
}
}

protected final void initBYEAR2(String s) {
if (!s.trim().isEmpty()) {
BYEAR2 = new Double(s);
}
}

protected final void initBYEAR3(String s) {
if (!s.trim().isEmpty()) {
BYEAR3 = new Double(s);
}
}

protected final void initCACTF(String s) {
if (!s.trim().isEmpty()) {
CACTF = new Double(s);
}
}

protected final void initCACTF_I(String s) {
if (!s.trim().isEmpty()) {
CACTF_I = new Double(s);
}
}

protected final void initCACTF_IFLAG(String s) {
if (!s.trim().isEmpty()) {
CACTF_IFLAG = new Double(s);
}
}

protected final void initCACTV(String s) {
if (!s.trim().isEmpty()) {
CACTV = new Double(s);
}
}

protected final void initCACTV_I(String s) {
if (!s.trim().isEmpty()) {
CACTV_I = new Double(s);
}
}

protected final void initCACTV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
CACTV_IFLAG = new Double(s);
}
}

protected final void initCASAV(String s) {
if (!s.trim().isEmpty()) {
CASAV = new Double(s);
}
}

protected final void initCASAV_I(String s) {
if (!s.trim().isEmpty()) {
CASAV_I = new Double(s);
}
}

protected final void initCASAV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
CASAV_IFLAG = new Double(s);
}
}

protected final void initCASEW1(String s) {
if (!s.trim().isEmpty()) {
CASEW1 = new Integer(s);
}
}

protected final void initCASVB(String s) {
if (!s.trim().isEmpty()) {
CASVB = new Double(s);
}
}

protected final void initCASVV(String s) {
if (!s.trim().isEmpty()) {
CASVV = new Double(s);
}
}

protected final void initCASVV_I(String s) {
if (!s.trim().isEmpty()) {
CASVV_I = new Double(s);
}
}

protected final void initCASVV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
CASVV_IFLAG = new Double(s);
}
}

protected final void initCOURSE(String s) {
if (!s.trim().isEmpty()) {
COURSE = new Double(s);
}
}

protected final void initCURRAC(String s) {
if (!s.trim().isEmpty()) {
CURRAC = new Double(s);
}
}

protected final void initDBURD(String s) {
if (!s.trim().isEmpty()) {
DBURD = new Double(s);
}
}

protected final void initDBURDA(String s) {
if (!s.trim().isEmpty()) {
DBURDA = new Double(s);
}
}

protected final void initDCAMC2(String s) {
if (!s.trim().isEmpty()) {
DCAMC2 = new Double(s);
}
}

protected final void initDCAMC3(String s) {
if (!s.trim().isEmpty()) {
DCAMC3 = new Double(s);
}
}

protected final void initDCAMD2(String s) {
if (!s.trim().isEmpty()) {
DCAMD2 = new Double(s);
}
}

protected final void initDCAMD3(String s) {
if (!s.trim().isEmpty()) {
DCAMD3 = new Double(s);
}
}

protected final void initDCAMP2(String s) {
if (!s.trim().isEmpty()) {
DCAMP2 = new Double(s);
}
}

protected final void initDCAMP3(String s) {
if (!s.trim().isEmpty()) {
DCAMP3 = new Double(s);
}
}

protected final void initDCANU(String s) {
if (!s.trim().isEmpty()) {
DCANU = new Double(s);
}
}

protected final void initDCANY(String s) {
if (!s.trim().isEmpty()) {
DCANY = new Double(s);
}
}

protected final void initDCCOS2(String s) {
if (!s.trim().isEmpty()) {
DCCOS2 = new Double(s);
}
}

protected final void initDCCOS3(String s) {
if (!s.trim().isEmpty()) {
DCCOS3 = new Double(s);
}
}

protected final void initDCCSP2(String s) {
if (!s.trim().isEmpty()) {
DCCSP2 = new Double(s);
}
}

protected final void initDCCSP3(String s) {
if (!s.trim().isEmpty()) {
DCCSP3 = new Double(s);
}
}

protected final void initDCESB2(String s) {
if (!s.trim().isEmpty()) {
DCESB2 = new Double(s);
}
}

protected final void initDCESB3(String s) {
if (!s.trim().isEmpty()) {
DCESB3 = new Double(s);
}
}

protected final void initDCINZ2(String s) {
if (!s.trim().isEmpty()) {
DCINZ2 = new Double(s);
}
}

protected final void initDCINZ3(String s) {
if (!s.trim().isEmpty()) {
DCINZ3 = new Double(s);
}
}

protected final void initDCNAM2(String s) {
if (!s.trim().isEmpty()) {
DCNAM2 = new Double(s);
}
}

protected final void initDCNAM3(String s) {
if (!s.trim().isEmpty()) {
DCNAM3 = new Double(s);
}
}

protected final void initDCOINV2(String s) {
if (!s.trim().isEmpty()) {
DCOINV2 = new Double(s);
}
}

protected final void initDCOINV2_I(String s) {
if (!s.trim().isEmpty()) {
DCOINV2_I = new Double(s);
}
}

protected final void initDCOINV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCOINV2_IFLAG = new Double(s);
}
}

protected final void initDCOINV3(String s) {
if (!s.trim().isEmpty()) {
DCOINV3 = new Double(s);
}
}

protected final void initDCOINVB2(String s) {
if (!s.trim().isEmpty()) {
DCOINVB2 = new Double(s);
}
}

protected final void initDCOINVB3(String s) {
if (!s.trim().isEmpty()) {
DCOINVB3 = new Double(s);
}
}

protected final void initDCONM1(String s) {
if (!s.trim().isEmpty()) {
DCONM1 = new Double(s);
}
}

protected final void initDCONM2(String s) {
if (!s.trim().isEmpty()) {
DCONM2 = new Double(s);
}
}

protected final void initDCONM3(String s) {
if (!s.trim().isEmpty()) {
DCONM3 = new Double(s);
}
}

protected final void initDCONM4(String s) {
if (!s.trim().isEmpty()) {
DCONM4 = new Double(s);
}
}

protected final void initDCONM5(String s) {
if (!s.trim().isEmpty()) {
DCONM5 = new Double(s);
}
}

protected final void initDCONM6(String s) {
if (!s.trim().isEmpty()) {
DCONM6 = new Double(s);
}
}

protected final void initDCOSHV2(String s) {
if (!s.trim().isEmpty()) {
DCOSHV2 = new Double(s);
}
}

protected final void initDCOSHV2_I(String s) {
if (!s.trim().isEmpty()) {
DCOSHV2_I = new Double(s);
}
}

protected final void initDCOSHV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCOSHV2_IFLAG = new Double(s);
}
}

protected final void initDCOSHV3(String s) {
if (!s.trim().isEmpty()) {
DCOSHV3 = new Double(s);
}
}

protected final void initDCOSHVB2(String s) {
if (!s.trim().isEmpty()) {
DCOSHVB2 = new Double(s);
}
}

protected final void initDCPER2(String s) {
if (!s.trim().isEmpty()) {
DCPER2 = new Double(s);
}
}

protected final void initDCPER3(String s) {
if (!s.trim().isEmpty()) {
DCPER3 = new Double(s);
}
}

protected final void initDCREC2(String s) {
if (!s.trim().isEmpty()) {
DCREC2 = new Double(s);
}
}

protected final void initDCREC3(String s) {
if (!s.trim().isEmpty()) {
DCREC3 = new Double(s);
}
}

protected final void initDCRSP2(String s) {
if (!s.trim().isEmpty()) {
DCRSP2 = new Double(s);
}
}

protected final void initDCRSP3(String s) {
if (!s.trim().isEmpty()) {
DCRSP3 = new Double(s);
}
}

protected final void initDHBAMT01(String s) {
if (!s.trim().isEmpty()) {
DHBAMT01 = new Double(s);
}
}

protected final void initDHBAMT01_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT01_I = new Double(s);
}
}

protected final void initDHBAMT01_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT01_IFLAG = new Double(s);
}
}

protected final void initDHBAMT02(String s) {
if (!s.trim().isEmpty()) {
DHBAMT02 = new Double(s);
}
}

protected final void initDHBAMT02_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT02_I = new Double(s);
}
}

protected final void initDHBAMT02_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT02_IFLAG = new Double(s);
}
}

protected final void initDHBAMT03(String s) {
if (!s.trim().isEmpty()) {
DHBAMT03 = new Double(s);
}
}

protected final void initDHBAMT03_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT03_I = new Double(s);
}
}

protected final void initDHBAMT03_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT03_IFLAG = new Double(s);
}
}

protected final void initDHBAMT04(String s) {
if (!s.trim().isEmpty()) {
DHBAMT04 = new Double(s);
}
}

protected final void initDHBAMT04_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT04_I = new Double(s);
}
}

protected final void initDHBAMT04_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT04_IFLAG = new Double(s);
}
}

protected final void initDHBAMT05(String s) {
if (!s.trim().isEmpty()) {
DHBAMT05 = new Double(s);
}
}

protected final void initDHBAMT05_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT05_I = new Double(s);
}
}

protected final void initDHBAMT05_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT05_IFLAG = new Double(s);
}
}

protected final void initDHBAMT06(String s) {
if (!s.trim().isEmpty()) {
DHBAMT06 = new Double(s);
}
}

protected final void initDHBAMT06_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT06_I = new Double(s);
}
}

protected final void initDHBAMT06_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT06_IFLAG = new Double(s);
}
}

protected final void initDHBAMT07(String s) {
if (!s.trim().isEmpty()) {
DHBAMT07 = new Double(s);
}
}

protected final void initDHBAMT07_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT07_I = new Double(s);
}
}

protected final void initDHBAMT07_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT07_IFLAG = new Double(s);
}
}

protected final void initDHBAMT08(String s) {
if (!s.trim().isEmpty()) {
DHBAMT08 = new Double(s);
}
}

protected final void initDHBAMT08_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT08_I = new Double(s);
}
}

protected final void initDHBAMT08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT08_IFLAG = new Double(s);
}
}

protected final void initDHBAMT09(String s) {
if (!s.trim().isEmpty()) {
DHBAMT09 = new Double(s);
}
}

protected final void initDHBAMT09_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT09_I = new Double(s);
}
}

protected final void initDHBAMT09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT09_IFLAG = new Double(s);
}
}

protected final void initDHBAMT10(String s) {
if (!s.trim().isEmpty()) {
DHBAMT10 = new Double(s);
}
}

protected final void initDHBAMT10_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT10_I = new Double(s);
}
}

protected final void initDHBAMT10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT10_IFLAG = new Double(s);
}
}

protected final void initDHBAMT11(String s) {
if (!s.trim().isEmpty()) {
DHBAMT11 = new Double(s);
}
}

protected final void initDHBAMT11_I(String s) {
if (!s.trim().isEmpty()) {
DHBAMT11_I = new Double(s);
}
}

protected final void initDHBAMT11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBAMT11_IFLAG = new Double(s);
}
}

protected final void initDHBANY01(String s) {
if (!s.trim().isEmpty()) {
DHBANY01 = new Double(s);
}
}

protected final void initDHBANY01_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY01_I = new Double(s);
}
}

protected final void initDHBANY01_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY01_IFLAG = new Double(s);
}
}

protected final void initDHBANY02(String s) {
if (!s.trim().isEmpty()) {
DHBANY02 = new Double(s);
}
}

protected final void initDHBANY02_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY02_I = new Double(s);
}
}

protected final void initDHBANY02_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY02_IFLAG = new Double(s);
}
}

protected final void initDHBANY03(String s) {
if (!s.trim().isEmpty()) {
DHBANY03 = new Double(s);
}
}

protected final void initDHBANY03_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY03_I = new Double(s);
}
}

protected final void initDHBANY03_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY03_IFLAG = new Double(s);
}
}

protected final void initDHBANY04(String s) {
if (!s.trim().isEmpty()) {
DHBANY04 = new Double(s);
}
}

protected final void initDHBANY04_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY04_I = new Double(s);
}
}

protected final void initDHBANY04_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY04_IFLAG = new Double(s);
}
}

protected final void initDHBANY05(String s) {
if (!s.trim().isEmpty()) {
DHBANY05 = new Double(s);
}
}

protected final void initDHBANY05_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY05_I = new Double(s);
}
}

protected final void initDHBANY05_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY05_IFLAG = new Double(s);
}
}

protected final void initDHBANY06(String s) {
if (!s.trim().isEmpty()) {
DHBANY06 = new Double(s);
}
}

protected final void initDHBANY06_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY06_I = new Double(s);
}
}

protected final void initDHBANY06_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY06_IFLAG = new Double(s);
}
}

protected final void initDHBANY07(String s) {
if (!s.trim().isEmpty()) {
DHBANY07 = new Double(s);
}
}

protected final void initDHBANY07_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY07_I = new Double(s);
}
}

protected final void initDHBANY07_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY07_IFLAG = new Double(s);
}
}

protected final void initDHBEST01(String s) {
if (!s.trim().isEmpty()) {
DHBEST01 = new Double(s);
}
}

protected final void initDHBEST02(String s) {
if (!s.trim().isEmpty()) {
DHBEST02 = new Double(s);
}
}

protected final void initDHBEST03(String s) {
if (!s.trim().isEmpty()) {
DHBEST03 = new Double(s);
}
}

protected final void initDHBEST04(String s) {
if (!s.trim().isEmpty()) {
DHBEST04 = new Double(s);
}
}

protected final void initDHBEST05(String s) {
if (!s.trim().isEmpty()) {
DHBEST05 = new Double(s);
}
}

protected final void initDHBEST06(String s) {
if (!s.trim().isEmpty()) {
DHBEST06 = new Double(s);
}
}

protected final void initDHBEST07(String s) {
if (!s.trim().isEmpty()) {
DHBEST07 = new Double(s);
}
}

protected final void initDHBEST08(String s) {
if (!s.trim().isEmpty()) {
DHBEST08 = new Double(s);
}
}

protected final void initDHBEST09(String s) {
if (!s.trim().isEmpty()) {
DHBEST09 = new Double(s);
}
}

protected final void initDHBEST10(String s) {
if (!s.trim().isEmpty()) {
DHBEST10 = new Double(s);
}
}

protected final void initDHBEST11(String s) {
if (!s.trim().isEmpty()) {
DHBEST11 = new Double(s);
}
}

protected final void initDHBFIX(String s) {
if (!s.trim().isEmpty()) {
DHBFIX = new Double(s);
}
}

protected final void initDHPANY1(String s) {
if (!s.trim().isEmpty()) {
DHPANY1 = new Double(s);
}
}

protected final void initDHPANY1_I(String s) {
if (!s.trim().isEmpty()) {
DHPANY1_I = new Double(s);
}
}

protected final void initDHPANY1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPANY1_IFLAG = new Double(s);
}
}

protected final void initDHPANY2(String s) {
if (!s.trim().isEmpty()) {
DHPANY2 = new Double(s);
}
}

protected final void initDHPANY2_I(String s) {
if (!s.trim().isEmpty()) {
DHPANY2_I = new Double(s);
}
}

protected final void initDHPANY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPANY2_IFLAG = new Double(s);
}
}

protected final void initDHPANY3(String s) {
if (!s.trim().isEmpty()) {
DHPANY3 = new Double(s);
}
}

protected final void initDHPANY3_I(String s) {
if (!s.trim().isEmpty()) {
DHPANY3_I = new Double(s);
}
}

protected final void initDHPANY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPANY3_IFLAG = new Double(s);
}
}

protected final void initDHPBEH2(String s) {
if (!s.trim().isEmpty()) {
DHPBEH2 = new Double(s);
}
}

protected final void initDHPBEH2_I(String s) {
if (!s.trim().isEmpty()) {
DHPBEH2_I = new Double(s);
}
}

protected final void initDHPBEH2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPBEH2_IFLAG = new Double(s);
}
}

protected final void initDHPEST2(String s) {
if (!s.trim().isEmpty()) {
DHPEST2 = new Double(s);
}
}

protected final void initDHPINS2(String s) {
if (!s.trim().isEmpty()) {
DHPINS2 = new Double(s);
}
}

protected final void initDHPINS2_I(String s) {
if (!s.trim().isEmpty()) {
DHPINS2_I = new Double(s);
}
}

protected final void initDHPINS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPINS2_IFLAG = new Double(s);
}
}

protected final void initDHPINT2(String s) {
if (!s.trim().isEmpty()) {
DHPINT2 = new Double(s);
}
}

protected final void initDHPNUM(String s) {
if (!s.trim().isEmpty()) {
DHPNUM = new Double(s);
}
}

protected final void initDHPNUM_I(String s) {
if (!s.trim().isEmpty()) {
DHPNUM_I = new Double(s);
}
}

protected final void initDHPNUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPNUM_IFLAG = new Double(s);
}
}

protected final void initDHPOFT2(String s) {
if (!s.trim().isEmpty()) {
DHPOFT2 = new Double(s);
}
}

protected final void initDHPOFT2_I(String s) {
if (!s.trim().isEmpty()) {
DHPOFT2_I = new Double(s);
}
}

protected final void initDHPOFT2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPOFT2_IFLAG = new Double(s);
}
}

protected final void initDHPOWE2(String s) {
if (!s.trim().isEmpty()) {
DHPOWE2 = new Double(s);
}
}

protected final void initDHPOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DHPOWE2_I = new Double(s);
}
}

protected final void initDHPOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPOWE2_IFLAG = new Double(s);
}
}

protected final void initDHPWEST2(String s) {
if (!s.trim().isEmpty()) {
DHPWEST2 = new Double(s);
}
}

protected final void initDHPWHNM2(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM2 = new Double(s);
}
}

protected final void initDHPWHNM2_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM2_I = new Double(s);
}
}

protected final void initDHPWHNM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM2_IFLAG = new Double(s);
}
}

protected final void initDHPWHNY2(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY2 = new Double(s);
}
}

protected final void initDHPWHNY2_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY2_I = new Double(s);
}
}

protected final void initDHPWHNY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY2_IFLAG = new Double(s);
}
}

protected final void initDISEVER(String s) {
if (!s.trim().isEmpty()) {
DISEVER = new Double(s);
}
}

protected final void initDISTYPE1(String s) {
if (!s.trim().isEmpty()) {
DISTYPE1 = new Double(s);
}
}

protected final void initDISTYPE2(String s) {
if (!s.trim().isEmpty()) {
DISTYPE2 = new Double(s);
}
}

protected final void initDISTYPE3(String s) {
if (!s.trim().isEmpty()) {
DISTYPE3 = new Double(s);
}
}

protected final void initDISTYPE4(String s) {
if (!s.trim().isEmpty()) {
DISTYPE4 = new Double(s);
}
}

protected final void initDISTYPE5(String s) {
if (!s.trim().isEmpty()) {
DISTYPE5 = new Double(s);
}
}

protected final void initDISTYPE6(String s) {
if (!s.trim().isEmpty()) {
DISTYPE6 = new Double(s);
}
}

protected final void initDISTYPE7(String s) {
if (!s.trim().isEmpty()) {
DISTYPE7 = new Double(s);
}
}

protected final void initDISTYPE8(String s) {
if (!s.trim().isEmpty()) {
DISTYPE8 = new Double(s);
}
}

protected final void initDISTYPE9(String s) {
if (!s.trim().isEmpty()) {
DISTYPE9 = new Double(s);
}
}

protected final void initDLANY(String s) {
if (!s.trim().isEmpty()) {
DLANY = new Double(s);
}
}

protected final void initDLANY_I(String s) {
if (!s.trim().isEmpty()) {
DLANY_I = new Double(s);
}
}

protected final void initDLANY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLANY_IFLAG = new Double(s);
}
}

protected final void initDLBEH2(String s) {
if (!s.trim().isEmpty()) {
DLBEH2 = new Double(s);
}
}

protected final void initDLBEH2_I(String s) {
if (!s.trim().isEmpty()) {
DLBEH2_I = new Double(s);
}
}

protected final void initDLBEH2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLBEH2_IFLAG = new Double(s);
}
}

protected final void initDLBEH3(String s) {
if (!s.trim().isEmpty()) {
DLBEH3 = new Double(s);
}
}

protected final void initDLBEH3_I(String s) {
if (!s.trim().isEmpty()) {
DLBEH3_I = new Double(s);
}
}

protected final void initDLBEH3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLBEH3_IFLAG = new Double(s);
}
}

protected final void initDLBEH4(String s) {
if (!s.trim().isEmpty()) {
DLBEH4 = new Double(s);
}
}

protected final void initDLBEH4_I(String s) {
if (!s.trim().isEmpty()) {
DLBEH4_I = new Double(s);
}
}

protected final void initDLBEH4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLBEH4_IFLAG = new Double(s);
}
}

protected final void initDLBEH5(String s) {
if (!s.trim().isEmpty()) {
DLBEH5 = new Double(s);
}
}

protected final void initDLBEH5_I(String s) {
if (!s.trim().isEmpty()) {
DLBEH5_I = new Double(s);
}
}

protected final void initDLBEH5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLBEH5_IFLAG = new Double(s);
}
}

protected final void initDLEST2(String s) {
if (!s.trim().isEmpty()) {
DLEST2 = new Double(s);
}
}

protected final void initDLEST3(String s) {
if (!s.trim().isEmpty()) {
DLEST3 = new Double(s);
}
}

protected final void initDLEST4(String s) {
if (!s.trim().isEmpty()) {
DLEST4 = new Double(s);
}
}

protected final void initDLINS2(String s) {
if (!s.trim().isEmpty()) {
DLINS2 = new Double(s);
}
}

protected final void initDLINS2_I(String s) {
if (!s.trim().isEmpty()) {
DLINS2_I = new Double(s);
}
}

protected final void initDLINS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLINS2_IFLAG = new Double(s);
}
}

protected final void initDLINS3(String s) {
if (!s.trim().isEmpty()) {
DLINS3 = new Double(s);
}
}

protected final void initDLINS3_I(String s) {
if (!s.trim().isEmpty()) {
DLINS3_I = new Double(s);
}
}

protected final void initDLINS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLINS3_IFLAG = new Double(s);
}
}

protected final void initDLINS4(String s) {
if (!s.trim().isEmpty()) {
DLINS4 = new Double(s);
}
}

protected final void initDLINS4_I(String s) {
if (!s.trim().isEmpty()) {
DLINS4_I = new Double(s);
}
}

protected final void initDLINS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLINS4_IFLAG = new Double(s);
}
}

protected final void initDLINS5(String s) {
if (!s.trim().isEmpty()) {
DLINS5 = new Double(s);
}
}

protected final void initDLINS5_I(String s) {
if (!s.trim().isEmpty()) {
DLINS5_I = new Double(s);
}
}

protected final void initDLINS5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLINS5_IFLAG = new Double(s);
}
}

protected final void initDLINT2(String s) {
if (!s.trim().isEmpty()) {
DLINT2 = new Double(s);
}
}

protected final void initDLINT3(String s) {
if (!s.trim().isEmpty()) {
DLINT3 = new Double(s);
}
}

protected final void initDLINT4(String s) {
if (!s.trim().isEmpty()) {
DLINT4 = new Double(s);
}
}

protected final void initDLINT5(String s) {
if (!s.trim().isEmpty()) {
DLINT5 = new Double(s);
}
}

protected final void initDLNUM(String s) {
if (!s.trim().isEmpty()) {
DLNUM = new Double(s);
}
}

protected final void initDLNUM_I(String s) {
if (!s.trim().isEmpty()) {
DLNUM_I = new Double(s);
}
}

protected final void initDLNUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLNUM_IFLAG = new Double(s);
}
}

protected final void initDLOFT2(String s) {
if (!s.trim().isEmpty()) {
DLOFT2 = new Double(s);
}
}

protected final void initDLOFT2_I(String s) {
if (!s.trim().isEmpty()) {
DLOFT2_I = new Double(s);
}
}

protected final void initDLOFT2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOFT2_IFLAG = new Double(s);
}
}

protected final void initDLOFT3(String s) {
if (!s.trim().isEmpty()) {
DLOFT3 = new Double(s);
}
}

protected final void initDLOFT3_I(String s) {
if (!s.trim().isEmpty()) {
DLOFT3_I = new Double(s);
}
}

protected final void initDLOFT3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOFT3_IFLAG = new Double(s);
}
}

protected final void initDLOFT4(String s) {
if (!s.trim().isEmpty()) {
DLOFT4 = new Double(s);
}
}

protected final void initDLOFT4_I(String s) {
if (!s.trim().isEmpty()) {
DLOFT4_I = new Double(s);
}
}

protected final void initDLOFT4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOFT4_IFLAG = new Double(s);
}
}

protected final void initDLOFT5(String s) {
if (!s.trim().isEmpty()) {
DLOFT5 = new Double(s);
}
}

protected final void initDLOFT5_I(String s) {
if (!s.trim().isEmpty()) {
DLOFT5_I = new Double(s);
}
}

protected final void initDLOFT5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOFT5_IFLAG = new Double(s);
}
}

protected final void initDLOWE2(String s) {
if (!s.trim().isEmpty()) {
DLOWE2 = new Double(s);
}
}

protected final void initDLOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DLOWE2_I = new Double(s);
}
}

protected final void initDLOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOWE2_IFLAG = new Double(s);
}
}

protected final void initDLOWE3(String s) {
if (!s.trim().isEmpty()) {
DLOWE3 = new Double(s);
}
}

protected final void initDLOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DLOWE3_I = new Double(s);
}
}

protected final void initDLOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOWE3_IFLAG = new Double(s);
}
}

protected final void initDLOWE4(String s) {
if (!s.trim().isEmpty()) {
DLOWE4 = new Double(s);
}
}

protected final void initDLOWE4_I(String s) {
if (!s.trim().isEmpty()) {
DLOWE4_I = new Double(s);
}
}

protected final void initDLOWE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOWE4_IFLAG = new Double(s);
}
}

protected final void initDLOWE5(String s) {
if (!s.trim().isEmpty()) {
DLOWE5 = new Double(s);
}
}

protected final void initDLOWE5_I(String s) {
if (!s.trim().isEmpty()) {
DLOWE5_I = new Double(s);
}
}

protected final void initDLOWE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLOWE5_IFLAG = new Double(s);
}
}

protected final void initDLSEC2(String s) {
if (!s.trim().isEmpty()) {
DLSEC2 = new Double(s);
}
}

protected final void initDLSEC3(String s) {
if (!s.trim().isEmpty()) {
DLSEC3 = new Double(s);
}
}

protected final void initDLSEC4(String s) {
if (!s.trim().isEmpty()) {
DLSEC4 = new Double(s);
}
}

protected final void initDLSEC5(String s) {
if (!s.trim().isEmpty()) {
DLSEC5 = new Double(s);
}
}

protected final void initDLTYPE2(String s) {
if (!s.trim().isEmpty()) {
DLTYPE2 = new Double(s);
}
}

protected final void initDLTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
DLTYPE2_I = new Double(s);
}
}

protected final void initDLTYPE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLTYPE2_IFLAG = new Double(s);
}
}

protected final void initDLTYPE3(String s) {
if (!s.trim().isEmpty()) {
DLTYPE3 = new Double(s);
}
}

protected final void initDLTYPE3_I(String s) {
if (!s.trim().isEmpty()) {
DLTYPE3_I = new Double(s);
}
}

protected final void initDLTYPE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLTYPE3_IFLAG = new Double(s);
}
}

protected final void initDLTYPE4(String s) {
if (!s.trim().isEmpty()) {
DLTYPE4 = new Double(s);
}
}

protected final void initDLTYPE4_I(String s) {
if (!s.trim().isEmpty()) {
DLTYPE4_I = new Double(s);
}
}

protected final void initDLTYPE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLTYPE4_IFLAG = new Double(s);
}
}

protected final void initDLTYPE5(String s) {
if (!s.trim().isEmpty()) {
DLTYPE5 = new Double(s);
}
}

protected final void initDLTYPE5_I(String s) {
if (!s.trim().isEmpty()) {
DLTYPE5_I = new Double(s);
}
}

protected final void initDLTYPE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLTYPE5_IFLAG = new Double(s);
}
}

protected final void initDLWEST2(String s) {
if (!s.trim().isEmpty()) {
DLWEST2 = new Double(s);
}
}

protected final void initDLWEST3(String s) {
if (!s.trim().isEmpty()) {
DLWEST3 = new Double(s);
}
}

protected final void initDLWEST4(String s) {
if (!s.trim().isEmpty()) {
DLWEST4 = new Double(s);
}
}

protected final void initDLWEST5(String s) {
if (!s.trim().isEmpty()) {
DLWEST5 = new Double(s);
}
}

protected final void initDLWHNM2(String s) {
if (!s.trim().isEmpty()) {
DLWHNM2 = new Double(s);
}
}

protected final void initDLWHNM2_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNM2_I = new Double(s);
}
}

protected final void initDLWHNM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNM2_IFLAG = new Double(s);
}
}

protected final void initDLWHNM3(String s) {
if (!s.trim().isEmpty()) {
DLWHNM3 = new Double(s);
}
}

protected final void initDLWHNM3_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNM3_I = new Double(s);
}
}

protected final void initDLWHNM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNM3_IFLAG = new Double(s);
}
}

protected final void initDLWHNM4(String s) {
if (!s.trim().isEmpty()) {
DLWHNM4 = new Double(s);
}
}

protected final void initDLWHNM4_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNM4_I = new Double(s);
}
}

protected final void initDLWHNM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNM4_IFLAG = new Double(s);
}
}

protected final void initDLWHNM5(String s) {
if (!s.trim().isEmpty()) {
DLWHNM5 = new Double(s);
}
}

protected final void initDLWHNM5_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNM5_I = new Double(s);
}
}

protected final void initDLWHNM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNM5_IFLAG = new Double(s);
}
}

protected final void initDLWHNY2(String s) {
if (!s.trim().isEmpty()) {
DLWHNY2 = new Double(s);
}
}

protected final void initDLWHNY2_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNY2_I = new Double(s);
}
}

protected final void initDLWHNY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNY2_IFLAG = new Double(s);
}
}

protected final void initDLWHNY3(String s) {
if (!s.trim().isEmpty()) {
DLWHNY3 = new Double(s);
}
}

protected final void initDLWHNY3_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNY3_I = new Double(s);
}
}

protected final void initDLWHNY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNY3_IFLAG = new Double(s);
}
}

protected final void initDLWHNY4(String s) {
if (!s.trim().isEmpty()) {
DLWHNY4 = new Double(s);
}
}

protected final void initDLWHNY4_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNY4_I = new Double(s);
}
}

protected final void initDLWHNY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNY4_IFLAG = new Double(s);
}
}

protected final void initDLWHNY5(String s) {
if (!s.trim().isEmpty()) {
DLWHNY5 = new Double(s);
}
}

protected final void initDLWHNY5_I(String s) {
if (!s.trim().isEmpty()) {
DLWHNY5_I = new Double(s);
}
}

protected final void initDLWHNY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLWHNY5_IFLAG = new Double(s);
}
}

protected final void initDLWHY1(String s) {
if (!s.trim().isEmpty()) {
DLWHY1 = new Double(s);
}
}

protected final void initDLWHY10(String s) {
if (!s.trim().isEmpty()) {
DLWHY10 = new Double(s);
}
}

protected final void initDLWHY15(String s) {
if (!s.trim().isEmpty()) {
DLWHY15 = new Double(s);
}
}

protected final void initDLWHY16(String s) {
if (!s.trim().isEmpty()) {
DLWHY16 = new Double(s);
}
}

protected final void initDLWHY2(String s) {
if (!s.trim().isEmpty()) {
DLWHY2 = new Double(s);
}
}

protected final void initDLWHY22(String s) {
if (!s.trim().isEmpty()) {
DLWHY22 = new Double(s);
}
}

protected final void initDLWHY23(String s) {
if (!s.trim().isEmpty()) {
DLWHY23 = new Double(s);
}
}

protected final void initDLWHY29(String s) {
if (!s.trim().isEmpty()) {
DLWHY29 = new Double(s);
}
}

protected final void initDLWHY3(String s) {
if (!s.trim().isEmpty()) {
DLWHY3 = new Double(s);
}
}

protected final void initDLWHY4(String s) {
if (!s.trim().isEmpty()) {
DLWHY4 = new Double(s);
}
}

protected final void initDLWHY5(String s) {
if (!s.trim().isEmpty()) {
DLWHY5 = new Double(s);
}
}

protected final void initDLWHY8(String s) {
if (!s.trim().isEmpty()) {
DLWHY8 = new Double(s);
}
}

protected final void initDLWHY9(String s) {
if (!s.trim().isEmpty()) {
DLWHY9 = new Double(s);
}
}

protected final void initDMOANY(String s) {
if (!s.trim().isEmpty()) {
DMOANY = new Double(s);
}
}

protected final void initDMOANY_I(String s) {
if (!s.trim().isEmpty()) {
DMOANY_I = new Double(s);
}
}

protected final void initDMOANY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOANY_IFLAG = new Double(s);
}
}

protected final void initDMOBEH2(String s) {
if (!s.trim().isEmpty()) {
DMOBEH2 = new Double(s);
}
}

protected final void initDMOBEH2_I(String s) {
if (!s.trim().isEmpty()) {
DMOBEH2_I = new Double(s);
}
}

protected final void initDMOBEH2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOBEH2_IFLAG = new Double(s);
}
}

protected final void initDMOEST2(String s) {
if (!s.trim().isEmpty()) {
DMOEST2 = new Double(s);
}
}

protected final void initDMOINS2(String s) {
if (!s.trim().isEmpty()) {
DMOINS2 = new Double(s);
}
}

protected final void initDMOINS2_I(String s) {
if (!s.trim().isEmpty()) {
DMOINS2_I = new Double(s);
}
}

protected final void initDMOINS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOINS2_IFLAG = new Double(s);
}
}

protected final void initDMOINT2(String s) {
if (!s.trim().isEmpty()) {
DMOINT2 = new Double(s);
}
}

protected final void initDMONUM(String s) {
if (!s.trim().isEmpty()) {
DMONUM = new Double(s);
}
}

protected final void initDMONUM_I(String s) {
if (!s.trim().isEmpty()) {
DMONUM_I = new Double(s);
}
}

protected final void initDMONUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMONUM_IFLAG = new Double(s);
}
}

protected final void initDMOOFT2(String s) {
if (!s.trim().isEmpty()) {
DMOOFT2 = new Double(s);
}
}

protected final void initDMOOFT2_I(String s) {
if (!s.trim().isEmpty()) {
DMOOFT2_I = new Double(s);
}
}

protected final void initDMOOFT2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOOFT2_IFLAG = new Double(s);
}
}

protected final void initDMOOWE2(String s) {
if (!s.trim().isEmpty()) {
DMOOWE2 = new Double(s);
}
}

protected final void initDMOOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DMOOWE2_I = new Double(s);
}
}

protected final void initDMOOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOOWE2_IFLAG = new Double(s);
}
}

protected final void initDMOWEST2(String s) {
if (!s.trim().isEmpty()) {
DMOWEST2 = new Double(s);
}
}

protected final void initDMOWHNM2(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM2 = new Double(s);
}
}

protected final void initDMOWHNM2_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM2_I = new Double(s);
}
}

protected final void initDMOWHNM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM2_IFLAG = new Double(s);
}
}

protected final void initDMOWHNY2(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY2 = new Double(s);
}
}

protected final void initDMOWHNY2_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY2_I = new Double(s);
}
}

protected final void initDMOWHNY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY2_IFLAG = new Double(s);
}
}

protected final void initDSAMC2(String s) {
if (!s.trim().isEmpty()) {
DSAMC2 = new Double(s);
}
}

protected final void initDSAMC3(String s) {
if (!s.trim().isEmpty()) {
DSAMC3 = new Double(s);
}
}

protected final void initDSAMD2(String s) {
if (!s.trim().isEmpty()) {
DSAMD2 = new Double(s);
}
}

protected final void initDSAMD3(String s) {
if (!s.trim().isEmpty()) {
DSAMD3 = new Double(s);
}
}

protected final void initDSAMP2(String s) {
if (!s.trim().isEmpty()) {
DSAMP2 = new Double(s);
}
}

protected final void initDSAMP3(String s) {
if (!s.trim().isEmpty()) {
DSAMP3 = new Double(s);
}
}

protected final void initDSANU1(String s) {
if (!s.trim().isEmpty()) {
DSANU1 = new Double(s);
}
}

protected final void initDSANU2(String s) {
if (!s.trim().isEmpty()) {
DSANU2 = new Double(s);
}
}

protected final void initDSANY1(String s) {
if (!s.trim().isEmpty()) {
DSANY1 = new Double(s);
}
}

protected final void initDSANY2(String s) {
if (!s.trim().isEmpty()) {
DSANY2 = new Double(s);
}
}

protected final void initDSCOS2(String s) {
if (!s.trim().isEmpty()) {
DSCOS2 = new Double(s);
}
}

protected final void initDSCOS3(String s) {
if (!s.trim().isEmpty()) {
DSCOS3 = new Double(s);
}
}

protected final void initDSCSP2(String s) {
if (!s.trim().isEmpty()) {
DSCSP2 = new Double(s);
}
}

protected final void initDSCSP3(String s) {
if (!s.trim().isEmpty()) {
DSCSP3 = new Double(s);
}
}

protected final void initDSESB2(String s) {
if (!s.trim().isEmpty()) {
DSESB2 = new Double(s);
}
}

protected final void initDSESB3(String s) {
if (!s.trim().isEmpty()) {
DSESB3 = new Double(s);
}
}

protected final void initDSLAMT2(String s) {
if (!s.trim().isEmpty()) {
DSLAMT2 = new Double(s);
}
}

protected final void initDSLAMT2_I(String s) {
if (!s.trim().isEmpty()) {
DSLAMT2_I = new Double(s);
}
}

protected final void initDSLAMT2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSLAMT2_IFLAG = new Double(s);
}
}

protected final void initDSLAMT3(String s) {
if (!s.trim().isEmpty()) {
DSLAMT3 = new Double(s);
}
}

protected final void initDSLAMT3_I(String s) {
if (!s.trim().isEmpty()) {
DSLAMT3_I = new Double(s);
}
}

protected final void initDSLAMT3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSLAMT3_IFLAG = new Double(s);
}
}

protected final void initDSLAMT4(String s) {
if (!s.trim().isEmpty()) {
DSLAMT4 = new Double(s);
}
}

protected final void initDSLAMT4_I(String s) {
if (!s.trim().isEmpty()) {
DSLAMT4_I = new Double(s);
}
}

protected final void initDSLAMT4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSLAMT4_IFLAG = new Double(s);
}
}

protected final void initDSLAMT5(String s) {
if (!s.trim().isEmpty()) {
DSLAMT5 = new Double(s);
}
}

protected final void initDSLAMT5_I(String s) {
if (!s.trim().isEmpty()) {
DSLAMT5_I = new Double(s);
}
}

protected final void initDSLAMT5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSLAMT5_IFLAG = new Double(s);
}
}

protected final void initDSLEST2(String s) {
if (!s.trim().isEmpty()) {
DSLEST2 = new Double(s);
}
}

protected final void initDSLEST3(String s) {
if (!s.trim().isEmpty()) {
DSLEST3 = new Double(s);
}
}

protected final void initDSLEST4(String s) {
if (!s.trim().isEmpty()) {
DSLEST4 = new Double(s);
}
}

protected final void initDSLEST5(String s) {
if (!s.trim().isEmpty()) {
DSLEST5 = new Double(s);
}
}

protected final void initDSLPAY2(String s) {
if (!s.trim().isEmpty()) {
DSLPAY2 = new Double(s);
}
}

protected final void initDSLPAY3(String s) {
if (!s.trim().isEmpty()) {
DSLPAY3 = new Double(s);
}
}

protected final void initDSLPAY4(String s) {
if (!s.trim().isEmpty()) {
DSLPAY4 = new Double(s);
}
}

protected final void initDSLPAY5(String s) {
if (!s.trim().isEmpty()) {
DSLPAY5 = new Double(s);
}
}

protected final void initDSNAM2(String s) {
if (!s.trim().isEmpty()) {
DSNAM2 = new Double(s);
}
}

protected final void initDSNAM3(String s) {
if (!s.trim().isEmpty()) {
DSNAM3 = new Double(s);
}
}

protected final void initDSONM1(String s) {
if (!s.trim().isEmpty()) {
DSONM1 = new Double(s);
}
}

protected final void initDSONM2(String s) {
if (!s.trim().isEmpty()) {
DSONM2 = new Double(s);
}
}

protected final void initDSONM3(String s) {
if (!s.trim().isEmpty()) {
DSONM3 = new Double(s);
}
}

protected final void initDSONM4(String s) {
if (!s.trim().isEmpty()) {
DSONM4 = new Double(s);
}
}

protected final void initDSONM5(String s) {
if (!s.trim().isEmpty()) {
DSONM5 = new Double(s);
}
}

protected final void initDSONM6(String s) {
if (!s.trim().isEmpty()) {
DSONM6 = new Double(s);
}
}

protected final void initDSPER2(String s) {
if (!s.trim().isEmpty()) {
DSPER2 = new Double(s);
}
}

protected final void initDSREC2(String s) {
if (!s.trim().isEmpty()) {
DSREC2 = new Double(s);
}
}

protected final void initDSREC3(String s) {
if (!s.trim().isEmpty()) {
DSREC3 = new Double(s);
}
}

protected final void initDTJBL(String s) {
if (!s.trim().isEmpty()) {
DTJBL = s;
}
}

protected final void initDVAGE17(String s) {
if (!s.trim().isEmpty()) {
DVAGE17 = new Double(s);
}
}

protected final void initDVANYARR(String s) {
if (!s.trim().isEmpty()) {
DVANYARR = new Double(s);
}
}

protected final void initDVCACTV(String s) {
if (!s.trim().isEmpty()) {
DVCACTV = new Double(s);
}
}

protected final void initDVCASVV(String s) {
if (!s.trim().isEmpty()) {
DVCASVV = new Double(s);
}
}

protected final void initDVCHMARR(String s) {
if (!s.trim().isEmpty()) {
DVCHMARR = new Double(s);
}
}

protected final void initDVCISAV(String s) {
if (!s.trim().isEmpty()) {
DVCISAV = new Double(s);
}
}

protected final void initDVCOINV2(String s) {
if (!s.trim().isEmpty()) {
DVCOINV2 = new Double(s);
}
}

protected final void initDVCOINV3(String s) {
if (!s.trim().isEmpty()) {
DVCOINV3 = new Double(s);
}
}

protected final void initDVCRTARR(String s) {
if (!s.trim().isEmpty()) {
DVCRTARR = new Double(s);
}
}

protected final void initDVCTARR(String s) {
if (!s.trim().isEmpty()) {
DVCTARR = new Double(s);
}
}

protected final void initDVDBINC1(String s) {
if (!s.trim().isEmpty()) {
DVDBINC1 = new Double(s);
}
}

protected final void initDVDBINC2(String s) {
if (!s.trim().isEmpty()) {
DVDBINC2 = new Double(s);
}
}

protected final void initDVDBINC3(String s) {
if (!s.trim().isEmpty()) {
DVDBINC3 = new Double(s);
}
}

protected final void initDVDBINCALL(String s) {
if (!s.trim().isEmpty()) {
DVDBINCALL = new Double(s);
}
}

protected final void initDVDBLUMP1(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP1 = new Double(s);
}
}

protected final void initDVDBLUMP2(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP2 = new Double(s);
}
}

protected final void initDVDBLUMP3(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP3 = new Double(s);
}
}

protected final void initDVDBRWEALTHVAL(String s) {
if (!s.trim().isEmpty()) {
DVDBRWEALTHVAL = new Double(s);
}
}

protected final void initDVDHPOWE2(String s) {
if (!s.trim().isEmpty()) {
DVDHPOWE2 = new Double(s);
}
}

protected final void initDVDLOWE2(String s) {
if (!s.trim().isEmpty()) {
DVDLOWE2 = new Double(s);
}
}

protected final void initDVDLOWE3(String s) {
if (!s.trim().isEmpty()) {
DVDLOWE3 = new Double(s);
}
}

protected final void initDVDLOWE4(String s) {
if (!s.trim().isEmpty()) {
DVDLOWE4 = new Double(s);
}
}

protected final void initDVDMOOWE2(String s) {
if (!s.trim().isEmpty()) {
DVDMOOWE2 = new Double(s);
}
}

protected final void initDVELARR(String s) {
if (!s.trim().isEmpty()) {
DVELARR = new Double(s);
}
}

protected final void initDVFBONDV(String s) {
if (!s.trim().isEmpty()) {
DVFBONDV = new Double(s);
}
}

protected final void initDVFCINVAL(String s) {
if (!s.trim().isEmpty()) {
DVFCINVAL = new Double(s);
}
}

protected final void initDVFCOLLV(String s) {
if (!s.trim().isEmpty()) {
DVFCOLLV = new Double(s);
}
}

protected final void initDVFEOPTV(String s) {
if (!s.trim().isEmpty()) {
DVFEOPTV = new Double(s);
}
}

protected final void initDVFESHAV(String s) {
if (!s.trim().isEmpty()) {
DVFESHAV = new Double(s);
}
}

protected final void initDVFGLTFOV(String s) {
if (!s.trim().isEmpty()) {
DVFGLTFOV = new Double(s);
}
}

protected final void initDVFGLTUKV(String s) {
if (!s.trim().isEmpty()) {
DVFGLTUKV = new Double(s);
}
}

protected final void initDVFINFLV(String s) {
if (!s.trim().isEmpty()) {
DVFINFLV = new Double(s);
}
}

protected final void initDVFINFV(String s) {
if (!s.trim().isEmpty()) {
DVFINFV = new Double(s);
}
}

protected final void initDVFINVOTV(String s) {
if (!s.trim().isEmpty()) {
DVFINVOTV = new Double(s);
}
}

protected final void initDVFLFENV(String s) {
if (!s.trim().isEmpty()) {
DVFLFENV = new Double(s);
}
}

protected final void initDVFLFFSV(String s) {
if (!s.trim().isEmpty()) {
DVFLFFSV = new Double(s);
}
}

protected final void initDVFLFSIV(String s) {
if (!s.trim().isEmpty()) {
DVFLFSIV = new Double(s);
}
}

protected final void initDVFLFTEV(String s) {
if (!s.trim().isEmpty()) {
DVFLFTEV = new Double(s);
}
}

protected final void initDVFNSVAL(String s) {
if (!s.trim().isEmpty()) {
DVFNSVAL = new Double(s);
}
}

protected final void initDVFSHOSV(String s) {
if (!s.trim().isEmpty()) {
DVFSHOSV = new Double(s);
}
}

protected final void initDVFSHUKV(String s) {
if (!s.trim().isEmpty()) {
DVFSHUKV = new Double(s);
}
}

protected final void initDVFSINVAL(String s) {
if (!s.trim().isEmpty()) {
DVFSINVAL = new Double(s);
}
}

protected final void initDVGASARR(String s) {
if (!s.trim().isEmpty()) {
DVGASARR = new Double(s);
}
}

protected final void initDVGRSPAY(String s) {
if (!s.trim().isEmpty()) {
DVGRSPAY = new Double(s);
}
}

protected final void initDVHASAVC(String s) {
if (!s.trim().isEmpty()) {
DVHASAVC = new Double(s);
}
}

protected final void initDVHASDB(String s) {
if (!s.trim().isEmpty()) {
DVHASDB = new Double(s);
}
}

protected final void initDVHASDC(String s) {
if (!s.trim().isEmpty()) {
DVHASDC = new Double(s);
}
}

protected final void initDVHASPFCUR(String s) {
if (!s.trim().isEmpty()) {
DVHASPFCUR = new Double(s);
}
}

protected final void initDVHASPFD(String s) {
if (!s.trim().isEmpty()) {
DVHASPFD = new Double(s);
}
}

protected final void initDVHASPP(String s) {
if (!s.trim().isEmpty()) {
DVHASPP = new Double(s);
}
}

protected final void initDVHPAR(String s) {
if (!s.trim().isEmpty()) {
DVHPAR = new Double(s);
}
}

protected final void initDVIISAV(String s) {
if (!s.trim().isEmpty()) {
DVIISAV = new Double(s);
}
}

protected final void initDVILO3A(String s) {
if (!s.trim().isEmpty()) {
DVILO3A = new Double(s);
}
}

protected final void initDVILO4A(String s) {
if (!s.trim().isEmpty()) {
DVILO4A = new Double(s);
}
}

protected final void initDVJB12ML(String s) {
if (!s.trim().isEmpty()) {
DVJB12ML = new Double(s);
}
}

protected final void initDVKISAV(String s) {
if (!s.trim().isEmpty()) {
DVKISAV = new Double(s);
}
}

protected final void initDVMRDF(String s) {
if (!s.trim().isEmpty()) {
DVMRDF = new Double(s);
}
}

protected final void initDVNETPAY(String s) {
if (!s.trim().isEmpty()) {
DVNETPAY = new Double(s);
}
}

protected final void initDVOTHARR(String s) {
if (!s.trim().isEmpty()) {
DVOTHARR = new Double(s);
}
}

protected final void initDVPAVCUV(String s) {
if (!s.trim().isEmpty()) {
DVPAVCUV = new Double(s);
}
}

protected final void initDVPFCURVAL(String s) {
if (!s.trim().isEmpty()) {
DVPFCURVAL = new Double(s);
}
}

protected final void initDVPFDDV(String s) {
if (!s.trim().isEmpty()) {
DVPFDDV = new Double(s);
}
}

protected final void initDVPINPVAL(String s) {
if (!s.trim().isEmpty()) {
DVPINPVAL = new Double(s);
}
}

protected final void initDVPPVAL(String s) {
if (!s.trim().isEmpty()) {
DVPPVAL = new Double(s);
}
}

protected final void initDVRNTARR(String s) {
if (!s.trim().isEmpty()) {
DVRNTARR = new Double(s);
}
}

protected final void initDVSHCVAL(String s) {
if (!s.trim().isEmpty()) {
DVSHCVAL = new Double(s);
}
}

protected final void initDVSHODVAL2(String s) {
if (!s.trim().isEmpty()) {
DVSHODVAL2 = new Double(s);
}
}

protected final void initDVSHODVAL3(String s) {
if (!s.trim().isEmpty()) {
DVSHODVAL3 = new Double(s);
}
}

protected final void initDVSHSVAL(String s) {
if (!s.trim().isEmpty()) {
DVSHSVAL = new Double(s);
}
}

protected final void initDVSPEN(String s) {
if (!s.trim().isEmpty()) {
DVSPEN = new Double(s);
}
}

protected final void initDVTAXARR(String s) {
if (!s.trim().isEmpty()) {
DVTAXARR = new Double(s);
}
}

protected final void initDVTELARR(String s) {
if (!s.trim().isEmpty()) {
DVTELARR = new Double(s);
}
}

protected final void initDVVALDBLUM(String s) {
if (!s.trim().isEmpty()) {
DVVALDBLUM = new Double(s);
}
}

protected final void initDVVALDBT(String s) {
if (!s.trim().isEmpty()) {
DVVALDBT = new Double(s);
}
}

protected final void initDVVALDCOS(String s) {
if (!s.trim().isEmpty()) {
DVVALDCOS = new Double(s);
}
}

protected final void initDVVALPBLUM(String s) {
if (!s.trim().isEmpty()) {
DVVALPBLUM = new Double(s);
}
}

protected final void initDVVATARR(String s) {
if (!s.trim().isEmpty()) {
DVVATARR = new Double(s);
}
}

protected final void initDVWATARR(String s) {
if (!s.trim().isEmpty()) {
DVWATARR = new Double(s);
}
}

protected final void initEDATTN1(String s) {
if (!s.trim().isEmpty()) {
EDATTN1 = new Double(s);
}
}

protected final void initEDATTN2(String s) {
if (!s.trim().isEmpty()) {
EDATTN2 = new Double(s);
}
}

protected final void initEDATTN3(String s) {
if (!s.trim().isEmpty()) {
EDATTN3 = new Double(s);
}
}

protected final void initEDLEVEL(String s) {
if (!s.trim().isEmpty()) {
EDLEVEL = new Double(s);
}
}

protected final void initEMPN(String s) {
if (!s.trim().isEmpty()) {
EMPN = new Double(s);
}
}

protected final void initEMPSTY(String s) {
if (!s.trim().isEmpty()) {
EMPSTY = new Double(s);
}
}

protected final void initEMSHAR1(String s) {
if (!s.trim().isEmpty()) {
EMSHAR1 = new Double(s);
}
}

protected final void initEMSHAR2(String s) {
if (!s.trim().isEmpty()) {
EMSHAR2 = new Double(s);
}
}

protected final void initEMSHAR3(String s) {
if (!s.trim().isEmpty()) {
EMSHAR3 = new Double(s);
}
}

protected final void initENROLL(String s) {
if (!s.trim().isEmpty()) {
ENROLL = new Double(s);
}
}

protected final void initEVERWK(String s) {
if (!s.trim().isEmpty()) {
EVERWK = new Double(s);
}
}

protected final void initFBONDTY1(String s) {
if (!s.trim().isEmpty()) {
FBONDTY1 = new Double(s);
}
}

protected final void initFBONDTY2(String s) {
if (!s.trim().isEmpty()) {
FBONDTY2 = new Double(s);
}
}

protected final void initFBONDTY3(String s) {
if (!s.trim().isEmpty()) {
FBONDTY3 = new Double(s);
}
}

protected final void initFBONDV(String s) {
if (!s.trim().isEmpty()) {
FBONDV = new Double(s);
}
}

protected final void initFBONDVB(String s) {
if (!s.trim().isEmpty()) {
FBONDVB = new Double(s);
}
}

protected final void initFBONDV_I(String s) {
if (!s.trim().isEmpty()) {
FBONDV_I = new Double(s);
}
}

protected final void initFBONDV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FBONDV_IFLAG = new Double(s);
}
}

protected final void initFCACSH(String s) {
if (!s.trim().isEmpty()) {
FCACSH = new Double(s);
}
}

protected final void initFCACSH_I(String s) {
if (!s.trim().isEmpty()) {
FCACSH_I = new Double(s);
}
}

protected final void initFCACSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCACSH_IFLAG = new Double(s);
}
}

protected final void initFCINVAL(String s) {
if (!s.trim().isEmpty()) {
FCINVAL = new Double(s);
}
}

protected final void initFCINVAL_I(String s) {
if (!s.trim().isEmpty()) {
FCINVAL_I = new Double(s);
}
}

protected final void initFCINVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCINVAL_IFLAG = new Double(s);
}
}

protected final void initFCINVLB(String s) {
if (!s.trim().isEmpty()) {
FCINVLB = new Double(s);
}
}

protected final void initFCISAB(String s) {
if (!s.trim().isEmpty()) {
FCISAB = new Double(s);
}
}

protected final void initFCISAV(String s) {
if (!s.trim().isEmpty()) {
FCISAV = new Double(s);
}
}

protected final void initFCISAV_I(String s) {
if (!s.trim().isEmpty()) {
FCISAV_I = new Double(s);
}
}

protected final void initFCISAV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCISAV_IFLAG = new Double(s);
}
}

protected final void initFCNUMIN(String s) {
if (!s.trim().isEmpty()) {
FCNUMIN = new Double(s);
}
}

protected final void initFCNUMIN_I(String s) {
if (!s.trim().isEmpty()) {
FCNUMIN_I = new Double(s);
}
}

protected final void initFCNUMIN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCNUMIN_IFLAG = new Double(s);
}
}

protected final void initFCNUMSH(String s) {
if (!s.trim().isEmpty()) {
FCNUMSH = new Double(s);
}
}

protected final void initFCNUMSH_I(String s) {
if (!s.trim().isEmpty()) {
FCNUMSH_I = new Double(s);
}
}

protected final void initFCNUMSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCNUMSH_IFLAG = new Double(s);
}
}

protected final void initFCOLLV(String s) {
if (!s.trim().isEmpty()) {
FCOLLV = new Double(s);
}
}

protected final void initFCOLLVB(String s) {
if (!s.trim().isEmpty()) {
FCOLLVB = new Double(s);
}
}

protected final void initFCOLLV_I(String s) {
if (!s.trim().isEmpty()) {
FCOLLV_I = new Double(s);
}
}

protected final void initFCOLLV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCOLLV_IFLAG = new Double(s);
}
}

protected final void initFCOVDIF(String s) {
if (!s.trim().isEmpty()) {
FCOVDIF = new Double(s);
}
}

protected final void initFCOVDIN(String s) {
if (!s.trim().isEmpty()) {
FCOVDIN = new Double(s);
}
}

protected final void initFCOVDIN_I(String s) {
if (!s.trim().isEmpty()) {
FCOVDIN_I = new Double(s);
}
}

protected final void initFCOVDIN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCOVDIN_IFLAG = new Double(s);
}
}

protected final void initFCOVDSH(String s) {
if (!s.trim().isEmpty()) {
FCOVDSH = new Double(s);
}
}

protected final void initFCOVDSH_I(String s) {
if (!s.trim().isEmpty()) {
FCOVDSH_I = new Double(s);
}
}

protected final void initFCOVDSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCOVDSH_IFLAG = new Double(s);
}
}

protected final void initFCOVNIN(String s) {
if (!s.trim().isEmpty()) {
FCOVNIN = new Double(s);
}
}

protected final void initFCOVNIN_I(String s) {
if (!s.trim().isEmpty()) {
FCOVNIN_I = new Double(s);
}
}

protected final void initFCOVNIN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCOVNIN_IFLAG = new Double(s);
}
}

protected final void initFCOVNSH(String s) {
if (!s.trim().isEmpty()) {
FCOVNSH = new Double(s);
}
}

protected final void initFCOVNSH_I(String s) {
if (!s.trim().isEmpty()) {
FCOVNSH_I = new Double(s);
}
}

protected final void initFCOVNSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCOVNSH_IFLAG = new Double(s);
}
}

protected final void initFCSHVAL(String s) {
if (!s.trim().isEmpty()) {
FCSHVAL = new Double(s);
}
}

protected final void initFCSHVAL_I(String s) {
if (!s.trim().isEmpty()) {
FCSHVAL_I = new Double(s);
}
}

protected final void initFCSHVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FCSHVAL_IFLAG = new Double(s);
}
}

protected final void initFCSHVLB(String s) {
if (!s.trim().isEmpty()) {
FCSHVLB = new Double(s);
}
}

protected final void initFCSUPPR(String s) {
if (!s.trim().isEmpty()) {
FCSUPPR = new Double(s);
}
}

protected final void initFEOPTV(String s) {
if (!s.trim().isEmpty()) {
FEOPTV = new Double(s);
}
}

protected final void initFEOPTV_I(String s) {
if (!s.trim().isEmpty()) {
FEOPTV_I = new Double(s);
}
}

protected final void initFEOPTV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FEOPTV_IFLAG = new Double(s);
}
}

protected final void initFEOPVB(String s) {
if (!s.trim().isEmpty()) {
FEOPVB = new Double(s);
}
}

protected final void initFESHA(String s) {
if (!s.trim().isEmpty()) {
FESHA = new Double(s);
}
}

protected final void initFESHAV(String s) {
if (!s.trim().isEmpty()) {
FESHAV = new Double(s);
}
}

protected final void initFESHAV_I(String s) {
if (!s.trim().isEmpty()) {
FESHAV_I = new Double(s);
}
}

protected final void initFESHAV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FESHAV_IFLAG = new Double(s);
}
}

protected final void initFESHA_I(String s) {
if (!s.trim().isEmpty()) {
FESHA_I = new Double(s);
}
}

protected final void initFESHA_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FESHA_IFLAG = new Double(s);
}
}

protected final void initFESHVB(String s) {
if (!s.trim().isEmpty()) {
FESHVB = new Double(s);
}
}

protected final void initFGFOVB(String s) {
if (!s.trim().isEmpty()) {
FGFOVB = new Double(s);
}
}

protected final void initFGILTS1(String s) {
if (!s.trim().isEmpty()) {
FGILTS1 = new Double(s);
}
}

protected final void initFGILTS1_I(String s) {
if (!s.trim().isEmpty()) {
FGILTS1_I = new Double(s);
}
}

protected final void initFGILTS1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGILTS1_IFLAG = new Double(s);
}
}

protected final void initFGILTS2(String s) {
if (!s.trim().isEmpty()) {
FGILTS2 = new Double(s);
}
}

protected final void initFGILTS2_I(String s) {
if (!s.trim().isEmpty()) {
FGILTS2_I = new Double(s);
}
}

protected final void initFGILTS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGILTS2_IFLAG = new Double(s);
}
}

protected final void initFGILTS3(String s) {
if (!s.trim().isEmpty()) {
FGILTS3 = new Double(s);
}
}

protected final void initFGILTS3_I(String s) {
if (!s.trim().isEmpty()) {
FGILTS3_I = new Double(s);
}
}

protected final void initFGILTS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGILTS3_IFLAG = new Double(s);
}
}

protected final void initFGILTS4(String s) {
if (!s.trim().isEmpty()) {
FGILTS4 = new Double(s);
}
}

protected final void initFGILTS4_I(String s) {
if (!s.trim().isEmpty()) {
FGILTS4_I = new Double(s);
}
}

protected final void initFGILTS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGILTS4_IFLAG = new Double(s);
}
}

protected final void initFGLTFOV(String s) {
if (!s.trim().isEmpty()) {
FGLTFOV = new Double(s);
}
}

protected final void initFGLTFOV_I(String s) {
if (!s.trim().isEmpty()) {
FGLTFOV_I = new Double(s);
}
}

protected final void initFGLTFOV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGLTFOV_IFLAG = new Double(s);
}
}

protected final void initFGLTUKV(String s) {
if (!s.trim().isEmpty()) {
FGLTUKV = new Double(s);
}
}

protected final void initFGLTUKV_I(String s) {
if (!s.trim().isEmpty()) {
FGLTUKV_I = new Double(s);
}
}

protected final void initFGLTUKV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FGLTUKV_IFLAG = new Double(s);
}
}

protected final void initFGUKVB(String s) {
if (!s.trim().isEmpty()) {
FGUKVB = new Double(s);
}
}

protected final void initFIISAB(String s) {
if (!s.trim().isEmpty()) {
FIISAB = new Double(s);
}
}

protected final void initFIISAV(String s) {
if (!s.trim().isEmpty()) {
FIISAV = new Double(s);
}
}

protected final void initFIISAV_I(String s) {
if (!s.trim().isEmpty()) {
FIISAV_I = new Double(s);
}
}

protected final void initFIISAV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FIISAV_IFLAG = new Double(s);
}
}

protected final void initFINCVB(String s) {
if (!s.trim().isEmpty()) {
FINCVB = new Double(s);
}
}

protected final void initFINFLV(String s) {
if (!s.trim().isEmpty()) {
FINFLV = new Double(s);
}
}

protected final void initFINFLV_I(String s) {
if (!s.trim().isEmpty()) {
FINFLV_I = new Double(s);
}
}

protected final void initFINFLV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFLV_IFLAG = new Double(s);
}
}

protected final void initFINFSAV1(String s) {
if (!s.trim().isEmpty()) {
FINFSAV1 = new Double(s);
}
}

protected final void initFINFSAV1_I(String s) {
if (!s.trim().isEmpty()) {
FINFSAV1_I = new Double(s);
}
}

protected final void initFINFSAV1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFSAV1_IFLAG = new Double(s);
}
}

protected final void initFINFSAV2(String s) {
if (!s.trim().isEmpty()) {
FINFSAV2 = new Double(s);
}
}

protected final void initFINFSAV2_I(String s) {
if (!s.trim().isEmpty()) {
FINFSAV2_I = new Double(s);
}
}

protected final void initFINFSAV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFSAV2_IFLAG = new Double(s);
}
}

protected final void initFINFSAV3(String s) {
if (!s.trim().isEmpty()) {
FINFSAV3 = new Double(s);
}
}

protected final void initFINFSAV3_I(String s) {
if (!s.trim().isEmpty()) {
FINFSAV3_I = new Double(s);
}
}

protected final void initFINFSAV3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFSAV3_IFLAG = new Double(s);
}
}

protected final void initFINFSAV4(String s) {
if (!s.trim().isEmpty()) {
FINFSAV4 = new Double(s);
}
}

protected final void initFINFSAV4_I(String s) {
if (!s.trim().isEmpty()) {
FINFSAV4_I = new Double(s);
}
}

protected final void initFINFSAV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFSAV4_IFLAG = new Double(s);
}
}

protected final void initFINFV(String s) {
if (!s.trim().isEmpty()) {
FINFV = new Double(s);
}
}

protected final void initFINFVB(String s) {
if (!s.trim().isEmpty()) {
FINFVB = new Double(s);
}
}

protected final void initFINFV_I(String s) {
if (!s.trim().isEmpty()) {
FINFV_I = new Double(s);
}
}

protected final void initFINFV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINFV_IFLAG = new Double(s);
}
}

protected final void initFINS(String s) {
if (!s.trim().isEmpty()) {
FINS = new Double(s);
}
}

protected final void initFINSV(String s) {
if (!s.trim().isEmpty()) {
FINSV = new Double(s);
}
}

protected final void initFINSV_I(String s) {
if (!s.trim().isEmpty()) {
FINSV_I = new Double(s);
}
}

protected final void initFINSV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINSV_IFLAG = new Double(s);
}
}

protected final void initFINS_I(String s) {
if (!s.trim().isEmpty()) {
FINS_I = new Double(s);
}
}

protected final void initFINS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINS_IFLAG = new Double(s);
}
}

protected final void initFINVOTV(String s) {
if (!s.trim().isEmpty()) {
FINVOTV = new Double(s);
}
}

protected final void initFINVOTV_I(String s) {
if (!s.trim().isEmpty()) {
FINVOTV_I = new Double(s);
}
}

protected final void initFINVOTV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVOTV_IFLAG = new Double(s);
}
}

protected final void initFINVOVB(String s) {
if (!s.trim().isEmpty()) {
FINVOVB = new Double(s);
}
}

protected final void initFINVTY01(String s) {
if (!s.trim().isEmpty()) {
FINVTY01 = new Double(s);
}
}

protected final void initFINVTY01_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY01_I = new Double(s);
}
}

protected final void initFINVTY02(String s) {
if (!s.trim().isEmpty()) {
FINVTY02 = new Double(s);
}
}

protected final void initFINVTY02_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY02_I = new Double(s);
}
}

protected final void initFINVTY03(String s) {
if (!s.trim().isEmpty()) {
FINVTY03 = new Double(s);
}
}

protected final void initFINVTY03_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY03_I = new Double(s);
}
}

protected final void initFINVTY04(String s) {
if (!s.trim().isEmpty()) {
FINVTY04 = new Double(s);
}
}

protected final void initFINVTY04_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY04_I = new Double(s);
}
}

protected final void initFINVTY05(String s) {
if (!s.trim().isEmpty()) {
FINVTY05 = new Double(s);
}
}

protected final void initFINVTY05_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY05_I = new Double(s);
}
}

protected final void initFINVTY06(String s) {
if (!s.trim().isEmpty()) {
FINVTY06 = new Double(s);
}
}

protected final void initFINVTY06_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY06_I = new Double(s);
}
}

protected final void initFINVTY07(String s) {
if (!s.trim().isEmpty()) {
FINVTY07 = new Double(s);
}
}

protected final void initFINVTY07_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY07_I = new Double(s);
}
}

protected final void initFINVTY08(String s) {
if (!s.trim().isEmpty()) {
FINVTY08 = new Double(s);
}
}

protected final void initFINVTY08_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY08_I = new Double(s);
}
}

protected final void initFINVTY09(String s) {
if (!s.trim().isEmpty()) {
FINVTY09 = new Double(s);
}
}

protected final void initFINVTY09_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY09_I = new Double(s);
}
}

protected final void initFINVTY10(String s) {
if (!s.trim().isEmpty()) {
FINVTY10 = new Double(s);
}
}

protected final void initFINVTY10_I(String s) {
if (!s.trim().isEmpty()) {
FINVTY10_I = new Double(s);
}
}

protected final void initFINVTY11(String s) {
if (!s.trim().isEmpty()) {
FINVTY11 = new Double(s);
}
}

protected final void initFISA1(String s) {
if (!s.trim().isEmpty()) {
FISA1 = new Double(s);
}
}

protected final void initFISA1_I(String s) {
if (!s.trim().isEmpty()) {
FISA1_I = new Double(s);
}
}

protected final void initFISA1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FISA1_IFLAG = new Double(s);
}
}

protected final void initFISA2(String s) {
if (!s.trim().isEmpty()) {
FISA2 = new Double(s);
}
}

protected final void initFISA2_I(String s) {
if (!s.trim().isEmpty()) {
FISA2_I = new Double(s);
}
}

protected final void initFISA2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FISA2_IFLAG = new Double(s);
}
}

protected final void initFKISAB(String s) {
if (!s.trim().isEmpty()) {
FKISAB = new Double(s);
}
}

protected final void initFKISAV(String s) {
if (!s.trim().isEmpty()) {
FKISAV = new Double(s);
}
}

protected final void initFKISAV_I(String s) {
if (!s.trim().isEmpty()) {
FKISAV_I = new Double(s);
}
}

protected final void initFKISAV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FKISAV_IFLAG = new Double(s);
}
}

protected final void initFLFENV(String s) {
if (!s.trim().isEmpty()) {
FLFENV = new Double(s);
}
}

protected final void initFLFENVB(String s) {
if (!s.trim().isEmpty()) {
FLFENVB = new Double(s);
}
}

protected final void initFLFENV_I(String s) {
if (!s.trim().isEmpty()) {
FLFENV_I = new Double(s);
}
}

protected final void initFLFENV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLFENV_IFLAG = new Double(s);
}
}

protected final void initFLFFSV(String s) {
if (!s.trim().isEmpty()) {
FLFFSV = new Double(s);
}
}

protected final void initFLFFSVB(String s) {
if (!s.trim().isEmpty()) {
FLFFSVB = new Double(s);
}
}

protected final void initFLFFSV_I(String s) {
if (!s.trim().isEmpty()) {
FLFFSV_I = new Double(s);
}
}

protected final void initFLFFSV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLFFSV_IFLAG = new Double(s);
}
}

protected final void initFLFSIV(String s) {
if (!s.trim().isEmpty()) {
FLFSIV = new Double(s);
}
}

protected final void initFLFSIVB(String s) {
if (!s.trim().isEmpty()) {
FLFSIVB = new Double(s);
}
}

protected final void initFLFSIV_I(String s) {
if (!s.trim().isEmpty()) {
FLFSIV_I = new Double(s);
}
}

protected final void initFLFSIV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLFSIV_IFLAG = new Double(s);
}
}

protected final void initFLFTEV(String s) {
if (!s.trim().isEmpty()) {
FLFTEV = new Double(s);
}
}

protected final void initFLFTEVB(String s) {
if (!s.trim().isEmpty()) {
FLFTEVB = new Double(s);
}
}

protected final void initFLFTEV_I(String s) {
if (!s.trim().isEmpty()) {
FLFTEV_I = new Double(s);
}
}

protected final void initFLFTEV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLFTEV_IFLAG = new Double(s);
}
}

protected final void initFLNOS1(String s) {
if (!s.trim().isEmpty()) {
FLNOS1 = new Double(s);
}
}

protected final void initFLNOS2(String s) {
if (!s.trim().isEmpty()) {
FLNOS2 = new Double(s);
}
}

protected final void initFLNOS3(String s) {
if (!s.trim().isEmpty()) {
FLNOS3 = new Double(s);
}
}

protected final void initFLNOS4(String s) {
if (!s.trim().isEmpty()) {
FLNOS4 = new Double(s);
}
}

protected final void initFLOANVB(String s) {
if (!s.trim().isEmpty()) {
FLOANVB = new Double(s);
}
}

protected final void initFLPROD1(String s) {
if (!s.trim().isEmpty()) {
FLPROD1 = new Double(s);
}
}

protected final void initFLPROD1_I(String s) {
if (!s.trim().isEmpty()) {
FLPROD1_I = new Double(s);
}
}

protected final void initFLPROD1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLPROD1_IFLAG = new Double(s);
}
}

protected final void initFLPROD2(String s) {
if (!s.trim().isEmpty()) {
FLPROD2 = new Double(s);
}
}

protected final void initFLPROD2_I(String s) {
if (!s.trim().isEmpty()) {
FLPROD2_I = new Double(s);
}
}

protected final void initFLPROD2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLPROD2_IFLAG = new Double(s);
}
}

protected final void initFLPROD3(String s) {
if (!s.trim().isEmpty()) {
FLPROD3 = new Double(s);
}
}

protected final void initFLPROD3_I(String s) {
if (!s.trim().isEmpty()) {
FLPROD3_I = new Double(s);
}
}

protected final void initFLPROD3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLPROD3_IFLAG = new Double(s);
}
}

protected final void initFLPROD4(String s) {
if (!s.trim().isEmpty()) {
FLPROD4 = new Double(s);
}
}

protected final void initFLPROD4_I(String s) {
if (!s.trim().isEmpty()) {
FLPROD4_I = new Double(s);
}
}

protected final void initFLPROD4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FLPROD4_IFLAG = new Double(s);
}
}

protected final void initFNSAV1(String s) {
if (!s.trim().isEmpty()) {
FNSAV1 = new Double(s);
}
}

protected final void initFNSAV2(String s) {
if (!s.trim().isEmpty()) {
FNSAV2 = new Double(s);
}
}

protected final void initFNSAV3(String s) {
if (!s.trim().isEmpty()) {
FNSAV3 = new Double(s);
}
}

protected final void initFNSAV4(String s) {
if (!s.trim().isEmpty()) {
FNSAV4 = new Double(s);
}
}

protected final void initFNSVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FNSVAL_IFLAG = new Double(s);
}
}

protected final void initFNSVB(String s) {
if (!s.trim().isEmpty()) {
FNSVB = new Double(s);
}
}

protected final void initFSACSH(String s) {
if (!s.trim().isEmpty()) {
FSACSH = new Double(s);
}
}

protected final void initFSACSH_I(String s) {
if (!s.trim().isEmpty()) {
FSACSH_I = new Double(s);
}
}

protected final void initFSACSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSACSH_IFLAG = new Double(s);
}
}

protected final void initFSHARE1(String s) {
if (!s.trim().isEmpty()) {
FSHARE1 = new Double(s);
}
}

protected final void initFSHARE1_I(String s) {
if (!s.trim().isEmpty()) {
FSHARE1_I = new Double(s);
}
}

protected final void initFSHARE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSHARE1_IFLAG = new Double(s);
}
}

protected final void initFSHARE2(String s) {
if (!s.trim().isEmpty()) {
FSHARE2 = new Double(s);
}
}

protected final void initFSHARE2_I(String s) {
if (!s.trim().isEmpty()) {
FSHARE2_I = new Double(s);
}
}

protected final void initFSHARE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSHARE2_IFLAG = new Double(s);
}
}

protected final void initFSHARE3(String s) {
if (!s.trim().isEmpty()) {
FSHARE3 = new Double(s);
}
}

protected final void initFSHARE3_I(String s) {
if (!s.trim().isEmpty()) {
FSHARE3_I = new Double(s);
}
}

protected final void initFSHARE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSHARE3_IFLAG = new Double(s);
}
}

protected final void initFSHOSV(String s) {
if (!s.trim().isEmpty()) {
FSHOSV = new Double(s);
}
}

protected final void initFSHOSVB(String s) {
if (!s.trim().isEmpty()) {
FSHOSVB = new Double(s);
}
}

protected final void initFSHOSV_I(String s) {
if (!s.trim().isEmpty()) {
FSHOSV_I = new Double(s);
}
}

protected final void initFSHOSV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSHOSV_IFLAG = new Double(s);
}
}

protected final void initFSHUKV(String s) {
if (!s.trim().isEmpty()) {
FSHUKV = new Double(s);
}
}

protected final void initFSHUKVB(String s) {
if (!s.trim().isEmpty()) {
FSHUKVB = new Double(s);
}
}

protected final void initFSHUKV_I(String s) {
if (!s.trim().isEmpty()) {
FSHUKV_I = new Double(s);
}
}

protected final void initFSHUKV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSHUKV_IFLAG = new Double(s);
}
}

protected final void initFSINVAL(String s) {
if (!s.trim().isEmpty()) {
FSINVAL = new Double(s);
}
}

protected final void initFSINVAL_I(String s) {
if (!s.trim().isEmpty()) {
FSINVAL_I = new Double(s);
}
}

protected final void initFSINVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSINVAL_IFLAG = new Double(s);
}
}

protected final void initFSINVLB(String s) {
if (!s.trim().isEmpty()) {
FSINVLB = new Double(s);
}
}

protected final void initFSNUMIN(String s) {
if (!s.trim().isEmpty()) {
FSNUMIN = new Double(s);
}
}

protected final void initFSNUMIN_I(String s) {
if (!s.trim().isEmpty()) {
FSNUMIN_I = new Double(s);
}
}

protected final void initFSNUMIN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSNUMIN_IFLAG = new Double(s);
}
}

protected final void initFSNUMSH(String s) {
if (!s.trim().isEmpty()) {
FSNUMSH = new Double(s);
}
}

protected final void initFSNUMSH_I(String s) {
if (!s.trim().isEmpty()) {
FSNUMSH_I = new Double(s);
}
}

protected final void initFSNUMSH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSNUMSH_IFLAG = new Double(s);
}
}

protected final void initFSOSHAV(String s) {
if (!s.trim().isEmpty()) {
FSOSHAV = new Double(s);
}
}

protected final void initFSOSVLB(String s) {
if (!s.trim().isEmpty()) {
FSOSVLB = new Double(s);
}
}

protected final void initFSSHVAL(String s) {
if (!s.trim().isEmpty()) {
FSSHVAL = new Double(s);
}
}

protected final void initFSSHVAL_I(String s) {
if (!s.trim().isEmpty()) {
FSSHVAL_I = new Double(s);
}
}

protected final void initFSSHVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FSSHVAL_IFLAG = new Double(s);
}
}

protected final void initFSSHVLB(String s) {
if (!s.trim().isEmpty()) {
FSSHVLB = new Double(s);
}
}

protected final void initFSSUPPR(String s) {
if (!s.trim().isEmpty()) {
FSSUPPR = new Double(s);
}
}

protected final void initFSTYPIN1(String s) {
if (!s.trim().isEmpty()) {
FSTYPIN1 = new Double(s);
}
}

protected final void initFSTYPIN2(String s) {
if (!s.trim().isEmpty()) {
FSTYPIN2 = new Double(s);
}
}

protected final void initFSTYPIN3(String s) {
if (!s.trim().isEmpty()) {
FSTYPIN3 = new Double(s);
}
}

protected final void initFSTYPSH1(String s) {
if (!s.trim().isEmpty()) {
FSTYPSH1 = new Double(s);
}
}

protected final void initFSTYPSH2(String s) {
if (!s.trim().isEmpty()) {
FSTYPSH2 = new Double(s);
}
}

protected final void initFSTYPSH3(String s) {
if (!s.trim().isEmpty()) {
FSTYPSH3 = new Double(s);
}
}

protected final void initFSTYPSH4(String s) {
if (!s.trim().isEmpty()) {
FSTYPSH4 = new Double(s);
}
}

protected final void initFTED(String s) {
if (!s.trim().isEmpty()) {
FTED = new Double(s);
}
}

protected final void initFTED19(String s) {
if (!s.trim().isEmpty()) {
FTED19 = new Double(s);
}
}

protected final void initFTPTWK(String s) {
if (!s.trim().isEmpty()) {
FTPTWK = new Double(s);
}
}

protected final void initGOR(String s) {
if (!s.trim().isEmpty()) {
GOR = new Double(s);
}
}

protected final void initGRSESM(String s) {
if (!s.trim().isEmpty()) {
GRSESM = new Double(s);
}
}

protected final void initGRSESP(String s) {
if (!s.trim().isEmpty()) {
GRSESP = new Double(s);
}
}

protected final void initHASCHD(String s) {
if (!s.trim().isEmpty()) {
HASCHD = new Double(s);
}
}

protected final void initHASDEP(String s) {
if (!s.trim().isEmpty()) {
HASDEP = new Double(s);
}
}

protected final void initHASNDEP(String s) {
if (!s.trim().isEmpty()) {
HASNDEP = new Double(s);
}
}

protected final void initHOUSGDST(String s) {
if (!s.trim().isEmpty()) {
HOUSGDST = new Double(s);
}
}

protected final void initHPLFT2(String s) {
if (!s.trim().isEmpty()) {
HPLFT2 = new Double(s);
}
}

protected final void initHPOS1(String s) {
if (!s.trim().isEmpty()) {
HPOS1 = new Double(s);
}
}

protected final void initHPOS2(String s) {
if (!s.trim().isEmpty()) {
HPOS2 = new Double(s);
}
}

protected final void initIGDS1(String s) {
if (!s.trim().isEmpty()) {
IGDS1 = new Double(s);
}
}

protected final void initIGDS10(String s) {
if (!s.trim().isEmpty()) {
IGDS10 = new Double(s);
}
}

protected final void initIGDS11(String s) {
if (!s.trim().isEmpty()) {
IGDS11 = new Double(s);
}
}

protected final void initIGDS15(String s) {
if (!s.trim().isEmpty()) {
IGDS15 = new Double(s);
}
}

protected final void initIGDS2(String s) {
if (!s.trim().isEmpty()) {
IGDS2 = new Double(s);
}
}

protected final void initIGDS3(String s) {
if (!s.trim().isEmpty()) {
IGDS3 = new Double(s);
}
}

protected final void initIGDS4(String s) {
if (!s.trim().isEmpty()) {
IGDS4 = new Double(s);
}
}

protected final void initIGDS5(String s) {
if (!s.trim().isEmpty()) {
IGDS5 = new Double(s);
}
}

protected final void initIGDS8(String s) {
if (!s.trim().isEmpty()) {
IGDS8 = new Double(s);
}
}

protected final void initIGDS9(String s) {
if (!s.trim().isEmpty()) {
IGDS9 = new Double(s);
}
}

protected final void initIGFVALB(String s) {
if (!s.trim().isEmpty()) {
IGFVALB = new Double(s);
}
}

protected final void initIHRCNUM(String s) {
if (!s.trim().isEmpty()) {
IHRCNUM = new Double(s);
}
}

protected final void initIHRECNT(String s) {
if (!s.trim().isEmpty()) {
IHRECNT = new Double(s);
}
}

protected final void initIHSE1(String s) {
if (!s.trim().isEmpty()) {
IHSE1 = new Double(s);
}
}

protected final void initIHSE2(String s) {
if (!s.trim().isEmpty()) {
IHSE2 = new Double(s);
}
}

protected final void initIHSE7(String s) {
if (!s.trim().isEmpty()) {
IHSE7 = new Double(s);
}
}

protected final void initILACB(String s) {
if (!s.trim().isEmpty()) {
ILACB = new Double(s);
}
}

protected final void initILGIFT(String s) {
if (!s.trim().isEmpty()) {
ILGIFT = new Double(s);
}
}

protected final void initILIFB(String s) {
if (!s.trim().isEmpty()) {
ILIFB = new Double(s);
}
}

protected final void initILINB(String s) {
if (!s.trim().isEmpty()) {
ILINB = new Double(s);
}
}

protected final void initILLLIM(String s) {
if (!s.trim().isEmpty()) {
ILLLIM = new Double(s);
}
}

protected final void initILOTB(String s) {
if (!s.trim().isEmpty()) {
ILOTB = new Double(s);
}
}

protected final void initILRDB(String s) {
if (!s.trim().isEmpty()) {
ILRDB = new Double(s);
}
}

protected final void initILUMP(String s) {
if (!s.trim().isEmpty()) {
ILUMP = new Double(s);
}
}

protected final void initILUMTY1(String s) {
if (!s.trim().isEmpty()) {
ILUMTY1 = new Double(s);
}
}

protected final void initILUMTY2(String s) {
if (!s.trim().isEmpty()) {
ILUMTY2 = new Double(s);
}
}

protected final void initILUMTY3(String s) {
if (!s.trim().isEmpty()) {
ILUMTY3 = new Double(s);
}
}

protected final void initILUPB(String s) {
if (!s.trim().isEmpty()) {
ILUPB = new Double(s);
}
}

protected final void initILUPP(String s) {
if (!s.trim().isEmpty()) {
ILUPP = new Double(s);
}
}

protected final void initILWNB(String s) {
if (!s.trim().isEmpty()) {
ILWNB = new Double(s);
}
}

protected final void initIOUT1(String s) {
if (!s.trim().isEmpty()) {
IOUT1 = new Double(s);
}
}

protected final void initISDEP(String s) {
if (!s.trim().isEmpty()) {
ISDEP = new Double(s);
}
}

protected final void initISNDEP(String s) {
if (!s.trim().isEmpty()) {
ISNDEP = new Double(s);
}
}

protected final void initIVALB2(String s) {
if (!s.trim().isEmpty()) {
IVALB2 = new Double(s);
}
}

protected final void initIVALB3(String s) {
if (!s.trim().isEmpty()) {
IVALB3 = new Double(s);
}
}

protected final void initIWAT1(String s) {
if (!s.trim().isEmpty()) {
IWAT1 = new Double(s);
}
}

protected final void initIWAT13(String s) {
if (!s.trim().isEmpty()) {
IWAT13 = new Double(s);
}
}

protected final void initIWAT2(String s) {
if (!s.trim().isEmpty()) {
IWAT2 = new Double(s);
}
}

protected final void initIWAT3(String s) {
if (!s.trim().isEmpty()) {
IWAT3 = new Double(s);
}
}

protected final void initIWAT4(String s) {
if (!s.trim().isEmpty()) {
IWAT4 = new Double(s);
}
}

protected final void initIWAT5(String s) {
if (!s.trim().isEmpty()) {
IWAT5 = new Double(s);
}
}

protected final void initIWAT7(String s) {
if (!s.trim().isEmpty()) {
IWAT7 = new Double(s);
}
}

protected final void initIWHO2(String s) {
if (!s.trim().isEmpty()) {
IWHO2 = new Double(s);
}
}

protected final void initIWHO3(String s) {
if (!s.trim().isEmpty()) {
IWHO3 = new Double(s);
}
}

protected final void initJBAWAY(String s) {
if (!s.trim().isEmpty()) {
JBAWAY = new Double(s);
}
}

protected final void initJOBNO(String s) {
if (!s.trim().isEmpty()) {
JOBNO = new Double(s);
}
}

protected final void initLKTIME(String s) {
if (!s.trim().isEmpty()) {
LKTIME = new Double(s);
}
}

protected final void initLNLFT2(String s) {
if (!s.trim().isEmpty()) {
LNLFT2 = new Double(s);
}
}

protected final void initLNLFT3(String s) {
if (!s.trim().isEmpty()) {
LNLFT3 = new Double(s);
}
}

protected final void initLNLFT4(String s) {
if (!s.trim().isEmpty()) {
LNLFT4 = new Double(s);
}
}

protected final void initLNLFT5(String s) {
if (!s.trim().isEmpty()) {
LNLFT5 = new Double(s);
}
}

protected final void initLNOS1(String s) {
if (!s.trim().isEmpty()) {
LNOS1 = new Double(s);
}
}

protected final void initLNOS2(String s) {
if (!s.trim().isEmpty()) {
LNOS2 = new Double(s);
}
}

protected final void initLNOS3(String s) {
if (!s.trim().isEmpty()) {
LNOS3 = new Double(s);
}
}

protected final void initLNOS4(String s) {
if (!s.trim().isEmpty()) {
LNOS4 = new Double(s);
}
}

protected final void initLNOS5(String s) {
if (!s.trim().isEmpty()) {
LNOS5 = new Double(s);
}
}

protected final void initLOOKED(String s) {
if (!s.trim().isEmpty()) {
LOOKED = new Double(s);
}
}

protected final void initLSILL(String s) {
if (!s.trim().isEmpty()) {
LSILL = new Double(s);
}
}

protected final void initMARBEF(String s) {
if (!s.trim().isEmpty()) {
MARBEF = new Double(s);
}
}

protected final void initMOLFT2(String s) {
if (!s.trim().isEmpty()) {
MOLFT2 = new Double(s);
}
}

protected final void initMONTH(String s) {
if (!s.trim().isEmpty()) {
MONTH = new Double(s);
}
}

protected final void initMOOS1(String s) {
if (!s.trim().isEmpty()) {
MOOS1 = new Double(s);
}
}

protected final void initMOOS2(String s) {
if (!s.trim().isEmpty()) {
MOOS2 = new Double(s);
}
}

protected final void initNSSEC3(String s) {
if (!s.trim().isEmpty()) {
NSSEC3 = new Double(s);
}
}

protected final void initNSSEC5(String s) {
if (!s.trim().isEmpty()) {
NSSEC5 = new Double(s);
}
}

protected final void initNSSEC8(String s) {
if (!s.trim().isEmpty()) {
NSSEC8 = new Double(s);
}
}

protected final void initNSSECB(String s) {
if (!s.trim().isEmpty()) {
NSSECB = new Double(s);
}
}

protected final void initOCSVR1(String s) {
if (!s.trim().isEmpty()) {
OCSVR1 = new Double(s);
}
}

protected final void initOCSVR2(String s) {
if (!s.trim().isEmpty()) {
OCSVR2 = new Double(s);
}
}

protected final void initOCSVR3(String s) {
if (!s.trim().isEmpty()) {
OCSVR3 = new Double(s);
}
}

protected final void initOCSVR4(String s) {
if (!s.trim().isEmpty()) {
OCSVR4 = new Double(s);
}
}

protected final void initOCSVR5(String s) {
if (!s.trim().isEmpty()) {
OCSVR5 = new Double(s);
}
}

protected final void initOCSVR6(String s) {
if (!s.trim().isEmpty()) {
OCSVR6 = new Double(s);
}
}

protected final void initOCSVR7(String s) {
if (!s.trim().isEmpty()) {
OCSVR7 = new Double(s);
}
}

protected final void initOCSVR8(String s) {
if (!s.trim().isEmpty()) {
OCSVR8 = new Double(s);
}
}

protected final void initOINTEND(String s) {
if (!s.trim().isEmpty()) {
OINTEND = new Double(s);
}
}

protected final void initOLARGE(String s) {
if (!s.trim().isEmpty()) {
OLARGE = new Double(s);
}
}

protected final void initOLEFT(String s) {
if (!s.trim().isEmpty()) {
OLEFT = new Double(s);
}
}

protected final void initOLEFTDO(String s) {
if (!s.trim().isEmpty()) {
OLEFTDO = new Double(s);
}
}

protected final void initOLONG(String s) {
if (!s.trim().isEmpty()) {
OLONG = new Double(s);
}
}

protected final void initOLONGYR(String s) {
if (!s.trim().isEmpty()) {
OLONGYR = new Double(s);
}
}

protected final void initONETEN(String s) {
if (!s.trim().isEmpty()) {
ONETEN = new Double(s);
}
}

protected final void initOPENS01(String s) {
if (!s.trim().isEmpty()) {
OPENS01 = new Double(s);
}
}

protected final void initOPENS02(String s) {
if (!s.trim().isEmpty()) {
OPENS02 = new Double(s);
}
}

protected final void initOPENS03(String s) {
if (!s.trim().isEmpty()) {
OPENS03 = new Double(s);
}
}

protected final void initOPENS04(String s) {
if (!s.trim().isEmpty()) {
OPENS04 = new Double(s);
}
}

protected final void initOPENS05(String s) {
if (!s.trim().isEmpty()) {
OPENS05 = new Double(s);
}
}

protected final void initOPENS06(String s) {
if (!s.trim().isEmpty()) {
OPENS06 = new Double(s);
}
}

protected final void initOPENS07(String s) {
if (!s.trim().isEmpty()) {
OPENS07 = new Double(s);
}
}

protected final void initOPENS08(String s) {
if (!s.trim().isEmpty()) {
OPENS08 = new Double(s);
}
}

protected final void initORETINC(String s) {
if (!s.trim().isEmpty()) {
ORETINC = new Double(s);
}
}

protected final void initORISKA(String s) {
if (!s.trim().isEmpty()) {
ORISKA = new Double(s);
}
}

protected final void initORISKC(String s) {
if (!s.trim().isEmpty()) {
ORISKC = new Double(s);
}
}

protected final void initORUNDO01(String s) {
if (!s.trim().isEmpty()) {
ORUNDO01 = new Double(s);
}
}

protected final void initORUNDO02(String s) {
if (!s.trim().isEmpty()) {
ORUNDO02 = new Double(s);
}
}

protected final void initORUNDO03(String s) {
if (!s.trim().isEmpty()) {
ORUNDO03 = new Double(s);
}
}

protected final void initORUNDO04(String s) {
if (!s.trim().isEmpty()) {
ORUNDO04 = new Double(s);
}
}

protected final void initORUNDO05(String s) {
if (!s.trim().isEmpty()) {
ORUNDO05 = new Double(s);
}
}

protected final void initORUNDO06(String s) {
if (!s.trim().isEmpty()) {
ORUNDO06 = new Double(s);
}
}

protected final void initORUNDO07(String s) {
if (!s.trim().isEmpty()) {
ORUNDO07 = new Double(s);
}
}

protected final void initORUNDO08(String s) {
if (!s.trim().isEmpty()) {
ORUNDO08 = new Double(s);
}
}

protected final void initORUNOUT(String s) {
if (!s.trim().isEmpty()) {
ORUNOUT = new Double(s);
}
}

protected final void initOSITUAT(String s) {
if (!s.trim().isEmpty()) {
OSITUAT = new Double(s);
}
}

protected final void initOSTANDL(String s) {
if (!s.trim().isEmpty()) {
OSTANDL = new Double(s);
}
}

protected final void initOTHSRC1(String s) {
if (!s.trim().isEmpty()) {
OTHSRC1 = new Double(s);
}
}

protected final void initOTHSRC1_I(String s) {
if (!s.trim().isEmpty()) {
OTHSRC1_I = new Double(s);
}
}

protected final void initOTHSRC1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
OTHSRC1_IFLAG = new Double(s);
}
}

protected final void initOTHSRC2(String s) {
if (!s.trim().isEmpty()) {
OTHSRC2 = new Double(s);
}
}

protected final void initOTHSRC2_I(String s) {
if (!s.trim().isEmpty()) {
OTHSRC2_I = new Double(s);
}
}

protected final void initOTHSRC2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
OTHSRC2_IFLAG = new Double(s);
}
}

protected final void initOTHSRC3(String s) {
if (!s.trim().isEmpty()) {
OTHSRC3 = new Double(s);
}
}

protected final void initOTHSRC3_I(String s) {
if (!s.trim().isEmpty()) {
OTHSRC3_I = new Double(s);
}
}

protected final void initOTHSRC3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
OTHSRC3_IFLAG = new Double(s);
}
}

protected final void initOTRUST01(String s) {
if (!s.trim().isEmpty()) {
OTRUST01 = new Double(s);
}
}

protected final void initOTRUST02(String s) {
if (!s.trim().isEmpty()) {
OTRUST02 = new Double(s);
}
}

protected final void initOTRUST03(String s) {
if (!s.trim().isEmpty()) {
OTRUST03 = new Double(s);
}
}

protected final void initOTRUST04(String s) {
if (!s.trim().isEmpty()) {
OTRUST04 = new Double(s);
}
}

protected final void initOTRUST05(String s) {
if (!s.trim().isEmpty()) {
OTRUST05 = new Double(s);
}
}

protected final void initOTRUST06(String s) {
if (!s.trim().isEmpty()) {
OTRUST06 = new Double(s);
}
}

protected final void initOTRUST07(String s) {
if (!s.trim().isEmpty()) {
OTRUST07 = new Double(s);
}
}

protected final void initOTRUST08(String s) {
if (!s.trim().isEmpty()) {
OTRUST08 = new Double(s);
}
}

protected final void initOTRUST09(String s) {
if (!s.trim().isEmpty()) {
OTRUST09 = new Double(s);
}
}

protected final void initOTRUST10(String s) {
if (!s.trim().isEmpty()) {
OTRUST10 = new Double(s);
}
}

protected final void initOTRUST11(String s) {
if (!s.trim().isEmpty()) {
OTRUST11 = new Double(s);
}
}

protected final void initOTRUST12(String s) {
if (!s.trim().isEmpty()) {
OTRUST12 = new Double(s);
}
}

protected final void initOTRUST13(String s) {
if (!s.trim().isEmpty()) {
OTRUST13 = new Double(s);
}
}

protected final void initOTRUST14(String s) {
if (!s.trim().isEmpty()) {
OTRUST14 = new Double(s);
}
}

protected final void initOUNDER(String s) {
if (!s.trim().isEmpty()) {
OUNDER = new Double(s);
}
}

protected final void initOWNBUS(String s) {
if (!s.trim().isEmpty()) {
OWNBUS = new Double(s);
}
}

protected final void initPAGERET(String s) {
if (!s.trim().isEmpty()) {
PAGERET = new Double(s);
}
}

protected final void initPARTNER(String s) {
if (!s.trim().isEmpty()) {
PARTNER = new Double(s);
}
}

protected final void initPARTNO(String s) {
if (!s.trim().isEmpty()) {
PARTNO = new Double(s);
}
}

protected final void initPAYBON(String s) {
if (!s.trim().isEmpty()) {
PAYBON = new Double(s);
}
}

protected final void initPAYESM(String s) {
if (!s.trim().isEmpty()) {
PAYESM = new Double(s);
}
}

protected final void initPAYESP(String s) {
if (!s.trim().isEmpty()) {
PAYESP = new Double(s);
}
}

protected final void initPAYINC1(String s) {
if (!s.trim().isEmpty()) {
PAYINC1 = new Double(s);
}
}

protected final void initPAYINC2(String s) {
if (!s.trim().isEmpty()) {
PAYINC2 = new Double(s);
}
}

protected final void initPAYINC3(String s) {
if (!s.trim().isEmpty()) {
PAYINC3 = new Double(s);
}
}

protected final void initPAYINC4(String s) {
if (!s.trim().isEmpty()) {
PAYINC4 = new Double(s);
}
}

protected final void initPAYINC5(String s) {
if (!s.trim().isEmpty()) {
PAYINC5 = new Double(s);
}
}

protected final void initPAYINC6(String s) {
if (!s.trim().isEmpty()) {
PAYINC6 = new Double(s);
}
}

protected final void initPAYPER(String s) {
if (!s.trim().isEmpty()) {
PAYPER = new Double(s);
}
}

protected final void initPAYSLP(String s) {
if (!s.trim().isEmpty()) {
PAYSLP = new Double(s);
}
}

protected final void initPEARLRS(String s) {
if (!s.trim().isEmpty()) {
PEARLRS = new Double(s);
}
}

protected final void initPEMELG(String s) {
if (!s.trim().isEmpty()) {
PEMELG = new Double(s);
}
}

protected final void initPEMELG_I(String s) {
if (!s.trim().isEmpty()) {
PEMELG_I = new Double(s);
}
}

protected final void initPEMELG_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PEMELG_IFLAG = new Double(s);
}
}

protected final void initPEMMEM(String s) {
if (!s.trim().isEmpty()) {
PEMMEM = new Double(s);
}
}

protected final void initPEMMEM_I(String s) {
if (!s.trim().isEmpty()) {
PEMMEM_I = new Double(s);
}
}

protected final void initPEMMEM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PEMMEM_IFLAG = new Double(s);
}
}

protected final void initPEMOFF(String s) {
if (!s.trim().isEmpty()) {
PEMOFF = new Double(s);
}
}

protected final void initPEMOFF_I(String s) {
if (!s.trim().isEmpty()) {
PEMOFF_I = new Double(s);
}
}

protected final void initPEMOFF_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PEMOFF_IFLAG = new Double(s);
}
}

protected final void initPERSONW1(String s) {
if (!s.trim().isEmpty()) {
PERSONW1 = new Integer(s);
}
}

protected final void initPERSPROX(String s) {
if (!s.trim().isEmpty()) {
PERSPROX = new Double(s);
}
}

protected final void initPEVERC(String s) {
if (!s.trim().isEmpty()) {
PEVERC = new Double(s);
}
}

protected final void initPEVERC_I(String s) {
if (!s.trim().isEmpty()) {
PEVERC_I = new Double(s);
}
}

protected final void initPEVERC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PEVERC_IFLAG = new Double(s);
}
}

protected final void initPEVERNC(String s) {
if (!s.trim().isEmpty()) {
PEVERNC = new Double(s);
}
}

protected final void initPEVERNC_I(String s) {
if (!s.trim().isEmpty()) {
PEVERNC_I = new Double(s);
}
}

protected final void initPEVERNC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PEVERNC_IFLAG = new Double(s);
}
}

protected final void initPEXPRET(String s) {
if (!s.trim().isEmpty()) {
PEXPRET = new Double(s);
}
}

protected final void initPFNUM(String s) {
if (!s.trim().isEmpty()) {
PFNUM = new Double(s);
}
}

protected final void initPFNUM_I(String s) {
if (!s.trim().isEmpty()) {
PFNUM_I = new Double(s);
}
}

protected final void initPFNUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFNUM_IFLAG = new Double(s);
}
}

protected final void initPFULRET(String s) {
if (!s.trim().isEmpty()) {
PFULRET = new Double(s);
}
}

protected final void initPINCINP(String s) {
if (!s.trim().isEmpty()) {
PINCINP = new Double(s);
}
}

protected final void initPOCNMSC(String s) {
if (!s.trim().isEmpty()) {
POCNMSC = new Double(s);
}
}

protected final void initPOCNMSC_I(String s) {
if (!s.trim().isEmpty()) {
POCNMSC_I = new Double(s);
}
}

protected final void initPOCNMSC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POCNMSC_IFLAG = new Double(s);
}
}

protected final void initPPRNMSC(String s) {
if (!s.trim().isEmpty()) {
PPRNMSC = new Double(s);
}
}

protected final void initPPRNMSC_I(String s) {
if (!s.trim().isEmpty()) {
PPRNMSC_I = new Double(s);
}
}

protected final void initPPRNMSC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PPRNMSC_IFLAG = new Double(s);
}
}

protected final void initPPYSTP10(String s) {
if (!s.trim().isEmpty()) {
PPYSTP10 = new Double(s);
}
}

protected final void initPRETAIN(String s) {
if (!s.trim().isEmpty()) {
PRETAIN = new Double(s);
}
}

protected final void initPRETAIN_I(String s) {
if (!s.trim().isEmpty()) {
PRETAIN_I = new Double(s);
}
}

protected final void initPRETAIN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRETAIN_IFLAG = new Double(s);
}
}

protected final void initPSCHM_F(String s) {
if (!s.trim().isEmpty()) {
PSCHM_F = new Double(s);
}
}

protected final void initPSCHM_F_I(String s) {
if (!s.trim().isEmpty()) {
PSCHM_F_I = new Double(s);
}
}

protected final void initPSCHM_F_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSCHM_F_IFLAG = new Double(s);
}
}

protected final void initPSCHM_S(String s) {
if (!s.trim().isEmpty()) {
PSCHM_S = new Double(s);
}
}

protected final void initPSCHM_S_I(String s) {
if (!s.trim().isEmpty()) {
PSCHM_S_I = new Double(s);
}
}

protected final void initPSCHM_S_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSCHM_S_IFLAG = new Double(s);
}
}

protected final void initPSCHM_T(String s) {
if (!s.trim().isEmpty()) {
PSCHM_T = new Double(s);
}
}

protected final void initPSCHM_T_I(String s) {
if (!s.trim().isEmpty()) {
PSCHM_T_I = new Double(s);
}
}

protected final void initPSCHM_T_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSCHM_T_IFLAG = new Double(s);
}
}

protected final void initPSIT(String s) {
if (!s.trim().isEmpty()) {
PSIT = new Double(s);
}
}

protected final void initPSITF(String s) {
if (!s.trim().isEmpty()) {
PSITF = new Double(s);
}
}

protected final void initPWEXPA(String s) {
if (!s.trim().isEmpty()) {
PWEXPA = new Double(s);
}
}

protected final void initPWEXPA_I(String s) {
if (!s.trim().isEmpty()) {
PWEXPA_I = new Double(s);
}
}

protected final void initPWEXPA_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PWEXPA_IFLAG = new Double(s);
}
}

protected final void initPWEXPH(String s) {
if (!s.trim().isEmpty()) {
PWEXPH = new Double(s);
}
}

protected final void initPWEXPH_I(String s) {
if (!s.trim().isEmpty()) {
PWEXPH_I = new Double(s);
}
}

protected final void initPWEXPH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PWEXPH_IFLAG = new Double(s);
}
}

protected final void initPWID(String s) {
if (!s.trim().isEmpty()) {
PWID = new Double(s);
}
}

protected final void initPWIDFUT(String s) {
if (!s.trim().isEmpty()) {
PWIDFUT = new Double(s);
}
}

protected final void initPWIDFUT_I(String s) {
if (!s.trim().isEmpty()) {
PWIDFUT_I = new Double(s);
}
}

protected final void initPWIDFUT_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PWIDFUT_IFLAG = new Double(s);
}
}

protected final void initP_FLAG1(String s) {
if (!s.trim().isEmpty()) {
P_FLAG1 = new Double(s);
}
}

protected final void initP_FLAG3(String s) {
if (!s.trim().isEmpty()) {
P_FLAG3 = new Double(s);
}
}

protected final void initP_FLAG4(String s) {
if (!s.trim().isEmpty()) {
P_FLAG4 = new Double(s);
}
}

protected final void initQHEALTH1(String s) {
if (!s.trim().isEmpty()) {
QHEALTH1 = new Double(s);
}
}

protected final void initQUALCHK(String s) {
if (!s.trim().isEmpty()) {
QUALCHK = new Double(s);
}
}

protected final void initREGLRPY1(String s) {
if (!s.trim().isEmpty()) {
REGLRPY1 = new Double(s);
}
}

protected final void initREGLRPY2(String s) {
if (!s.trim().isEmpty()) {
REGLRPY2 = new Double(s);
}
}

protected final void initRELBUS(String s) {
if (!s.trim().isEmpty()) {
RELBUS = new Double(s);
}
}

protected final void initRENTPAY(String s) {
if (!s.trim().isEmpty()) {
RENTPAY = new Double(s);
}
}

protected final void initSCHEMEET(String s) {
if (!s.trim().isEmpty()) {
SCHEMEET = new Double(s);
}
}

protected final void initSEAMK(String s) {
if (!s.trim().isEmpty()) {
SEAMK = new Double(s);
}
}

protected final void initSEESM(String s) {
if (!s.trim().isEmpty()) {
SEESM = new Double(s);
}
}

protected final void initSEESW(String s) {
if (!s.trim().isEmpty()) {
SEESW = new Double(s);
}
}

protected final void initSELECTAD(String s) {
if (!s.trim().isEmpty()) {
SELECTAD = new Double(s);
}
}

protected final void initSEMN(String s) {
if (!s.trim().isEmpty()) {
SEMN = new Double(s);
}
}

protected final void initSEMPSTY(String s) {
if (!s.trim().isEmpty()) {
SEMPSTY = new Double(s);
}
}

protected final void initSEPEL(String s) {
if (!s.trim().isEmpty()) {
SEPEL = new Double(s);
}
}

protected final void initSEPER(String s) {
if (!s.trim().isEmpty()) {
SEPER = new Double(s);
}
}

protected final void initSEX(String s) {
if (!s.trim().isEmpty()) {
SEX = new Double(s);
}
}

protected final void initSINGPAR(String s) {
if (!s.trim().isEmpty()) {
SINGPAR = new Double(s);
}
}

protected final void initSJEMP1(String s) {
if (!s.trim().isEmpty()) {
SJEMP1 = new Double(s);
}
}

protected final void initSJEMP2(String s) {
if (!s.trim().isEmpty()) {
SJEMP2 = new Double(s);
}
}

protected final void initSJOB2(String s) {
if (!s.trim().isEmpty()) {
SJOB2 = new Double(s);
}
}

protected final void initSOLO(String s) {
if (!s.trim().isEmpty()) {
SOLO = new Double(s);
}
}

protected final void initSTARTJ(String s) {
if (!s.trim().isEmpty()) {
STARTJ = new Double(s);
}
}

protected final void initSTAT(String s) {
if (!s.trim().isEmpty()) {
STAT = new Double(s);
}
}

protected final void initSTAT_I(String s) {
if (!s.trim().isEmpty()) {
STAT_I = new Double(s);
}
}

protected final void initSVISE(String s) {
if (!s.trim().isEmpty()) {
SVISE = new Double(s);
}
}

protected final void initTBENEF(String s) {
if (!s.trim().isEmpty()) {
TBENEF = new Double(s);
}
}

protected final void initTBENNUM(String s) {
if (!s.trim().isEmpty()) {
TBENNUM = new Double(s);
}
}

protected final void initTEA(String s) {
if (!s.trim().isEmpty()) {
TEA = new Double(s);
}
}

protected final void initTINTRO(String s) {
if (!s.trim().isEmpty()) {
TINTRO = new Double(s);
}
}

protected final void initTOTPEN(String s) {
if (!s.trim().isEmpty()) {
TOTPEN = new Double(s);
}
}

protected final void initTSETT(String s) {
if (!s.trim().isEmpty()) {
TSETT = new Double(s);
}
}

protected final void initTYPE(String s) {
if (!s.trim().isEmpty()) {
TYPE = new Double(s);
}
}

protected final void initUNMTYP(String s) {
if (!s.trim().isEmpty()) {
UNMTYP = new Double(s);
}
}

protected final void initUNUMBD(String s) {
if (!s.trim().isEmpty()) {
UNUMBD = new Double(s);
}
}

protected final void initUNUMBD_I(String s) {
if (!s.trim().isEmpty()) {
UNUMBD_I = new Double(s);
}
}

protected final void initUNUMBD_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UNUMBD_IFLAG = new Double(s);
}
}

protected final void initUNUMHS(String s) {
if (!s.trim().isEmpty()) {
UNUMHS = new Double(s);
}
}

protected final void initUNUMHS_I(String s) {
if (!s.trim().isEmpty()) {
UNUMHS_I = new Double(s);
}
}

protected final void initUNUMHS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UNUMHS_IFLAG = new Double(s);
}
}

protected final void initUNUMLA(String s) {
if (!s.trim().isEmpty()) {
UNUMLA = new Double(s);
}
}

protected final void initUNUMLA_I(String s) {
if (!s.trim().isEmpty()) {
UNUMLA_I = new Double(s);
}
}

protected final void initUNUMLA_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UNUMLA_IFLAG = new Double(s);
}
}

protected final void initUNUMOV(String s) {
if (!s.trim().isEmpty()) {
UNUMOV = new Double(s);
}
}

protected final void initUNUMOV_I(String s) {
if (!s.trim().isEmpty()) {
UNUMOV_I = new Double(s);
}
}

protected final void initUNUMOV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UNUMOV_IFLAG = new Double(s);
}
}

protected final void initUNUMRE(String s) {
if (!s.trim().isEmpty()) {
UNUMRE = new Double(s);
}
}

protected final void initUNUMRE_I(String s) {
if (!s.trim().isEmpty()) {
UNUMRE_I = new Double(s);
}
}

protected final void initUNUMRE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UNUMRE_IFLAG = new Double(s);
}
}

protected final void initUPROP1(String s) {
if (!s.trim().isEmpty()) {
UPROP1 = new Double(s);
}
}

protected final void initUPROP1_I(String s) {
if (!s.trim().isEmpty()) {
UPROP1_I = new Double(s);
}
}

protected final void initUPROP2(String s) {
if (!s.trim().isEmpty()) {
UPROP2 = new Double(s);
}
}

protected final void initUPROP2_I(String s) {
if (!s.trim().isEmpty()) {
UPROP2_I = new Double(s);
}
}

protected final void initUPROP3(String s) {
if (!s.trim().isEmpty()) {
UPROP3 = new Double(s);
}
}

protected final void initUPROP3_I(String s) {
if (!s.trim().isEmpty()) {
UPROP3_I = new Double(s);
}
}

protected final void initUPROP4(String s) {
if (!s.trim().isEmpty()) {
UPROP4 = new Double(s);
}
}

protected final void initUPROP4_I(String s) {
if (!s.trim().isEmpty()) {
UPROP4_I = new Double(s);
}
}

protected final void initUPRSH1(String s) {
if (!s.trim().isEmpty()) {
UPRSH1 = new Double(s);
}
}

protected final void initUPRSH2(String s) {
if (!s.trim().isEmpty()) {
UPRSH2 = new Double(s);
}
}

protected final void initUPRSH3(String s) {
if (!s.trim().isEmpty()) {
UPRSH3 = new Double(s);
}
}

protected final void initUPRSH4(String s) {
if (!s.trim().isEmpty()) {
UPRSH4 = new Double(s);
}
}

protected final void initUPRSH5(String s) {
if (!s.trim().isEmpty()) {
UPRSH5 = new Double(s);
}
}

protected final void initWORKAGE(String s) {
if (!s.trim().isEmpty()) {
WORKAGE = new Double(s);
}
}

protected final void initWRKING(String s) {
if (!s.trim().isEmpty()) {
WRKING = new Double(s);
}
}

protected final void initXINSOL(String s) {
if (!s.trim().isEmpty()) {
XINSOL = new Double(s);
}
}

protected final void initXINTYP(String s) {
if (!s.trim().isEmpty()) {
XINTYP = new Double(s);
}
}

protected final void initYEAR(String s) {
if (!s.trim().isEmpty()) {
YEAR = new Double(s);
}
}

protected final void initYINACT(String s) {
if (!s.trim().isEmpty()) {
YINACT = new Double(s);
}
}

public Double getATTEND() {
return ATTEND;
}

public String getBACCBEG2() {
return BACCBEG2;
}

public String getBACCBEG3() {
return BACCBEG3;
}

public Double getBACCSA2() {
return BACCSA2;
}

public Double getBACCSA3() {
return BACCSA3;
}

public Double getBACCSB2() {
return BACCSB2;
}

public Double getBACCSB3() {
return BACCSB3;
}

public Double getBBEFORE2() {
return BBEFORE2;
}

public Double getBBEFORE3() {
return BBEFORE3;
}

public Double getBDEBTS2() {
return BDEBTS2;
}

public Double getBDEBTS3() {
return BDEBTS3;
}

public Double getBDIRNI2() {
return BDIRNI2;
}

public Double getBDIRNI3() {
return BDIRNI3;
}

public Double getBDOCS2() {
return BDOCS2;
}

public Double getBDOCS3() {
return BDOCS3;
}

public Double getBEMPN2() {
return BEMPN2;
}

public Double getBEMPN3() {
return BEMPN3;
}

public Double getBFUND1() {
return BFUND1;
}

public Double getBFUND10() {
return BFUND10;
}

public Double getBFUND17() {
return BFUND17;
}

public Double getBFUND2() {
return BFUND2;
}

public Double getBFUND9() {
return BFUND9;
}

public Double getBMOREBUS() {
return BMOREBUS;
}

public Double getBNATINS2() {
return BNATINS2;
}

public Double getBNATINS3() {
return BNATINS3;
}

public Double getBONTAX() {
return BONTAX;
}

public Double getBOWED2() {
return BOWED2;
}

public Double getBOWED3() {
return BOWED3;
}

public Double getBOWN2() {
return BOWN2;
}

public Double getBOWN3() {
return BOWN3;
}

public Double getBPART2() {
return BPART2;
}

public Double getBPART3() {
return BPART3;
}

public Double getBPAST() {
return BPAST;
}

public Double getBPROFIT2() {
return BPROFIT2;
}

public Double getBPROFIT3() {
return BPROFIT3;
}

public Double getBPROPN2() {
return BPROPN2;
}

public Double getBPROPN3() {
return BPROPN3;
}

public Double getBRETIRE2() {
return BRETIRE2;
}

public Double getBRETIRE3() {
return BRETIRE3;
}

public Double getBSELLAB() {
return BSELLAB;
}

public Double getBSELLAM() {
return BSELLAM;
}

public Double getBSELLTX() {
return BSELLTX;
}

public Double getBSELLYR() {
return BSELLYR;
}

public Double getBSIZE2() {
return BSIZE2;
}

public Double getBSIZE3() {
return BSIZE3;
}

public Double getBSTART2() {
return BSTART2;
}

public Double getBSTART3() {
return BSTART3;
}

public Double getBTAX2() {
return BTAX2;
}

public Double getBTAX3() {
return BTAX3;
}

public Double getBTYPE2() {
return BTYPE2;
}

public Double getBTYPE3() {
return BTYPE3;
}

public Double getBVAL2() {
return BVAL2;
}

public Double getBVAL3() {
return BVAL3;
}

public Double getBVALB2() {
return BVALB2;
}

public Double getBWORTH() {
return BWORTH;
}

public Double getBWORTHB() {
return BWORTHB;
}

public Double getBYEAR2() {
return BYEAR2;
}

public Double getBYEAR3() {
return BYEAR3;
}

public Double getCACTF() {
return CACTF;
}

public Double getCACTF_I() {
return CACTF_I;
}

public Double getCACTF_IFLAG() {
return CACTF_IFLAG;
}

public Double getCACTV() {
return CACTV;
}

public Double getCACTV_I() {
return CACTV_I;
}

public Double getCACTV_IFLAG() {
return CACTV_IFLAG;
}

public Double getCASAV() {
return CASAV;
}

public Double getCASAV_I() {
return CASAV_I;
}

public Double getCASAV_IFLAG() {
return CASAV_IFLAG;
}

public Integer getCASEW1() {
return CASEW1;
}

public Double getCASVB() {
return CASVB;
}

public Double getCASVV() {
return CASVV;
}

public Double getCASVV_I() {
return CASVV_I;
}

public Double getCASVV_IFLAG() {
return CASVV_IFLAG;
}

public Double getCOURSE() {
return COURSE;
}

public Double getCURRAC() {
return CURRAC;
}

public Double getDBURD() {
return DBURD;
}

public Double getDBURDA() {
return DBURDA;
}

public Double getDCAMC2() {
return DCAMC2;
}

public Double getDCAMC3() {
return DCAMC3;
}

public Double getDCAMD2() {
return DCAMD2;
}

public Double getDCAMD3() {
return DCAMD3;
}

public Double getDCAMP2() {
return DCAMP2;
}

public Double getDCAMP3() {
return DCAMP3;
}

public Double getDCANU() {
return DCANU;
}

public Double getDCANY() {
return DCANY;
}

public Double getDCCOS2() {
return DCCOS2;
}

public Double getDCCOS3() {
return DCCOS3;
}

public Double getDCCSP2() {
return DCCSP2;
}

public Double getDCCSP3() {
return DCCSP3;
}

public Double getDCESB2() {
return DCESB2;
}

public Double getDCESB3() {
return DCESB3;
}

public Double getDCINZ2() {
return DCINZ2;
}

public Double getDCINZ3() {
return DCINZ3;
}

public Double getDCNAM2() {
return DCNAM2;
}

public Double getDCNAM3() {
return DCNAM3;
}

public Double getDCOINV2() {
return DCOINV2;
}

public Double getDCOINV2_I() {
return DCOINV2_I;
}

public Double getDCOINV2_IFLAG() {
return DCOINV2_IFLAG;
}

public Double getDCOINV3() {
return DCOINV3;
}

public Double getDCOINVB2() {
return DCOINVB2;
}

public Double getDCOINVB3() {
return DCOINVB3;
}

public Double getDCONM1() {
return DCONM1;
}

public Double getDCONM2() {
return DCONM2;
}

public Double getDCONM3() {
return DCONM3;
}

public Double getDCONM4() {
return DCONM4;
}

public Double getDCONM5() {
return DCONM5;
}

public Double getDCONM6() {
return DCONM6;
}

public Double getDCOSHV2() {
return DCOSHV2;
}

public Double getDCOSHV2_I() {
return DCOSHV2_I;
}

public Double getDCOSHV2_IFLAG() {
return DCOSHV2_IFLAG;
}

public Double getDCOSHV3() {
return DCOSHV3;
}

public Double getDCOSHVB2() {
return DCOSHVB2;
}

public Double getDCPER2() {
return DCPER2;
}

public Double getDCPER3() {
return DCPER3;
}

public Double getDCREC2() {
return DCREC2;
}

public Double getDCREC3() {
return DCREC3;
}

public Double getDCRSP2() {
return DCRSP2;
}

public Double getDCRSP3() {
return DCRSP3;
}

public Double getDHBAMT01() {
return DHBAMT01;
}

public Double getDHBAMT01_I() {
return DHBAMT01_I;
}

public Double getDHBAMT01_IFLAG() {
return DHBAMT01_IFLAG;
}

public Double getDHBAMT02() {
return DHBAMT02;
}

public Double getDHBAMT02_I() {
return DHBAMT02_I;
}

public Double getDHBAMT02_IFLAG() {
return DHBAMT02_IFLAG;
}

public Double getDHBAMT03() {
return DHBAMT03;
}

public Double getDHBAMT03_I() {
return DHBAMT03_I;
}

public Double getDHBAMT03_IFLAG() {
return DHBAMT03_IFLAG;
}

public Double getDHBAMT04() {
return DHBAMT04;
}

public Double getDHBAMT04_I() {
return DHBAMT04_I;
}

public Double getDHBAMT04_IFLAG() {
return DHBAMT04_IFLAG;
}

public Double getDHBAMT05() {
return DHBAMT05;
}

public Double getDHBAMT05_I() {
return DHBAMT05_I;
}

public Double getDHBAMT05_IFLAG() {
return DHBAMT05_IFLAG;
}

public Double getDHBAMT06() {
return DHBAMT06;
}

public Double getDHBAMT06_I() {
return DHBAMT06_I;
}

public Double getDHBAMT06_IFLAG() {
return DHBAMT06_IFLAG;
}

public Double getDHBAMT07() {
return DHBAMT07;
}

public Double getDHBAMT07_I() {
return DHBAMT07_I;
}

public Double getDHBAMT07_IFLAG() {
return DHBAMT07_IFLAG;
}

public Double getDHBAMT08() {
return DHBAMT08;
}

public Double getDHBAMT08_I() {
return DHBAMT08_I;
}

public Double getDHBAMT08_IFLAG() {
return DHBAMT08_IFLAG;
}

public Double getDHBAMT09() {
return DHBAMT09;
}

public Double getDHBAMT09_I() {
return DHBAMT09_I;
}

public Double getDHBAMT09_IFLAG() {
return DHBAMT09_IFLAG;
}

public Double getDHBAMT10() {
return DHBAMT10;
}

public Double getDHBAMT10_I() {
return DHBAMT10_I;
}

public Double getDHBAMT10_IFLAG() {
return DHBAMT10_IFLAG;
}

public Double getDHBAMT11() {
return DHBAMT11;
}

public Double getDHBAMT11_I() {
return DHBAMT11_I;
}

public Double getDHBAMT11_IFLAG() {
return DHBAMT11_IFLAG;
}

public Double getDHBANY01() {
return DHBANY01;
}

public Double getDHBANY01_I() {
return DHBANY01_I;
}

public Double getDHBANY01_IFLAG() {
return DHBANY01_IFLAG;
}

public Double getDHBANY02() {
return DHBANY02;
}

public Double getDHBANY02_I() {
return DHBANY02_I;
}

public Double getDHBANY02_IFLAG() {
return DHBANY02_IFLAG;
}

public Double getDHBANY03() {
return DHBANY03;
}

public Double getDHBANY03_I() {
return DHBANY03_I;
}

public Double getDHBANY03_IFLAG() {
return DHBANY03_IFLAG;
}

public Double getDHBANY04() {
return DHBANY04;
}

public Double getDHBANY04_I() {
return DHBANY04_I;
}

public Double getDHBANY04_IFLAG() {
return DHBANY04_IFLAG;
}

public Double getDHBANY05() {
return DHBANY05;
}

public Double getDHBANY05_I() {
return DHBANY05_I;
}

public Double getDHBANY05_IFLAG() {
return DHBANY05_IFLAG;
}

public Double getDHBANY06() {
return DHBANY06;
}

public Double getDHBANY06_I() {
return DHBANY06_I;
}

public Double getDHBANY06_IFLAG() {
return DHBANY06_IFLAG;
}

public Double getDHBANY07() {
return DHBANY07;
}

public Double getDHBANY07_I() {
return DHBANY07_I;
}

public Double getDHBANY07_IFLAG() {
return DHBANY07_IFLAG;
}

public Double getDHBEST01() {
return DHBEST01;
}

public Double getDHBEST02() {
return DHBEST02;
}

public Double getDHBEST03() {
return DHBEST03;
}

public Double getDHBEST04() {
return DHBEST04;
}

public Double getDHBEST05() {
return DHBEST05;
}

public Double getDHBEST06() {
return DHBEST06;
}

public Double getDHBEST07() {
return DHBEST07;
}

public Double getDHBEST08() {
return DHBEST08;
}

public Double getDHBEST09() {
return DHBEST09;
}

public Double getDHBEST10() {
return DHBEST10;
}

public Double getDHBEST11() {
return DHBEST11;
}

public Double getDHBFIX() {
return DHBFIX;
}

public Double getDHPANY1() {
return DHPANY1;
}

public Double getDHPANY1_I() {
return DHPANY1_I;
}

public Double getDHPANY1_IFLAG() {
return DHPANY1_IFLAG;
}

public Double getDHPANY2() {
return DHPANY2;
}

public Double getDHPANY2_I() {
return DHPANY2_I;
}

public Double getDHPANY2_IFLAG() {
return DHPANY2_IFLAG;
}

public Double getDHPANY3() {
return DHPANY3;
}

public Double getDHPANY3_I() {
return DHPANY3_I;
}

public Double getDHPANY3_IFLAG() {
return DHPANY3_IFLAG;
}

public Double getDHPBEH2() {
return DHPBEH2;
}

public Double getDHPBEH2_I() {
return DHPBEH2_I;
}

public Double getDHPBEH2_IFLAG() {
return DHPBEH2_IFLAG;
}

public Double getDHPEST2() {
return DHPEST2;
}

public Double getDHPINS2() {
return DHPINS2;
}

public Double getDHPINS2_I() {
return DHPINS2_I;
}

public Double getDHPINS2_IFLAG() {
return DHPINS2_IFLAG;
}

public Double getDHPINT2() {
return DHPINT2;
}

public Double getDHPNUM() {
return DHPNUM;
}

public Double getDHPNUM_I() {
return DHPNUM_I;
}

public Double getDHPNUM_IFLAG() {
return DHPNUM_IFLAG;
}

public Double getDHPOFT2() {
return DHPOFT2;
}

public Double getDHPOFT2_I() {
return DHPOFT2_I;
}

public Double getDHPOFT2_IFLAG() {
return DHPOFT2_IFLAG;
}

public Double getDHPOWE2() {
return DHPOWE2;
}

public Double getDHPOWE2_I() {
return DHPOWE2_I;
}

public Double getDHPOWE2_IFLAG() {
return DHPOWE2_IFLAG;
}

public Double getDHPWEST2() {
return DHPWEST2;
}

public Double getDHPWHNM2() {
return DHPWHNM2;
}

public Double getDHPWHNM2_I() {
return DHPWHNM2_I;
}

public Double getDHPWHNM2_IFLAG() {
return DHPWHNM2_IFLAG;
}

public Double getDHPWHNY2() {
return DHPWHNY2;
}

public Double getDHPWHNY2_I() {
return DHPWHNY2_I;
}

public Double getDHPWHNY2_IFLAG() {
return DHPWHNY2_IFLAG;
}

public Double getDISEVER() {
return DISEVER;
}

public Double getDISTYPE1() {
return DISTYPE1;
}

public Double getDISTYPE2() {
return DISTYPE2;
}

public Double getDISTYPE3() {
return DISTYPE3;
}

public Double getDISTYPE4() {
return DISTYPE4;
}

public Double getDISTYPE5() {
return DISTYPE5;
}

public Double getDISTYPE6() {
return DISTYPE6;
}

public Double getDISTYPE7() {
return DISTYPE7;
}

public Double getDISTYPE8() {
return DISTYPE8;
}

public Double getDISTYPE9() {
return DISTYPE9;
}

public Double getDLANY() {
return DLANY;
}

public Double getDLANY_I() {
return DLANY_I;
}

public Double getDLANY_IFLAG() {
return DLANY_IFLAG;
}

public Double getDLBEH2() {
return DLBEH2;
}

public Double getDLBEH2_I() {
return DLBEH2_I;
}

public Double getDLBEH2_IFLAG() {
return DLBEH2_IFLAG;
}

public Double getDLBEH3() {
return DLBEH3;
}

public Double getDLBEH3_I() {
return DLBEH3_I;
}

public Double getDLBEH3_IFLAG() {
return DLBEH3_IFLAG;
}

public Double getDLBEH4() {
return DLBEH4;
}

public Double getDLBEH4_I() {
return DLBEH4_I;
}

public Double getDLBEH4_IFLAG() {
return DLBEH4_IFLAG;
}

public Double getDLBEH5() {
return DLBEH5;
}

public Double getDLBEH5_I() {
return DLBEH5_I;
}

public Double getDLBEH5_IFLAG() {
return DLBEH5_IFLAG;
}

public Double getDLEST2() {
return DLEST2;
}

public Double getDLEST3() {
return DLEST3;
}

public Double getDLEST4() {
return DLEST4;
}

public Double getDLINS2() {
return DLINS2;
}

public Double getDLINS2_I() {
return DLINS2_I;
}

public Double getDLINS2_IFLAG() {
return DLINS2_IFLAG;
}

public Double getDLINS3() {
return DLINS3;
}

public Double getDLINS3_I() {
return DLINS3_I;
}

public Double getDLINS3_IFLAG() {
return DLINS3_IFLAG;
}

public Double getDLINS4() {
return DLINS4;
}

public Double getDLINS4_I() {
return DLINS4_I;
}

public Double getDLINS4_IFLAG() {
return DLINS4_IFLAG;
}

public Double getDLINS5() {
return DLINS5;
}

public Double getDLINS5_I() {
return DLINS5_I;
}

public Double getDLINS5_IFLAG() {
return DLINS5_IFLAG;
}

public Double getDLINT2() {
return DLINT2;
}

public Double getDLINT3() {
return DLINT3;
}

public Double getDLINT4() {
return DLINT4;
}

public Double getDLINT5() {
return DLINT5;
}

public Double getDLNUM() {
return DLNUM;
}

public Double getDLNUM_I() {
return DLNUM_I;
}

public Double getDLNUM_IFLAG() {
return DLNUM_IFLAG;
}

public Double getDLOFT2() {
return DLOFT2;
}

public Double getDLOFT2_I() {
return DLOFT2_I;
}

public Double getDLOFT2_IFLAG() {
return DLOFT2_IFLAG;
}

public Double getDLOFT3() {
return DLOFT3;
}

public Double getDLOFT3_I() {
return DLOFT3_I;
}

public Double getDLOFT3_IFLAG() {
return DLOFT3_IFLAG;
}

public Double getDLOFT4() {
return DLOFT4;
}

public Double getDLOFT4_I() {
return DLOFT4_I;
}

public Double getDLOFT4_IFLAG() {
return DLOFT4_IFLAG;
}

public Double getDLOFT5() {
return DLOFT5;
}

public Double getDLOFT5_I() {
return DLOFT5_I;
}

public Double getDLOFT5_IFLAG() {
return DLOFT5_IFLAG;
}

public Double getDLOWE2() {
return DLOWE2;
}

public Double getDLOWE2_I() {
return DLOWE2_I;
}

public Double getDLOWE2_IFLAG() {
return DLOWE2_IFLAG;
}

public Double getDLOWE3() {
return DLOWE3;
}

public Double getDLOWE3_I() {
return DLOWE3_I;
}

public Double getDLOWE3_IFLAG() {
return DLOWE3_IFLAG;
}

public Double getDLOWE4() {
return DLOWE4;
}

public Double getDLOWE4_I() {
return DLOWE4_I;
}

public Double getDLOWE4_IFLAG() {
return DLOWE4_IFLAG;
}

public Double getDLOWE5() {
return DLOWE5;
}

public Double getDLOWE5_I() {
return DLOWE5_I;
}

public Double getDLOWE5_IFLAG() {
return DLOWE5_IFLAG;
}

public Double getDLSEC2() {
return DLSEC2;
}

public Double getDLSEC3() {
return DLSEC3;
}

public Double getDLSEC4() {
return DLSEC4;
}

public Double getDLSEC5() {
return DLSEC5;
}

public Double getDLTYPE2() {
return DLTYPE2;
}

public Double getDLTYPE2_I() {
return DLTYPE2_I;
}

public Double getDLTYPE2_IFLAG() {
return DLTYPE2_IFLAG;
}

public Double getDLTYPE3() {
return DLTYPE3;
}

public Double getDLTYPE3_I() {
return DLTYPE3_I;
}

public Double getDLTYPE3_IFLAG() {
return DLTYPE3_IFLAG;
}

public Double getDLTYPE4() {
return DLTYPE4;
}

public Double getDLTYPE4_I() {
return DLTYPE4_I;
}

public Double getDLTYPE4_IFLAG() {
return DLTYPE4_IFLAG;
}

public Double getDLTYPE5() {
return DLTYPE5;
}

public Double getDLTYPE5_I() {
return DLTYPE5_I;
}

public Double getDLTYPE5_IFLAG() {
return DLTYPE5_IFLAG;
}

public Double getDLWEST2() {
return DLWEST2;
}

public Double getDLWEST3() {
return DLWEST3;
}

public Double getDLWEST4() {
return DLWEST4;
}

public Double getDLWEST5() {
return DLWEST5;
}

public Double getDLWHNM2() {
return DLWHNM2;
}

public Double getDLWHNM2_I() {
return DLWHNM2_I;
}

public Double getDLWHNM2_IFLAG() {
return DLWHNM2_IFLAG;
}

public Double getDLWHNM3() {
return DLWHNM3;
}

public Double getDLWHNM3_I() {
return DLWHNM3_I;
}

public Double getDLWHNM3_IFLAG() {
return DLWHNM3_IFLAG;
}

public Double getDLWHNM4() {
return DLWHNM4;
}

public Double getDLWHNM4_I() {
return DLWHNM4_I;
}

public Double getDLWHNM4_IFLAG() {
return DLWHNM4_IFLAG;
}

public Double getDLWHNM5() {
return DLWHNM5;
}

public Double getDLWHNM5_I() {
return DLWHNM5_I;
}

public Double getDLWHNM5_IFLAG() {
return DLWHNM5_IFLAG;
}

public Double getDLWHNY2() {
return DLWHNY2;
}

public Double getDLWHNY2_I() {
return DLWHNY2_I;
}

public Double getDLWHNY2_IFLAG() {
return DLWHNY2_IFLAG;
}

public Double getDLWHNY3() {
return DLWHNY3;
}

public Double getDLWHNY3_I() {
return DLWHNY3_I;
}

public Double getDLWHNY3_IFLAG() {
return DLWHNY3_IFLAG;
}

public Double getDLWHNY4() {
return DLWHNY4;
}

public Double getDLWHNY4_I() {
return DLWHNY4_I;
}

public Double getDLWHNY4_IFLAG() {
return DLWHNY4_IFLAG;
}

public Double getDLWHNY5() {
return DLWHNY5;
}

public Double getDLWHNY5_I() {
return DLWHNY5_I;
}

public Double getDLWHNY5_IFLAG() {
return DLWHNY5_IFLAG;
}

public Double getDLWHY1() {
return DLWHY1;
}

public Double getDLWHY10() {
return DLWHY10;
}

public Double getDLWHY15() {
return DLWHY15;
}

public Double getDLWHY16() {
return DLWHY16;
}

public Double getDLWHY2() {
return DLWHY2;
}

public Double getDLWHY22() {
return DLWHY22;
}

public Double getDLWHY23() {
return DLWHY23;
}

public Double getDLWHY29() {
return DLWHY29;
}

public Double getDLWHY3() {
return DLWHY3;
}

public Double getDLWHY4() {
return DLWHY4;
}

public Double getDLWHY5() {
return DLWHY5;
}

public Double getDLWHY8() {
return DLWHY8;
}

public Double getDLWHY9() {
return DLWHY9;
}

public Double getDMOANY() {
return DMOANY;
}

public Double getDMOANY_I() {
return DMOANY_I;
}

public Double getDMOANY_IFLAG() {
return DMOANY_IFLAG;
}

public Double getDMOBEH2() {
return DMOBEH2;
}

public Double getDMOBEH2_I() {
return DMOBEH2_I;
}

public Double getDMOBEH2_IFLAG() {
return DMOBEH2_IFLAG;
}

public Double getDMOEST2() {
return DMOEST2;
}

public Double getDMOINS2() {
return DMOINS2;
}

public Double getDMOINS2_I() {
return DMOINS2_I;
}

public Double getDMOINS2_IFLAG() {
return DMOINS2_IFLAG;
}

public Double getDMOINT2() {
return DMOINT2;
}

public Double getDMONUM() {
return DMONUM;
}

public Double getDMONUM_I() {
return DMONUM_I;
}

public Double getDMONUM_IFLAG() {
return DMONUM_IFLAG;
}

public Double getDMOOFT2() {
return DMOOFT2;
}

public Double getDMOOFT2_I() {
return DMOOFT2_I;
}

public Double getDMOOFT2_IFLAG() {
return DMOOFT2_IFLAG;
}

public Double getDMOOWE2() {
return DMOOWE2;
}

public Double getDMOOWE2_I() {
return DMOOWE2_I;
}

public Double getDMOOWE2_IFLAG() {
return DMOOWE2_IFLAG;
}

public Double getDMOWEST2() {
return DMOWEST2;
}

public Double getDMOWHNM2() {
return DMOWHNM2;
}

public Double getDMOWHNM2_I() {
return DMOWHNM2_I;
}

public Double getDMOWHNM2_IFLAG() {
return DMOWHNM2_IFLAG;
}

public Double getDMOWHNY2() {
return DMOWHNY2;
}

public Double getDMOWHNY2_I() {
return DMOWHNY2_I;
}

public Double getDMOWHNY2_IFLAG() {
return DMOWHNY2_IFLAG;
}

public Double getDSAMC2() {
return DSAMC2;
}

public Double getDSAMC3() {
return DSAMC3;
}

public Double getDSAMD2() {
return DSAMD2;
}

public Double getDSAMD3() {
return DSAMD3;
}

public Double getDSAMP2() {
return DSAMP2;
}

public Double getDSAMP3() {
return DSAMP3;
}

public Double getDSANU1() {
return DSANU1;
}

public Double getDSANU2() {
return DSANU2;
}

public Double getDSANY1() {
return DSANY1;
}

public Double getDSANY2() {
return DSANY2;
}

public Double getDSCOS2() {
return DSCOS2;
}

public Double getDSCOS3() {
return DSCOS3;
}

public Double getDSCSP2() {
return DSCSP2;
}

public Double getDSCSP3() {
return DSCSP3;
}

public Double getDSESB2() {
return DSESB2;
}

public Double getDSESB3() {
return DSESB3;
}

public Double getDSLAMT2() {
return DSLAMT2;
}

public Double getDSLAMT2_I() {
return DSLAMT2_I;
}

public Double getDSLAMT2_IFLAG() {
return DSLAMT2_IFLAG;
}

public Double getDSLAMT3() {
return DSLAMT3;
}

public Double getDSLAMT3_I() {
return DSLAMT3_I;
}

public Double getDSLAMT3_IFLAG() {
return DSLAMT3_IFLAG;
}

public Double getDSLAMT4() {
return DSLAMT4;
}

public Double getDSLAMT4_I() {
return DSLAMT4_I;
}

public Double getDSLAMT4_IFLAG() {
return DSLAMT4_IFLAG;
}

public Double getDSLAMT5() {
return DSLAMT5;
}

public Double getDSLAMT5_I() {
return DSLAMT5_I;
}

public Double getDSLAMT5_IFLAG() {
return DSLAMT5_IFLAG;
}

public Double getDSLEST2() {
return DSLEST2;
}

public Double getDSLEST3() {
return DSLEST3;
}

public Double getDSLEST4() {
return DSLEST4;
}

public Double getDSLEST5() {
return DSLEST5;
}

public Double getDSLPAY2() {
return DSLPAY2;
}

public Double getDSLPAY3() {
return DSLPAY3;
}

public Double getDSLPAY4() {
return DSLPAY4;
}

public Double getDSLPAY5() {
return DSLPAY5;
}

public Double getDSNAM2() {
return DSNAM2;
}

public Double getDSNAM3() {
return DSNAM3;
}

public Double getDSONM1() {
return DSONM1;
}

public Double getDSONM2() {
return DSONM2;
}

public Double getDSONM3() {
return DSONM3;
}

public Double getDSONM4() {
return DSONM4;
}

public Double getDSONM5() {
return DSONM5;
}

public Double getDSONM6() {
return DSONM6;
}

public Double getDSPER2() {
return DSPER2;
}

public Double getDSREC2() {
return DSREC2;
}

public Double getDSREC3() {
return DSREC3;
}

public String getDTJBL() {
return DTJBL;
}

public Double getDVAGE17() {
return DVAGE17;
}

public Double getDVANYARR() {
return DVANYARR;
}

public Double getDVCACTV() {
return DVCACTV;
}

public Double getDVCASVV() {
return DVCASVV;
}

public Double getDVCHMARR() {
return DVCHMARR;
}

public Double getDVCISAV() {
return DVCISAV;
}

public Double getDVCOINV2() {
return DVCOINV2;
}

public Double getDVCOINV3() {
return DVCOINV3;
}

public Double getDVCRTARR() {
return DVCRTARR;
}

public Double getDVCTARR() {
return DVCTARR;
}

public Double getDVDBINC1() {
return DVDBINC1;
}

public Double getDVDBINC2() {
return DVDBINC2;
}

public Double getDVDBINC3() {
return DVDBINC3;
}

public Double getDVDBINCALL() {
return DVDBINCALL;
}

public Double getDVDBLUMP1() {
return DVDBLUMP1;
}

public Double getDVDBLUMP2() {
return DVDBLUMP2;
}

public Double getDVDBLUMP3() {
return DVDBLUMP3;
}

public Double getDVDBRWEALTHVAL() {
return DVDBRWEALTHVAL;
}

public Double getDVDHPOWE2() {
return DVDHPOWE2;
}

public Double getDVDLOWE2() {
return DVDLOWE2;
}

public Double getDVDLOWE3() {
return DVDLOWE3;
}

public Double getDVDLOWE4() {
return DVDLOWE4;
}

public Double getDVDMOOWE2() {
return DVDMOOWE2;
}

public Double getDVELARR() {
return DVELARR;
}

public Double getDVFBONDV() {
return DVFBONDV;
}

public Double getDVFCINVAL() {
return DVFCINVAL;
}

public Double getDVFCOLLV() {
return DVFCOLLV;
}

public Double getDVFEOPTV() {
return DVFEOPTV;
}

public Double getDVFESHAV() {
return DVFESHAV;
}

public Double getDVFGLTFOV() {
return DVFGLTFOV;
}

public Double getDVFGLTUKV() {
return DVFGLTUKV;
}

public Double getDVFINFLV() {
return DVFINFLV;
}

public Double getDVFINFV() {
return DVFINFV;
}

public Double getDVFINVOTV() {
return DVFINVOTV;
}

public Double getDVFLFENV() {
return DVFLFENV;
}

public Double getDVFLFFSV() {
return DVFLFFSV;
}

public Double getDVFLFSIV() {
return DVFLFSIV;
}

public Double getDVFLFTEV() {
return DVFLFTEV;
}

public Double getDVFNSVAL() {
return DVFNSVAL;
}

public Double getDVFSHOSV() {
return DVFSHOSV;
}

public Double getDVFSHUKV() {
return DVFSHUKV;
}

public Double getDVFSINVAL() {
return DVFSINVAL;
}

public Double getDVGASARR() {
return DVGASARR;
}

public Double getDVGRSPAY() {
return DVGRSPAY;
}

public Double getDVHASAVC() {
return DVHASAVC;
}

public Double getDVHASDB() {
return DVHASDB;
}

public Double getDVHASDC() {
return DVHASDC;
}

public Double getDVHASPFCUR() {
return DVHASPFCUR;
}

public Double getDVHASPFD() {
return DVHASPFD;
}

public Double getDVHASPP() {
return DVHASPP;
}

public Double getDVHPAR() {
return DVHPAR;
}

public Double getDVIISAV() {
return DVIISAV;
}

public Double getDVILO3A() {
return DVILO3A;
}

public Double getDVILO4A() {
return DVILO4A;
}

public Double getDVJB12ML() {
return DVJB12ML;
}

public Double getDVKISAV() {
return DVKISAV;
}

public Double getDVMRDF() {
return DVMRDF;
}

public Double getDVNETPAY() {
return DVNETPAY;
}

public Double getDVOTHARR() {
return DVOTHARR;
}

public Double getDVPAVCUV() {
return DVPAVCUV;
}

public Double getDVPFCURVAL() {
return DVPFCURVAL;
}

public Double getDVPFDDV() {
return DVPFDDV;
}

public Double getDVPINPVAL() {
return DVPINPVAL;
}

public Double getDVPPVAL() {
return DVPPVAL;
}

public Double getDVRNTARR() {
return DVRNTARR;
}

public Double getDVSHCVAL() {
return DVSHCVAL;
}

public Double getDVSHODVAL2() {
return DVSHODVAL2;
}

public Double getDVSHODVAL3() {
return DVSHODVAL3;
}

public Double getDVSHSVAL() {
return DVSHSVAL;
}

public Double getDVSPEN() {
return DVSPEN;
}

public Double getDVTAXARR() {
return DVTAXARR;
}

public Double getDVTELARR() {
return DVTELARR;
}

public Double getDVVALDBLUM() {
return DVVALDBLUM;
}

public Double getDVVALDBT() {
return DVVALDBT;
}

public Double getDVVALDCOS() {
return DVVALDCOS;
}

public Double getDVVALPBLUM() {
return DVVALPBLUM;
}

public Double getDVVATARR() {
return DVVATARR;
}

public Double getDVWATARR() {
return DVWATARR;
}

public Double getEDATTN1() {
return EDATTN1;
}

public Double getEDATTN2() {
return EDATTN2;
}

public Double getEDATTN3() {
return EDATTN3;
}

public Double getEDLEVEL() {
return EDLEVEL;
}

public Double getEMPN() {
return EMPN;
}

public Double getEMPSTY() {
return EMPSTY;
}

public Double getEMSHAR1() {
return EMSHAR1;
}

public Double getEMSHAR2() {
return EMSHAR2;
}

public Double getEMSHAR3() {
return EMSHAR3;
}

public Double getENROLL() {
return ENROLL;
}

public Double getEVERWK() {
return EVERWK;
}

public Double getFBONDTY1() {
return FBONDTY1;
}

public Double getFBONDTY2() {
return FBONDTY2;
}

public Double getFBONDTY3() {
return FBONDTY3;
}

public Double getFBONDV() {
return FBONDV;
}

public Double getFBONDVB() {
return FBONDVB;
}

public Double getFBONDV_I() {
return FBONDV_I;
}

public Double getFBONDV_IFLAG() {
return FBONDV_IFLAG;
}

public Double getFCACSH() {
return FCACSH;
}

public Double getFCACSH_I() {
return FCACSH_I;
}

public Double getFCACSH_IFLAG() {
return FCACSH_IFLAG;
}

public Double getFCINVAL() {
return FCINVAL;
}

public Double getFCINVAL_I() {
return FCINVAL_I;
}

public Double getFCINVAL_IFLAG() {
return FCINVAL_IFLAG;
}

public Double getFCINVLB() {
return FCINVLB;
}

public Double getFCISAB() {
return FCISAB;
}

public Double getFCISAV() {
return FCISAV;
}

public Double getFCISAV_I() {
return FCISAV_I;
}

public Double getFCISAV_IFLAG() {
return FCISAV_IFLAG;
}

public Double getFCNUMIN() {
return FCNUMIN;
}

public Double getFCNUMIN_I() {
return FCNUMIN_I;
}

public Double getFCNUMIN_IFLAG() {
return FCNUMIN_IFLAG;
}

public Double getFCNUMSH() {
return FCNUMSH;
}

public Double getFCNUMSH_I() {
return FCNUMSH_I;
}

public Double getFCNUMSH_IFLAG() {
return FCNUMSH_IFLAG;
}

public Double getFCOLLV() {
return FCOLLV;
}

public Double getFCOLLVB() {
return FCOLLVB;
}

public Double getFCOLLV_I() {
return FCOLLV_I;
}

public Double getFCOLLV_IFLAG() {
return FCOLLV_IFLAG;
}

public Double getFCOVDIF() {
return FCOVDIF;
}

public Double getFCOVDIN() {
return FCOVDIN;
}

public Double getFCOVDIN_I() {
return FCOVDIN_I;
}

public Double getFCOVDIN_IFLAG() {
return FCOVDIN_IFLAG;
}

public Double getFCOVDSH() {
return FCOVDSH;
}

public Double getFCOVDSH_I() {
return FCOVDSH_I;
}

public Double getFCOVDSH_IFLAG() {
return FCOVDSH_IFLAG;
}

public Double getFCOVNIN() {
return FCOVNIN;
}

public Double getFCOVNIN_I() {
return FCOVNIN_I;
}

public Double getFCOVNIN_IFLAG() {
return FCOVNIN_IFLAG;
}

public Double getFCOVNSH() {
return FCOVNSH;
}

public Double getFCOVNSH_I() {
return FCOVNSH_I;
}

public Double getFCOVNSH_IFLAG() {
return FCOVNSH_IFLAG;
}

public Double getFCSHVAL() {
return FCSHVAL;
}

public Double getFCSHVAL_I() {
return FCSHVAL_I;
}

public Double getFCSHVAL_IFLAG() {
return FCSHVAL_IFLAG;
}

public Double getFCSHVLB() {
return FCSHVLB;
}

public Double getFCSUPPR() {
return FCSUPPR;
}

public Double getFEOPTV() {
return FEOPTV;
}

public Double getFEOPTV_I() {
return FEOPTV_I;
}

public Double getFEOPTV_IFLAG() {
return FEOPTV_IFLAG;
}

public Double getFEOPVB() {
return FEOPVB;
}

public Double getFESHA() {
return FESHA;
}

public Double getFESHAV() {
return FESHAV;
}

public Double getFESHAV_I() {
return FESHAV_I;
}

public Double getFESHAV_IFLAG() {
return FESHAV_IFLAG;
}

public Double getFESHA_I() {
return FESHA_I;
}

public Double getFESHA_IFLAG() {
return FESHA_IFLAG;
}

public Double getFESHVB() {
return FESHVB;
}

public Double getFGFOVB() {
return FGFOVB;
}

public Double getFGILTS1() {
return FGILTS1;
}

public Double getFGILTS1_I() {
return FGILTS1_I;
}

public Double getFGILTS1_IFLAG() {
return FGILTS1_IFLAG;
}

public Double getFGILTS2() {
return FGILTS2;
}

public Double getFGILTS2_I() {
return FGILTS2_I;
}

public Double getFGILTS2_IFLAG() {
return FGILTS2_IFLAG;
}

public Double getFGILTS3() {
return FGILTS3;
}

public Double getFGILTS3_I() {
return FGILTS3_I;
}

public Double getFGILTS3_IFLAG() {
return FGILTS3_IFLAG;
}

public Double getFGILTS4() {
return FGILTS4;
}

public Double getFGILTS4_I() {
return FGILTS4_I;
}

public Double getFGILTS4_IFLAG() {
return FGILTS4_IFLAG;
}

public Double getFGLTFOV() {
return FGLTFOV;
}

public Double getFGLTFOV_I() {
return FGLTFOV_I;
}

public Double getFGLTFOV_IFLAG() {
return FGLTFOV_IFLAG;
}

public Double getFGLTUKV() {
return FGLTUKV;
}

public Double getFGLTUKV_I() {
return FGLTUKV_I;
}

public Double getFGLTUKV_IFLAG() {
return FGLTUKV_IFLAG;
}

public Double getFGUKVB() {
return FGUKVB;
}

public Double getFIISAB() {
return FIISAB;
}

public Double getFIISAV() {
return FIISAV;
}

public Double getFIISAV_I() {
return FIISAV_I;
}

public Double getFIISAV_IFLAG() {
return FIISAV_IFLAG;
}

public Double getFINCVB() {
return FINCVB;
}

public Double getFINFLV() {
return FINFLV;
}

public Double getFINFLV_I() {
return FINFLV_I;
}

public Double getFINFLV_IFLAG() {
return FINFLV_IFLAG;
}

public Double getFINFSAV1() {
return FINFSAV1;
}

public Double getFINFSAV1_I() {
return FINFSAV1_I;
}

public Double getFINFSAV1_IFLAG() {
return FINFSAV1_IFLAG;
}

public Double getFINFSAV2() {
return FINFSAV2;
}

public Double getFINFSAV2_I() {
return FINFSAV2_I;
}

public Double getFINFSAV2_IFLAG() {
return FINFSAV2_IFLAG;
}

public Double getFINFSAV3() {
return FINFSAV3;
}

public Double getFINFSAV3_I() {
return FINFSAV3_I;
}

public Double getFINFSAV3_IFLAG() {
return FINFSAV3_IFLAG;
}

public Double getFINFSAV4() {
return FINFSAV4;
}

public Double getFINFSAV4_I() {
return FINFSAV4_I;
}

public Double getFINFSAV4_IFLAG() {
return FINFSAV4_IFLAG;
}

public Double getFINFV() {
return FINFV;
}

public Double getFINFVB() {
return FINFVB;
}

public Double getFINFV_I() {
return FINFV_I;
}

public Double getFINFV_IFLAG() {
return FINFV_IFLAG;
}

public Double getFINS() {
return FINS;
}

public Double getFINSV() {
return FINSV;
}

public Double getFINSV_I() {
return FINSV_I;
}

public Double getFINSV_IFLAG() {
return FINSV_IFLAG;
}

public Double getFINS_I() {
return FINS_I;
}

public Double getFINS_IFLAG() {
return FINS_IFLAG;
}

public Double getFINVOTV() {
return FINVOTV;
}

public Double getFINVOTV_I() {
return FINVOTV_I;
}

public Double getFINVOTV_IFLAG() {
return FINVOTV_IFLAG;
}

public Double getFINVOVB() {
return FINVOVB;
}

public Double getFINVTY01() {
return FINVTY01;
}

public Double getFINVTY01_I() {
return FINVTY01_I;
}

public Double getFINVTY02() {
return FINVTY02;
}

public Double getFINVTY02_I() {
return FINVTY02_I;
}

public Double getFINVTY03() {
return FINVTY03;
}

public Double getFINVTY03_I() {
return FINVTY03_I;
}

public Double getFINVTY04() {
return FINVTY04;
}

public Double getFINVTY04_I() {
return FINVTY04_I;
}

public Double getFINVTY05() {
return FINVTY05;
}

public Double getFINVTY05_I() {
return FINVTY05_I;
}

public Double getFINVTY06() {
return FINVTY06;
}

public Double getFINVTY06_I() {
return FINVTY06_I;
}

public Double getFINVTY07() {
return FINVTY07;
}

public Double getFINVTY07_I() {
return FINVTY07_I;
}

public Double getFINVTY08() {
return FINVTY08;
}

public Double getFINVTY08_I() {
return FINVTY08_I;
}

public Double getFINVTY09() {
return FINVTY09;
}

public Double getFINVTY09_I() {
return FINVTY09_I;
}

public Double getFINVTY10() {
return FINVTY10;
}

public Double getFINVTY10_I() {
return FINVTY10_I;
}

public Double getFINVTY11() {
return FINVTY11;
}

public Double getFISA1() {
return FISA1;
}

public Double getFISA1_I() {
return FISA1_I;
}

public Double getFISA1_IFLAG() {
return FISA1_IFLAG;
}

public Double getFISA2() {
return FISA2;
}

public Double getFISA2_I() {
return FISA2_I;
}

public Double getFISA2_IFLAG() {
return FISA2_IFLAG;
}

public Double getFKISAB() {
return FKISAB;
}

public Double getFKISAV() {
return FKISAV;
}

public Double getFKISAV_I() {
return FKISAV_I;
}

public Double getFKISAV_IFLAG() {
return FKISAV_IFLAG;
}

public Double getFLFENV() {
return FLFENV;
}

public Double getFLFENVB() {
return FLFENVB;
}

public Double getFLFENV_I() {
return FLFENV_I;
}

public Double getFLFENV_IFLAG() {
return FLFENV_IFLAG;
}

public Double getFLFFSV() {
return FLFFSV;
}

public Double getFLFFSVB() {
return FLFFSVB;
}

public Double getFLFFSV_I() {
return FLFFSV_I;
}

public Double getFLFFSV_IFLAG() {
return FLFFSV_IFLAG;
}

public Double getFLFSIV() {
return FLFSIV;
}

public Double getFLFSIVB() {
return FLFSIVB;
}

public Double getFLFSIV_I() {
return FLFSIV_I;
}

public Double getFLFSIV_IFLAG() {
return FLFSIV_IFLAG;
}

public Double getFLFTEV() {
return FLFTEV;
}

public Double getFLFTEVB() {
return FLFTEVB;
}

public Double getFLFTEV_I() {
return FLFTEV_I;
}

public Double getFLFTEV_IFLAG() {
return FLFTEV_IFLAG;
}

public Double getFLNOS1() {
return FLNOS1;
}

public Double getFLNOS2() {
return FLNOS2;
}

public Double getFLNOS3() {
return FLNOS3;
}

public Double getFLNOS4() {
return FLNOS4;
}

public Double getFLOANVB() {
return FLOANVB;
}

public Double getFLPROD1() {
return FLPROD1;
}

public Double getFLPROD1_I() {
return FLPROD1_I;
}

public Double getFLPROD1_IFLAG() {
return FLPROD1_IFLAG;
}

public Double getFLPROD2() {
return FLPROD2;
}

public Double getFLPROD2_I() {
return FLPROD2_I;
}

public Double getFLPROD2_IFLAG() {
return FLPROD2_IFLAG;
}

public Double getFLPROD3() {
return FLPROD3;
}

public Double getFLPROD3_I() {
return FLPROD3_I;
}

public Double getFLPROD3_IFLAG() {
return FLPROD3_IFLAG;
}

public Double getFLPROD4() {
return FLPROD4;
}

public Double getFLPROD4_I() {
return FLPROD4_I;
}

public Double getFLPROD4_IFLAG() {
return FLPROD4_IFLAG;
}

public Double getFNSAV1() {
return FNSAV1;
}

public Double getFNSAV2() {
return FNSAV2;
}

public Double getFNSAV3() {
return FNSAV3;
}

public Double getFNSAV4() {
return FNSAV4;
}

public Double getFNSVAL_IFLAG() {
return FNSVAL_IFLAG;
}

public Double getFNSVB() {
return FNSVB;
}

public Double getFSACSH() {
return FSACSH;
}

public Double getFSACSH_I() {
return FSACSH_I;
}

public Double getFSACSH_IFLAG() {
return FSACSH_IFLAG;
}

public Double getFSHARE1() {
return FSHARE1;
}

public Double getFSHARE1_I() {
return FSHARE1_I;
}

public Double getFSHARE1_IFLAG() {
return FSHARE1_IFLAG;
}

public Double getFSHARE2() {
return FSHARE2;
}

public Double getFSHARE2_I() {
return FSHARE2_I;
}

public Double getFSHARE2_IFLAG() {
return FSHARE2_IFLAG;
}

public Double getFSHARE3() {
return FSHARE3;
}

public Double getFSHARE3_I() {
return FSHARE3_I;
}

public Double getFSHARE3_IFLAG() {
return FSHARE3_IFLAG;
}

public Double getFSHOSV() {
return FSHOSV;
}

public Double getFSHOSVB() {
return FSHOSVB;
}

public Double getFSHOSV_I() {
return FSHOSV_I;
}

public Double getFSHOSV_IFLAG() {
return FSHOSV_IFLAG;
}

public Double getFSHUKV() {
return FSHUKV;
}

public Double getFSHUKVB() {
return FSHUKVB;
}

public Double getFSHUKV_I() {
return FSHUKV_I;
}

public Double getFSHUKV_IFLAG() {
return FSHUKV_IFLAG;
}

public Double getFSINVAL() {
return FSINVAL;
}

public Double getFSINVAL_I() {
return FSINVAL_I;
}

public Double getFSINVAL_IFLAG() {
return FSINVAL_IFLAG;
}

public Double getFSINVLB() {
return FSINVLB;
}

public Double getFSNUMIN() {
return FSNUMIN;
}

public Double getFSNUMIN_I() {
return FSNUMIN_I;
}

public Double getFSNUMIN_IFLAG() {
return FSNUMIN_IFLAG;
}

public Double getFSNUMSH() {
return FSNUMSH;
}

public Double getFSNUMSH_I() {
return FSNUMSH_I;
}

public Double getFSNUMSH_IFLAG() {
return FSNUMSH_IFLAG;
}

public Double getFSOSHAV() {
return FSOSHAV;
}

public Double getFSOSVLB() {
return FSOSVLB;
}

public Double getFSSHVAL() {
return FSSHVAL;
}

public Double getFSSHVAL_I() {
return FSSHVAL_I;
}

public Double getFSSHVAL_IFLAG() {
return FSSHVAL_IFLAG;
}

public Double getFSSHVLB() {
return FSSHVLB;
}

public Double getFSSUPPR() {
return FSSUPPR;
}

public Double getFSTYPIN1() {
return FSTYPIN1;
}

public Double getFSTYPIN2() {
return FSTYPIN2;
}

public Double getFSTYPIN3() {
return FSTYPIN3;
}

public Double getFSTYPSH1() {
return FSTYPSH1;
}

public Double getFSTYPSH2() {
return FSTYPSH2;
}

public Double getFSTYPSH3() {
return FSTYPSH3;
}

public Double getFSTYPSH4() {
return FSTYPSH4;
}

public Double getFTED() {
return FTED;
}

public Double getFTED19() {
return FTED19;
}

public Double getFTPTWK() {
return FTPTWK;
}

public Double getGOR() {
return GOR;
}

public Double getGRSESM() {
return GRSESM;
}

public Double getGRSESP() {
return GRSESP;
}

public Double getHASCHD() {
return HASCHD;
}

public Double getHASDEP() {
return HASDEP;
}

public Double getHASNDEP() {
return HASNDEP;
}

public Double getHOUSGDST() {
return HOUSGDST;
}

public Double getHPLFT2() {
return HPLFT2;
}

public Double getHPOS1() {
return HPOS1;
}

public Double getHPOS2() {
return HPOS2;
}

public Double getIGDS1() {
return IGDS1;
}

public Double getIGDS10() {
return IGDS10;
}

public Double getIGDS11() {
return IGDS11;
}

public Double getIGDS15() {
return IGDS15;
}

public Double getIGDS2() {
return IGDS2;
}

public Double getIGDS3() {
return IGDS3;
}

public Double getIGDS4() {
return IGDS4;
}

public Double getIGDS5() {
return IGDS5;
}

public Double getIGDS8() {
return IGDS8;
}

public Double getIGDS9() {
return IGDS9;
}

public Double getIGFVALB() {
return IGFVALB;
}

public Double getIHRCNUM() {
return IHRCNUM;
}

public Double getIHRECNT() {
return IHRECNT;
}

public Double getIHSE1() {
return IHSE1;
}

public Double getIHSE2() {
return IHSE2;
}

public Double getIHSE7() {
return IHSE7;
}

public Double getILACB() {
return ILACB;
}

public Double getILGIFT() {
return ILGIFT;
}

public Double getILIFB() {
return ILIFB;
}

public Double getILINB() {
return ILINB;
}

public Double getILLLIM() {
return ILLLIM;
}

public Double getILOTB() {
return ILOTB;
}

public Double getILRDB() {
return ILRDB;
}

public Double getILUMP() {
return ILUMP;
}

public Double getILUMTY1() {
return ILUMTY1;
}

public Double getILUMTY2() {
return ILUMTY2;
}

public Double getILUMTY3() {
return ILUMTY3;
}

public Double getILUPB() {
return ILUPB;
}

public Double getILUPP() {
return ILUPP;
}

public Double getILWNB() {
return ILWNB;
}

public Double getIOUT1() {
return IOUT1;
}

public Double getISDEP() {
return ISDEP;
}

public Double getISNDEP() {
return ISNDEP;
}

public Double getIVALB2() {
return IVALB2;
}

public Double getIVALB3() {
return IVALB3;
}

public Double getIWAT1() {
return IWAT1;
}

public Double getIWAT13() {
return IWAT13;
}

public Double getIWAT2() {
return IWAT2;
}

public Double getIWAT3() {
return IWAT3;
}

public Double getIWAT4() {
return IWAT4;
}

public Double getIWAT5() {
return IWAT5;
}

public Double getIWAT7() {
return IWAT7;
}

public Double getIWHO2() {
return IWHO2;
}

public Double getIWHO3() {
return IWHO3;
}

public Double getJBAWAY() {
return JBAWAY;
}

public Double getJOBNO() {
return JOBNO;
}

public Double getLKTIME() {
return LKTIME;
}

public Double getLNLFT2() {
return LNLFT2;
}

public Double getLNLFT3() {
return LNLFT3;
}

public Double getLNLFT4() {
return LNLFT4;
}

public Double getLNLFT5() {
return LNLFT5;
}

public Double getLNOS1() {
return LNOS1;
}

public Double getLNOS2() {
return LNOS2;
}

public Double getLNOS3() {
return LNOS3;
}

public Double getLNOS4() {
return LNOS4;
}

public Double getLNOS5() {
return LNOS5;
}

public Double getLOOKED() {
return LOOKED;
}

public Double getLSILL() {
return LSILL;
}

public Double getMARBEF() {
return MARBEF;
}

public Double getMOLFT2() {
return MOLFT2;
}

public Double getMONTH() {
return MONTH;
}

public Double getMOOS1() {
return MOOS1;
}

public Double getMOOS2() {
return MOOS2;
}

public Double getNSSEC3() {
return NSSEC3;
}

public Double getNSSEC5() {
return NSSEC5;
}

public Double getNSSEC8() {
return NSSEC8;
}

public Double getNSSECB() {
return NSSECB;
}

public Double getOCSVR1() {
return OCSVR1;
}

public Double getOCSVR2() {
return OCSVR2;
}

public Double getOCSVR3() {
return OCSVR3;
}

public Double getOCSVR4() {
return OCSVR4;
}

public Double getOCSVR5() {
return OCSVR5;
}

public Double getOCSVR6() {
return OCSVR6;
}

public Double getOCSVR7() {
return OCSVR7;
}

public Double getOCSVR8() {
return OCSVR8;
}

public Double getOINTEND() {
return OINTEND;
}

public Double getOLARGE() {
return OLARGE;
}

public Double getOLEFT() {
return OLEFT;
}

public Double getOLEFTDO() {
return OLEFTDO;
}

public Double getOLONG() {
return OLONG;
}

public Double getOLONGYR() {
return OLONGYR;
}

public Double getONETEN() {
return ONETEN;
}

public Double getOPENS01() {
return OPENS01;
}

public Double getOPENS02() {
return OPENS02;
}

public Double getOPENS03() {
return OPENS03;
}

public Double getOPENS04() {
return OPENS04;
}

public Double getOPENS05() {
return OPENS05;
}

public Double getOPENS06() {
return OPENS06;
}

public Double getOPENS07() {
return OPENS07;
}

public Double getOPENS08() {
return OPENS08;
}

public Double getORETINC() {
return ORETINC;
}

public Double getORISKA() {
return ORISKA;
}

public Double getORISKC() {
return ORISKC;
}

public Double getORUNDO01() {
return ORUNDO01;
}

public Double getORUNDO02() {
return ORUNDO02;
}

public Double getORUNDO03() {
return ORUNDO03;
}

public Double getORUNDO04() {
return ORUNDO04;
}

public Double getORUNDO05() {
return ORUNDO05;
}

public Double getORUNDO06() {
return ORUNDO06;
}

public Double getORUNDO07() {
return ORUNDO07;
}

public Double getORUNDO08() {
return ORUNDO08;
}

public Double getORUNOUT() {
return ORUNOUT;
}

public Double getOSITUAT() {
return OSITUAT;
}

public Double getOSTANDL() {
return OSTANDL;
}

public Double getOTHSRC1() {
return OTHSRC1;
}

public Double getOTHSRC1_I() {
return OTHSRC1_I;
}

public Double getOTHSRC1_IFLAG() {
return OTHSRC1_IFLAG;
}

public Double getOTHSRC2() {
return OTHSRC2;
}

public Double getOTHSRC2_I() {
return OTHSRC2_I;
}

public Double getOTHSRC2_IFLAG() {
return OTHSRC2_IFLAG;
}

public Double getOTHSRC3() {
return OTHSRC3;
}

public Double getOTHSRC3_I() {
return OTHSRC3_I;
}

public Double getOTHSRC3_IFLAG() {
return OTHSRC3_IFLAG;
}

public Double getOTRUST01() {
return OTRUST01;
}

public Double getOTRUST02() {
return OTRUST02;
}

public Double getOTRUST03() {
return OTRUST03;
}

public Double getOTRUST04() {
return OTRUST04;
}

public Double getOTRUST05() {
return OTRUST05;
}

public Double getOTRUST06() {
return OTRUST06;
}

public Double getOTRUST07() {
return OTRUST07;
}

public Double getOTRUST08() {
return OTRUST08;
}

public Double getOTRUST09() {
return OTRUST09;
}

public Double getOTRUST10() {
return OTRUST10;
}

public Double getOTRUST11() {
return OTRUST11;
}

public Double getOTRUST12() {
return OTRUST12;
}

public Double getOTRUST13() {
return OTRUST13;
}

public Double getOTRUST14() {
return OTRUST14;
}

public Double getOUNDER() {
return OUNDER;
}

public Double getOWNBUS() {
return OWNBUS;
}

public Double getPAGERET() {
return PAGERET;
}

public Double getPARTNER() {
return PARTNER;
}

public Double getPARTNO() {
return PARTNO;
}

public Double getPAYBON() {
return PAYBON;
}

public Double getPAYESM() {
return PAYESM;
}

public Double getPAYESP() {
return PAYESP;
}

public Double getPAYINC1() {
return PAYINC1;
}

public Double getPAYINC2() {
return PAYINC2;
}

public Double getPAYINC3() {
return PAYINC3;
}

public Double getPAYINC4() {
return PAYINC4;
}

public Double getPAYINC5() {
return PAYINC5;
}

public Double getPAYINC6() {
return PAYINC6;
}

public Double getPAYPER() {
return PAYPER;
}

public Double getPAYSLP() {
return PAYSLP;
}

public Double getPEARLRS() {
return PEARLRS;
}

public Double getPEMELG() {
return PEMELG;
}

public Double getPEMELG_I() {
return PEMELG_I;
}

public Double getPEMELG_IFLAG() {
return PEMELG_IFLAG;
}

public Double getPEMMEM() {
return PEMMEM;
}

public Double getPEMMEM_I() {
return PEMMEM_I;
}

public Double getPEMMEM_IFLAG() {
return PEMMEM_IFLAG;
}

public Double getPEMOFF() {
return PEMOFF;
}

public Double getPEMOFF_I() {
return PEMOFF_I;
}

public Double getPEMOFF_IFLAG() {
return PEMOFF_IFLAG;
}

public Integer getPERSONW1() {
return PERSONW1;
}

public Double getPERSPROX() {
return PERSPROX;
}

public Double getPEVERC() {
return PEVERC;
}

public Double getPEVERC_I() {
return PEVERC_I;
}

public Double getPEVERC_IFLAG() {
return PEVERC_IFLAG;
}

public Double getPEVERNC() {
return PEVERNC;
}

public Double getPEVERNC_I() {
return PEVERNC_I;
}

public Double getPEVERNC_IFLAG() {
return PEVERNC_IFLAG;
}

public Double getPEXPRET() {
return PEXPRET;
}

public Double getPFNUM() {
return PFNUM;
}

public Double getPFNUM_I() {
return PFNUM_I;
}

public Double getPFNUM_IFLAG() {
return PFNUM_IFLAG;
}

public Double getPFULRET() {
return PFULRET;
}

public Double getPINCINP() {
return PINCINP;
}

public Double getPOCNMSC() {
return POCNMSC;
}

public Double getPOCNMSC_I() {
return POCNMSC_I;
}

public Double getPOCNMSC_IFLAG() {
return POCNMSC_IFLAG;
}

public Double getPPRNMSC() {
return PPRNMSC;
}

public Double getPPRNMSC_I() {
return PPRNMSC_I;
}

public Double getPPRNMSC_IFLAG() {
return PPRNMSC_IFLAG;
}

public Double getPPYSTP10() {
return PPYSTP10;
}

public Double getPRETAIN() {
return PRETAIN;
}

public Double getPRETAIN_I() {
return PRETAIN_I;
}

public Double getPRETAIN_IFLAG() {
return PRETAIN_IFLAG;
}

public Double getPSCHM_F() {
return PSCHM_F;
}

public Double getPSCHM_F_I() {
return PSCHM_F_I;
}

public Double getPSCHM_F_IFLAG() {
return PSCHM_F_IFLAG;
}

public Double getPSCHM_S() {
return PSCHM_S;
}

public Double getPSCHM_S_I() {
return PSCHM_S_I;
}

public Double getPSCHM_S_IFLAG() {
return PSCHM_S_IFLAG;
}

public Double getPSCHM_T() {
return PSCHM_T;
}

public Double getPSCHM_T_I() {
return PSCHM_T_I;
}

public Double getPSCHM_T_IFLAG() {
return PSCHM_T_IFLAG;
}

public Double getPSIT() {
return PSIT;
}

public Double getPSITF() {
return PSITF;
}

public Double getPWEXPA() {
return PWEXPA;
}

public Double getPWEXPA_I() {
return PWEXPA_I;
}

public Double getPWEXPA_IFLAG() {
return PWEXPA_IFLAG;
}

public Double getPWEXPH() {
return PWEXPH;
}

public Double getPWEXPH_I() {
return PWEXPH_I;
}

public Double getPWEXPH_IFLAG() {
return PWEXPH_IFLAG;
}

public Double getPWID() {
return PWID;
}

public Double getPWIDFUT() {
return PWIDFUT;
}

public Double getPWIDFUT_I() {
return PWIDFUT_I;
}

public Double getPWIDFUT_IFLAG() {
return PWIDFUT_IFLAG;
}

public Double getP_FLAG1() {
return P_FLAG1;
}

public Double getP_FLAG3() {
return P_FLAG3;
}

public Double getP_FLAG4() {
return P_FLAG4;
}

public Double getQHEALTH1() {
return QHEALTH1;
}

public Double getQUALCHK() {
return QUALCHK;
}

public Double getREGLRPY1() {
return REGLRPY1;
}

public Double getREGLRPY2() {
return REGLRPY2;
}

public Double getRELBUS() {
return RELBUS;
}

public Double getRENTPAY() {
return RENTPAY;
}

public Double getSCHEMEET() {
return SCHEMEET;
}

public Double getSEAMK() {
return SEAMK;
}

public Double getSEESM() {
return SEESM;
}

public Double getSEESW() {
return SEESW;
}

public Double getSELECTAD() {
return SELECTAD;
}

public Double getSEMN() {
return SEMN;
}

public Double getSEMPSTY() {
return SEMPSTY;
}

public Double getSEPEL() {
return SEPEL;
}

public Double getSEPER() {
return SEPER;
}

public Double getSEX() {
return SEX;
}

public Double getSINGPAR() {
return SINGPAR;
}

public Double getSJEMP1() {
return SJEMP1;
}

public Double getSJEMP2() {
return SJEMP2;
}

public Double getSJOB2() {
return SJOB2;
}

public Double getSOLO() {
return SOLO;
}

public Double getSTARTJ() {
return STARTJ;
}

public Double getSTAT() {
return STAT;
}

public Double getSTAT_I() {
return STAT_I;
}

public Double getSVISE() {
return SVISE;
}

public Double getTBENEF() {
return TBENEF;
}

public Double getTBENNUM() {
return TBENNUM;
}

public Double getTEA() {
return TEA;
}

public Double getTINTRO() {
return TINTRO;
}

public Double getTOTPEN() {
return TOTPEN;
}

public Double getTSETT() {
return TSETT;
}

public Double getTYPE() {
return TYPE;
}

public Double getUNMTYP() {
return UNMTYP;
}

public Double getUNUMBD() {
return UNUMBD;
}

public Double getUNUMBD_I() {
return UNUMBD_I;
}

public Double getUNUMBD_IFLAG() {
return UNUMBD_IFLAG;
}

public Double getUNUMHS() {
return UNUMHS;
}

public Double getUNUMHS_I() {
return UNUMHS_I;
}

public Double getUNUMHS_IFLAG() {
return UNUMHS_IFLAG;
}

public Double getUNUMLA() {
return UNUMLA;
}

public Double getUNUMLA_I() {
return UNUMLA_I;
}

public Double getUNUMLA_IFLAG() {
return UNUMLA_IFLAG;
}

public Double getUNUMOV() {
return UNUMOV;
}

public Double getUNUMOV_I() {
return UNUMOV_I;
}

public Double getUNUMOV_IFLAG() {
return UNUMOV_IFLAG;
}

public Double getUNUMRE() {
return UNUMRE;
}

public Double getUNUMRE_I() {
return UNUMRE_I;
}

public Double getUNUMRE_IFLAG() {
return UNUMRE_IFLAG;
}

public Double getUPROP1() {
return UPROP1;
}

public Double getUPROP1_I() {
return UPROP1_I;
}

public Double getUPROP2() {
return UPROP2;
}

public Double getUPROP2_I() {
return UPROP2_I;
}

public Double getUPROP3() {
return UPROP3;
}

public Double getUPROP3_I() {
return UPROP3_I;
}

public Double getUPROP4() {
return UPROP4;
}

public Double getUPROP4_I() {
return UPROP4_I;
}

public Double getUPRSH1() {
return UPRSH1;
}

public Double getUPRSH2() {
return UPRSH2;
}

public Double getUPRSH3() {
return UPRSH3;
}

public Double getUPRSH4() {
return UPRSH4;
}

public Double getUPRSH5() {
return UPRSH5;
}

public Double getWORKAGE() {
return WORKAGE;
}

public Double getWRKING() {
return WRKING;
}

public Double getXINSOL() {
return XINSOL;
}

public Double getXINTYP() {
return XINTYP;
}

public Double getYEAR() {
return YEAR;
}

public Double getYINACT() {
return YINACT;
}

}
