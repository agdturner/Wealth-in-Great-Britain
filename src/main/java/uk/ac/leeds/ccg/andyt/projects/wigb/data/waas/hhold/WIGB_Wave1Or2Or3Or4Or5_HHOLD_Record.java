/**
 * Source code generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas.hhold;
import java.io.Serializable;
public abstract class WIGB_Wave1Or2Or3Or4Or5_HHOLD_Record {
protected String[] s;
protected Double ACCOM;

protected Double ACCOTH;

protected Double ALLENDW;

protected Double ALLGD;

protected int CASEW1;

protected Double DVEQRELVAL;

protected Double DVGCOLLV;

protected Double DVHORP;

protected Double DVHSIZE;

protected Double DVHVALUE;

protected Double DVPRIRNT;

protected Double DVPROPERTY;

protected Double DVTOTOTHVEHVAL;

protected Double DVTOTPERNPVAL;

protected Double DVTOTVEHVAL;

protected Double EINTRAT;

protected Double EINTRAT_I;

protected Double EINTRAT_IFLAG;

protected Double EOTHREG;

protected Double EOTHRVA;

protected Double EOTHRVB;

protected Double EPRPER;

protected Double EPRVAL;

protected Double EPRVPAY;

protected Double EQVAL;

protected Double EQVALB;

protected Double EQVAL_I;

protected Double EQVAL_IFLAG;

protected Double EQYES;

protected Double ERECTAX;

protected Double ERVPRP;

protected Double ERVPRP_I;

protected Double ERVPRP_IFLAG;

protected Double ERVRENT;

protected Double ERVSUM;

protected Double ERVSUMB;

protected Double ERVTAX;

protected Double FLTTYP;

protected Double FURN;

protected Double GCOLLEC;

protected Double GCOLLEC_I;

protected Double GCOLLEC_IFLAG;

protected Double GCOLLV;

protected Double GCOLLVB;

protected Double GCOLLV_I;

protected Double GCOLLV_IFLAG;

protected Double GCONTVB;

protected Double GCONTVB_I;

protected Double GCONTVB_IFLAG;

protected Double GOR;

protected Double HAGEB;

protected Double HAGEYR;

protected Double HBEDRM;

protected Double HBFROM;

protected Double HBUYSE;

protected Double HBUYYR;

protected Double HFINWNT_SUM;

protected Double HFINW_SUM;

protected Double HHOLDTYPE;

protected Double HHOSCH;

protected Double HHOWN;

protected Double HMORTG;

protected Double HOUSGDST_SUM;

protected Double HOUT;

protected Double HPHYSW;

protected Double HPRICE;

protected Double HPRICEB;

protected Double HPROPW;

protected Double HRPDVAGE9;

protected Double HRPDVILO3A;

protected Double HRPDVMRDF;

protected Double HRPEDATTN1;

protected Double HRPEDATTN2;

protected Double HRPEDATTN3;

protected Double HRPEDLEVEL;

protected Double HRPNSSEC3;

protected Double HRPSEX;

protected Double HRTBEV;

protected Double HSETYPE;

protected Double HSHARE;

protected Double HSHAREP;

protected Double HSHAREP_I;

protected Double HSHAREP_IFLAG;

protected Double HSHARE_I;

protected Double HSHARE_IFLAG;

protected Double HVALB;

protected Double HVALUE;

protected Double HVALUE_I;

protected Double HVALUE_IFLAG;

protected Double LLORD;

protected Double MALL2;

protected Double MALL2_I;

protected Double MALL2_IFLAG;

protected Double MALL3;

protected Double MALL3_I;

protected Double MALL3_IFLAG;

protected Double MALLTY2;

protected Double MALLTY2_I;

protected Double MALLTY2_IFLAG;

protected Double MALLTY3;

protected Double MARRS2;

protected Double MARRS3;

protected Double MENDNUM2;

protected Double MENDNUM2_I;

protected Double MENDNUM2_IFLAG;

protected Double MENDNUM3;

protected Double MENDV11;

protected Double MENDV2;

protected Double MENDV2_I;

protected Double MENDV2_IFLAG;

protected Double MENDV3;

protected Double MENDV3_I;

protected Double MENDV3_IFLAG;

protected Double MENDV4;

protected Double MENDV4_I;

protected Double MENDV4_IFLAG;

protected Double MENDV5;

protected Double MENDV6;

protected Double MENDV6_I;

protected Double MENDV6_IFLAG;

protected Double MENDV7;

protected Double MENDV8;

protected Double MENDVB11;

protected Double MENDVB2;

protected Double MENDVB3;

protected Double MENDVB4;

protected Double MENDVB6;

protected Double MENDVB7;

protected Double MENDW2_I;

protected Double MENDW2_IFLAG;

protected Double MENDW3_I;

protected Double MENDW3_IFLAG;

protected Double MENDX2;

protected Double MENDX3;

protected Double MENDY11;

protected Double MENDY2;

protected Double MENDY3;

protected Double MENDY4;

protected Double MENDY6;

protected Double MENDY7;

protected Double MHOWPY2;

protected Double MHOWPY3;

protected Double MINC1;

protected Double MINC11;

protected Double MINC2;

protected Double MINC3;

protected Double MINC4;

protected Double MINC5;

protected Double MINC6;

protected Double MJNAME01;

protected Double MJNAME02;

protected Double MJNAME03;

protected Double MJNAME04;

protected Double MJNAME18;

protected Double MJNAME19;

protected Double MJNAME20;

protected Double MJNAME35;

protected Double MJNAME36;

protected Double MNAME2;

protected Double MNAME3;

protected Double MNEG2;

protected Double MNEG2_I;

protected Double MNEG2_IFLAG;

protected Double MNEG3;

protected Double MNEGB2;

protected Double MNEGB3;

protected Double MNUMB;

protected Double MONAME2;

protected Double MONAME3;

protected Double MONTH;

protected Double MPAYB2;

protected Double MPAYB3;

protected Double MPAYM2;

protected Double MPAYM3;

protected Double MPP2;

protected Double MPP3;

protected Double MREAS01;

protected Double MREAS02;

protected Double MREAS03;

protected Double MREAS04;

protected Double MREAS05;

protected Double MREAS06;

protected Double MREAS07;

protected Double MREAS12;

protected Double MREAS13;

protected Double MREAS23;

protected Double MTYPE2;

protected Double MTYPE2_I;

protected Double MTYPE2_IFLAG;

protected Double MTYPE3;

protected Double MTYPE3_I;

protected Double MTYPE3_IFLAG;

protected Double MVAL2;

protected Double MVAL2_I;

protected Double MVAL2_IFLAG;

protected Double MVAL3;

protected Double MVAL3_I;

protected Double MVAL3_IFLAG;

protected Double MVALB2;

protected Double MVALB3;

protected Double MYLFT2;

protected Double MYLFT3;

protected Double NUMADULT;

protected Double NUMCH18;

protected Double NUMCHILD;

protected Double NUMCIVPTR;

protected Double NUMCPART;

protected Double NUMHHLDR;

protected Double NUMMPART;

protected Double OFINAL;

protected Double TEN1;

protected Double TEN1_I;

protected Double TEN1_IFLAG;

protected Double TIED;

protected Double TOTMNEG;

protected Double TOTMORT;

protected Double TOTMVAL;

protected Double TOTWLTH;

protected Double VCARN;

protected Double VCARN_I;

protected Double VCARN_IFLAG;

protected Double VOTYP1;

protected Double VOTYP1_I;

protected Double VOTYP2;

protected Double VOTYP2_I;

protected Double VOTYP3;

protected Double VOTYP3_I;

protected Double VOTYP4;

protected Double VOTYP4_I;

protected Double VOTYP5_I;

protected Double VOVAL;

protected Double VOVAL_I;

protected Double VOVAL_IFLAG;

protected Double VOVLB;

protected Double VPERS;

protected Double VPERV;

protected Double VPERV_I;

protected Double VPERV_IFLAG;

protected Double VTYPE2;

protected Double VTYPE2_I;

protected Double VTYPE_IFLAG;

protected Double YEAR;

protected final void initACCOM(String s) {
if (!s.trim().isEmpty()) {
ACCOM = new Double(s);
}
}

protected final void initACCOTH(String s) {
if (!s.trim().isEmpty()) {
ACCOTH = new Double(s);
}
}

protected final void initALLENDW(String s) {
if (!s.trim().isEmpty()) {
ALLENDW = new Double(s);
}
}

protected final void initALLGD(String s) {
if (!s.trim().isEmpty()) {
ALLGD = new Double(s);
}
}

protected final void initCASEW1(String s) {
if (!s.trim().isEmpty()) {
CASEW1 = new Integer(s);
}
}

protected final void initDVEQRELVAL(String s) {
if (!s.trim().isEmpty()) {
DVEQRELVAL = new Double(s);
}
}

protected final void initDVGCOLLV(String s) {
if (!s.trim().isEmpty()) {
DVGCOLLV = new Double(s);
}
}

protected final void initDVHORP(String s) {
if (!s.trim().isEmpty()) {
DVHORP = new Double(s);
}
}

protected final void initDVHSIZE(String s) {
if (!s.trim().isEmpty()) {
DVHSIZE = new Double(s);
}
}

protected final void initDVHVALUE(String s) {
if (!s.trim().isEmpty()) {
DVHVALUE = new Double(s);
}
}

protected final void initDVPRIRNT(String s) {
if (!s.trim().isEmpty()) {
DVPRIRNT = new Double(s);
}
}

protected final void initDVPROPERTY(String s) {
if (!s.trim().isEmpty()) {
DVPROPERTY = new Double(s);
}
}

protected final void initDVTOTOTHVEHVAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTOTHVEHVAL = new Double(s);
}
}

protected final void initDVTOTPERNPVAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTPERNPVAL = new Double(s);
}
}

protected final void initDVTOTVEHVAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTVEHVAL = new Double(s);
}
}

protected final void initEINTRAT(String s) {
if (!s.trim().isEmpty()) {
EINTRAT = new Double(s);
}
}

protected final void initEINTRAT_I(String s) {
if (!s.trim().isEmpty()) {
EINTRAT_I = new Double(s);
}
}

protected final void initEINTRAT_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EINTRAT_IFLAG = new Double(s);
}
}

protected final void initEOTHREG(String s) {
if (!s.trim().isEmpty()) {
EOTHREG = new Double(s);
}
}

protected final void initEOTHRVA(String s) {
if (!s.trim().isEmpty()) {
EOTHRVA = new Double(s);
}
}

protected final void initEOTHRVB(String s) {
if (!s.trim().isEmpty()) {
EOTHRVB = new Double(s);
}
}

protected final void initEPRPER(String s) {
if (!s.trim().isEmpty()) {
EPRPER = new Double(s);
}
}

protected final void initEPRVAL(String s) {
if (!s.trim().isEmpty()) {
EPRVAL = new Double(s);
}
}

protected final void initEPRVPAY(String s) {
if (!s.trim().isEmpty()) {
EPRVPAY = new Double(s);
}
}

protected final void initEQVAL(String s) {
if (!s.trim().isEmpty()) {
EQVAL = new Double(s);
}
}

protected final void initEQVALB(String s) {
if (!s.trim().isEmpty()) {
EQVALB = new Double(s);
}
}

protected final void initEQVAL_I(String s) {
if (!s.trim().isEmpty()) {
EQVAL_I = new Double(s);
}
}

protected final void initEQVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQVAL_IFLAG = new Double(s);
}
}

protected final void initEQYES(String s) {
if (!s.trim().isEmpty()) {
EQYES = new Double(s);
}
}

protected final void initERECTAX(String s) {
if (!s.trim().isEmpty()) {
ERECTAX = new Double(s);
}
}

protected final void initERVPRP(String s) {
if (!s.trim().isEmpty()) {
ERVPRP = new Double(s);
}
}

protected final void initERVPRP_I(String s) {
if (!s.trim().isEmpty()) {
ERVPRP_I = new Double(s);
}
}

protected final void initERVPRP_IFLAG(String s) {
if (!s.trim().isEmpty()) {
ERVPRP_IFLAG = new Double(s);
}
}

protected final void initERVRENT(String s) {
if (!s.trim().isEmpty()) {
ERVRENT = new Double(s);
}
}

protected final void initERVSUM(String s) {
if (!s.trim().isEmpty()) {
ERVSUM = new Double(s);
}
}

protected final void initERVSUMB(String s) {
if (!s.trim().isEmpty()) {
ERVSUMB = new Double(s);
}
}

protected final void initERVTAX(String s) {
if (!s.trim().isEmpty()) {
ERVTAX = new Double(s);
}
}

protected final void initFLTTYP(String s) {
if (!s.trim().isEmpty()) {
FLTTYP = new Double(s);
}
}

protected final void initFURN(String s) {
if (!s.trim().isEmpty()) {
FURN = new Double(s);
}
}

protected final void initGCOLLEC(String s) {
if (!s.trim().isEmpty()) {
GCOLLEC = new Double(s);
}
}

protected final void initGCOLLEC_I(String s) {
if (!s.trim().isEmpty()) {
GCOLLEC_I = new Double(s);
}
}

protected final void initGCOLLEC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
GCOLLEC_IFLAG = new Double(s);
}
}

protected final void initGCOLLV(String s) {
if (!s.trim().isEmpty()) {
GCOLLV = new Double(s);
}
}

protected final void initGCOLLVB(String s) {
if (!s.trim().isEmpty()) {
GCOLLVB = new Double(s);
}
}

protected final void initGCOLLV_I(String s) {
if (!s.trim().isEmpty()) {
GCOLLV_I = new Double(s);
}
}

protected final void initGCOLLV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
GCOLLV_IFLAG = new Double(s);
}
}

protected final void initGCONTVB(String s) {
if (!s.trim().isEmpty()) {
GCONTVB = new Double(s);
}
}

protected final void initGCONTVB_I(String s) {
if (!s.trim().isEmpty()) {
GCONTVB_I = new Double(s);
}
}

protected final void initGCONTVB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
GCONTVB_IFLAG = new Double(s);
}
}

protected final void initGOR(String s) {
if (!s.trim().isEmpty()) {
GOR = new Double(s);
}
}

protected final void initHAGEB(String s) {
if (!s.trim().isEmpty()) {
HAGEB = new Double(s);
}
}

protected final void initHAGEYR(String s) {
if (!s.trim().isEmpty()) {
HAGEYR = new Double(s);
}
}

protected final void initHBEDRM(String s) {
if (!s.trim().isEmpty()) {
HBEDRM = new Double(s);
}
}

protected final void initHBFROM(String s) {
if (!s.trim().isEmpty()) {
HBFROM = new Double(s);
}
}

protected final void initHBUYSE(String s) {
if (!s.trim().isEmpty()) {
HBUYSE = new Double(s);
}
}

protected final void initHBUYYR(String s) {
if (!s.trim().isEmpty()) {
HBUYYR = new Double(s);
}
}

protected final void initHFINWNT_SUM(String s) {
if (!s.trim().isEmpty()) {
HFINWNT_SUM = new Double(s);
}
}

protected final void initHFINW_SUM(String s) {
if (!s.trim().isEmpty()) {
HFINW_SUM = new Double(s);
}
}

protected final void initHHOLDTYPE(String s) {
if (!s.trim().isEmpty()) {
HHOLDTYPE = new Double(s);
}
}

protected final void initHHOSCH(String s) {
if (!s.trim().isEmpty()) {
HHOSCH = new Double(s);
}
}

protected final void initHHOWN(String s) {
if (!s.trim().isEmpty()) {
HHOWN = new Double(s);
}
}

protected final void initHMORTG(String s) {
if (!s.trim().isEmpty()) {
HMORTG = new Double(s);
}
}

protected final void initHOUSGDST_SUM(String s) {
if (!s.trim().isEmpty()) {
HOUSGDST_SUM = new Double(s);
}
}

protected final void initHOUT(String s) {
if (!s.trim().isEmpty()) {
HOUT = new Double(s);
}
}

protected final void initHPHYSW(String s) {
if (!s.trim().isEmpty()) {
HPHYSW = new Double(s);
}
}

protected final void initHPRICE(String s) {
if (!s.trim().isEmpty()) {
HPRICE = new Double(s);
}
}

protected final void initHPRICEB(String s) {
if (!s.trim().isEmpty()) {
HPRICEB = new Double(s);
}
}

protected final void initHPROPW(String s) {
if (!s.trim().isEmpty()) {
HPROPW = new Double(s);
}
}

protected final void initHRPDVAGE9(String s) {
if (!s.trim().isEmpty()) {
HRPDVAGE9 = new Double(s);
}
}

protected final void initHRPDVILO3A(String s) {
if (!s.trim().isEmpty()) {
HRPDVILO3A = new Double(s);
}
}

protected final void initHRPDVMRDF(String s) {
if (!s.trim().isEmpty()) {
HRPDVMRDF = new Double(s);
}
}

protected final void initHRPEDATTN1(String s) {
if (!s.trim().isEmpty()) {
HRPEDATTN1 = new Double(s);
}
}

protected final void initHRPEDATTN2(String s) {
if (!s.trim().isEmpty()) {
HRPEDATTN2 = new Double(s);
}
}

protected final void initHRPEDATTN3(String s) {
if (!s.trim().isEmpty()) {
HRPEDATTN3 = new Double(s);
}
}

protected final void initHRPEDLEVEL(String s) {
if (!s.trim().isEmpty()) {
HRPEDLEVEL = new Double(s);
}
}

protected final void initHRPNSSEC3(String s) {
if (!s.trim().isEmpty()) {
HRPNSSEC3 = new Double(s);
}
}

protected final void initHRPSEX(String s) {
if (!s.trim().isEmpty()) {
HRPSEX = new Double(s);
}
}

protected final void initHRTBEV(String s) {
if (!s.trim().isEmpty()) {
HRTBEV = new Double(s);
}
}

protected final void initHSETYPE(String s) {
if (!s.trim().isEmpty()) {
HSETYPE = new Double(s);
}
}

protected final void initHSHARE(String s) {
if (!s.trim().isEmpty()) {
HSHARE = new Double(s);
}
}

protected final void initHSHAREP(String s) {
if (!s.trim().isEmpty()) {
HSHAREP = new Double(s);
}
}

protected final void initHSHAREP_I(String s) {
if (!s.trim().isEmpty()) {
HSHAREP_I = new Double(s);
}
}

protected final void initHSHAREP_IFLAG(String s) {
if (!s.trim().isEmpty()) {
HSHAREP_IFLAG = new Double(s);
}
}

protected final void initHSHARE_I(String s) {
if (!s.trim().isEmpty()) {
HSHARE_I = new Double(s);
}
}

protected final void initHSHARE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
HSHARE_IFLAG = new Double(s);
}
}

protected final void initHVALB(String s) {
if (!s.trim().isEmpty()) {
HVALB = new Double(s);
}
}

protected final void initHVALUE(String s) {
if (!s.trim().isEmpty()) {
HVALUE = new Double(s);
}
}

protected final void initHVALUE_I(String s) {
if (!s.trim().isEmpty()) {
HVALUE_I = new Double(s);
}
}

protected final void initHVALUE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
HVALUE_IFLAG = new Double(s);
}
}

protected final void initLLORD(String s) {
if (!s.trim().isEmpty()) {
LLORD = new Double(s);
}
}

protected final void initMALL2(String s) {
if (!s.trim().isEmpty()) {
MALL2 = new Double(s);
}
}

protected final void initMALL2_I(String s) {
if (!s.trim().isEmpty()) {
MALL2_I = new Double(s);
}
}

protected final void initMALL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MALL2_IFLAG = new Double(s);
}
}

protected final void initMALL3(String s) {
if (!s.trim().isEmpty()) {
MALL3 = new Double(s);
}
}

protected final void initMALL3_I(String s) {
if (!s.trim().isEmpty()) {
MALL3_I = new Double(s);
}
}

protected final void initMALL3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MALL3_IFLAG = new Double(s);
}
}

protected final void initMALLTY2(String s) {
if (!s.trim().isEmpty()) {
MALLTY2 = new Double(s);
}
}

protected final void initMALLTY2_I(String s) {
if (!s.trim().isEmpty()) {
MALLTY2_I = new Double(s);
}
}

protected final void initMALLTY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MALLTY2_IFLAG = new Double(s);
}
}

protected final void initMALLTY3(String s) {
if (!s.trim().isEmpty()) {
MALLTY3 = new Double(s);
}
}

protected final void initMARRS2(String s) {
if (!s.trim().isEmpty()) {
MARRS2 = new Double(s);
}
}

protected final void initMARRS3(String s) {
if (!s.trim().isEmpty()) {
MARRS3 = new Double(s);
}
}

protected final void initMENDNUM2(String s) {
if (!s.trim().isEmpty()) {
MENDNUM2 = new Double(s);
}
}

protected final void initMENDNUM2_I(String s) {
if (!s.trim().isEmpty()) {
MENDNUM2_I = new Double(s);
}
}

protected final void initMENDNUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDNUM2_IFLAG = new Double(s);
}
}

protected final void initMENDNUM3(String s) {
if (!s.trim().isEmpty()) {
MENDNUM3 = new Double(s);
}
}

protected final void initMENDV11(String s) {
if (!s.trim().isEmpty()) {
MENDV11 = new Double(s);
}
}

protected final void initMENDV2(String s) {
if (!s.trim().isEmpty()) {
MENDV2 = new Double(s);
}
}

protected final void initMENDV2_I(String s) {
if (!s.trim().isEmpty()) {
MENDV2_I = new Double(s);
}
}

protected final void initMENDV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV2_IFLAG = new Double(s);
}
}

protected final void initMENDV3(String s) {
if (!s.trim().isEmpty()) {
MENDV3 = new Double(s);
}
}

protected final void initMENDV3_I(String s) {
if (!s.trim().isEmpty()) {
MENDV3_I = new Double(s);
}
}

protected final void initMENDV3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV3_IFLAG = new Double(s);
}
}

protected final void initMENDV4(String s) {
if (!s.trim().isEmpty()) {
MENDV4 = new Double(s);
}
}

protected final void initMENDV4_I(String s) {
if (!s.trim().isEmpty()) {
MENDV4_I = new Double(s);
}
}

protected final void initMENDV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV4_IFLAG = new Double(s);
}
}

protected final void initMENDV5(String s) {
if (!s.trim().isEmpty()) {
MENDV5 = new Double(s);
}
}

protected final void initMENDV6(String s) {
if (!s.trim().isEmpty()) {
MENDV6 = new Double(s);
}
}

protected final void initMENDV6_I(String s) {
if (!s.trim().isEmpty()) {
MENDV6_I = new Double(s);
}
}

protected final void initMENDV6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV6_IFLAG = new Double(s);
}
}

protected final void initMENDV7(String s) {
if (!s.trim().isEmpty()) {
MENDV7 = new Double(s);
}
}

protected final void initMENDV8(String s) {
if (!s.trim().isEmpty()) {
MENDV8 = new Double(s);
}
}

protected final void initMENDVB11(String s) {
if (!s.trim().isEmpty()) {
MENDVB11 = new Double(s);
}
}

protected final void initMENDVB2(String s) {
if (!s.trim().isEmpty()) {
MENDVB2 = new Double(s);
}
}

protected final void initMENDVB3(String s) {
if (!s.trim().isEmpty()) {
MENDVB3 = new Double(s);
}
}

protected final void initMENDVB4(String s) {
if (!s.trim().isEmpty()) {
MENDVB4 = new Double(s);
}
}

protected final void initMENDVB6(String s) {
if (!s.trim().isEmpty()) {
MENDVB6 = new Double(s);
}
}

protected final void initMENDVB7(String s) {
if (!s.trim().isEmpty()) {
MENDVB7 = new Double(s);
}
}

protected final void initMENDW2_I(String s) {
if (!s.trim().isEmpty()) {
MENDW2_I = new Double(s);
}
}

protected final void initMENDW2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDW2_IFLAG = new Double(s);
}
}

protected final void initMENDW3_I(String s) {
if (!s.trim().isEmpty()) {
MENDW3_I = new Double(s);
}
}

protected final void initMENDW3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDW3_IFLAG = new Double(s);
}
}

protected final void initMENDX2(String s) {
if (!s.trim().isEmpty()) {
MENDX2 = new Double(s);
}
}

protected final void initMENDX3(String s) {
if (!s.trim().isEmpty()) {
MENDX3 = new Double(s);
}
}

protected final void initMENDY11(String s) {
if (!s.trim().isEmpty()) {
MENDY11 = new Double(s);
}
}

protected final void initMENDY2(String s) {
if (!s.trim().isEmpty()) {
MENDY2 = new Double(s);
}
}

protected final void initMENDY3(String s) {
if (!s.trim().isEmpty()) {
MENDY3 = new Double(s);
}
}

protected final void initMENDY4(String s) {
if (!s.trim().isEmpty()) {
MENDY4 = new Double(s);
}
}

protected final void initMENDY6(String s) {
if (!s.trim().isEmpty()) {
MENDY6 = new Double(s);
}
}

protected final void initMENDY7(String s) {
if (!s.trim().isEmpty()) {
MENDY7 = new Double(s);
}
}

protected final void initMHOWPY2(String s) {
if (!s.trim().isEmpty()) {
MHOWPY2 = new Double(s);
}
}

protected final void initMHOWPY3(String s) {
if (!s.trim().isEmpty()) {
MHOWPY3 = new Double(s);
}
}

protected final void initMINC1(String s) {
if (!s.trim().isEmpty()) {
MINC1 = new Double(s);
}
}

protected final void initMINC11(String s) {
if (!s.trim().isEmpty()) {
MINC11 = new Double(s);
}
}

protected final void initMINC2(String s) {
if (!s.trim().isEmpty()) {
MINC2 = new Double(s);
}
}

protected final void initMINC3(String s) {
if (!s.trim().isEmpty()) {
MINC3 = new Double(s);
}
}

protected final void initMINC4(String s) {
if (!s.trim().isEmpty()) {
MINC4 = new Double(s);
}
}

protected final void initMINC5(String s) {
if (!s.trim().isEmpty()) {
MINC5 = new Double(s);
}
}

protected final void initMINC6(String s) {
if (!s.trim().isEmpty()) {
MINC6 = new Double(s);
}
}

protected final void initMJNAME01(String s) {
if (!s.trim().isEmpty()) {
MJNAME01 = new Double(s);
}
}

protected final void initMJNAME02(String s) {
if (!s.trim().isEmpty()) {
MJNAME02 = new Double(s);
}
}

protected final void initMJNAME03(String s) {
if (!s.trim().isEmpty()) {
MJNAME03 = new Double(s);
}
}

protected final void initMJNAME04(String s) {
if (!s.trim().isEmpty()) {
MJNAME04 = new Double(s);
}
}

protected final void initMJNAME18(String s) {
if (!s.trim().isEmpty()) {
MJNAME18 = new Double(s);
}
}

protected final void initMJNAME19(String s) {
if (!s.trim().isEmpty()) {
MJNAME19 = new Double(s);
}
}

protected final void initMJNAME20(String s) {
if (!s.trim().isEmpty()) {
MJNAME20 = new Double(s);
}
}

protected final void initMJNAME35(String s) {
if (!s.trim().isEmpty()) {
MJNAME35 = new Double(s);
}
}

protected final void initMJNAME36(String s) {
if (!s.trim().isEmpty()) {
MJNAME36 = new Double(s);
}
}

protected final void initMNAME2(String s) {
if (!s.trim().isEmpty()) {
MNAME2 = new Double(s);
}
}

protected final void initMNAME3(String s) {
if (!s.trim().isEmpty()) {
MNAME3 = new Double(s);
}
}

protected final void initMNEG2(String s) {
if (!s.trim().isEmpty()) {
MNEG2 = new Double(s);
}
}

protected final void initMNEG2_I(String s) {
if (!s.trim().isEmpty()) {
MNEG2_I = new Double(s);
}
}

protected final void initMNEG2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MNEG2_IFLAG = new Double(s);
}
}

protected final void initMNEG3(String s) {
if (!s.trim().isEmpty()) {
MNEG3 = new Double(s);
}
}

protected final void initMNEGB2(String s) {
if (!s.trim().isEmpty()) {
MNEGB2 = new Double(s);
}
}

protected final void initMNEGB3(String s) {
if (!s.trim().isEmpty()) {
MNEGB3 = new Double(s);
}
}

protected final void initMNUMB(String s) {
if (!s.trim().isEmpty()) {
MNUMB = new Double(s);
}
}

protected final void initMONAME2(String s) {
if (!s.trim().isEmpty()) {
MONAME2 = new Double(s);
}
}

protected final void initMONAME3(String s) {
if (!s.trim().isEmpty()) {
MONAME3 = new Double(s);
}
}

protected final void initMONTH(String s) {
if (!s.trim().isEmpty()) {
MONTH = new Double(s);
}
}

protected final void initMPAYB2(String s) {
if (!s.trim().isEmpty()) {
MPAYB2 = new Double(s);
}
}

protected final void initMPAYB3(String s) {
if (!s.trim().isEmpty()) {
MPAYB3 = new Double(s);
}
}

protected final void initMPAYM2(String s) {
if (!s.trim().isEmpty()) {
MPAYM2 = new Double(s);
}
}

protected final void initMPAYM3(String s) {
if (!s.trim().isEmpty()) {
MPAYM3 = new Double(s);
}
}

protected final void initMPP2(String s) {
if (!s.trim().isEmpty()) {
MPP2 = new Double(s);
}
}

protected final void initMPP3(String s) {
if (!s.trim().isEmpty()) {
MPP3 = new Double(s);
}
}

protected final void initMREAS01(String s) {
if (!s.trim().isEmpty()) {
MREAS01 = new Double(s);
}
}

protected final void initMREAS02(String s) {
if (!s.trim().isEmpty()) {
MREAS02 = new Double(s);
}
}

protected final void initMREAS03(String s) {
if (!s.trim().isEmpty()) {
MREAS03 = new Double(s);
}
}

protected final void initMREAS04(String s) {
if (!s.trim().isEmpty()) {
MREAS04 = new Double(s);
}
}

protected final void initMREAS05(String s) {
if (!s.trim().isEmpty()) {
MREAS05 = new Double(s);
}
}

protected final void initMREAS06(String s) {
if (!s.trim().isEmpty()) {
MREAS06 = new Double(s);
}
}

protected final void initMREAS07(String s) {
if (!s.trim().isEmpty()) {
MREAS07 = new Double(s);
}
}

protected final void initMREAS12(String s) {
if (!s.trim().isEmpty()) {
MREAS12 = new Double(s);
}
}

protected final void initMREAS13(String s) {
if (!s.trim().isEmpty()) {
MREAS13 = new Double(s);
}
}

protected final void initMREAS23(String s) {
if (!s.trim().isEmpty()) {
MREAS23 = new Double(s);
}
}

protected final void initMTYPE2(String s) {
if (!s.trim().isEmpty()) {
MTYPE2 = new Double(s);
}
}

protected final void initMTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
MTYPE2_I = new Double(s);
}
}

protected final void initMTYPE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MTYPE2_IFLAG = new Double(s);
}
}

protected final void initMTYPE3(String s) {
if (!s.trim().isEmpty()) {
MTYPE3 = new Double(s);
}
}

protected final void initMTYPE3_I(String s) {
if (!s.trim().isEmpty()) {
MTYPE3_I = new Double(s);
}
}

protected final void initMTYPE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MTYPE3_IFLAG = new Double(s);
}
}

protected final void initMVAL2(String s) {
if (!s.trim().isEmpty()) {
MVAL2 = new Double(s);
}
}

protected final void initMVAL2_I(String s) {
if (!s.trim().isEmpty()) {
MVAL2_I = new Double(s);
}
}

protected final void initMVAL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MVAL2_IFLAG = new Double(s);
}
}

protected final void initMVAL3(String s) {
if (!s.trim().isEmpty()) {
MVAL3 = new Double(s);
}
}

protected final void initMVAL3_I(String s) {
if (!s.trim().isEmpty()) {
MVAL3_I = new Double(s);
}
}

protected final void initMVAL3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MVAL3_IFLAG = new Double(s);
}
}

protected final void initMVALB2(String s) {
if (!s.trim().isEmpty()) {
MVALB2 = new Double(s);
}
}

protected final void initMVALB3(String s) {
if (!s.trim().isEmpty()) {
MVALB3 = new Double(s);
}
}

protected final void initMYLFT2(String s) {
if (!s.trim().isEmpty()) {
MYLFT2 = new Double(s);
}
}

protected final void initMYLFT3(String s) {
if (!s.trim().isEmpty()) {
MYLFT3 = new Double(s);
}
}

protected final void initNUMADULT(String s) {
if (!s.trim().isEmpty()) {
NUMADULT = new Double(s);
}
}

protected final void initNUMCH18(String s) {
if (!s.trim().isEmpty()) {
NUMCH18 = new Double(s);
}
}

protected final void initNUMCHILD(String s) {
if (!s.trim().isEmpty()) {
NUMCHILD = new Double(s);
}
}

protected final void initNUMCIVPTR(String s) {
if (!s.trim().isEmpty()) {
NUMCIVPTR = new Double(s);
}
}

protected final void initNUMCPART(String s) {
if (!s.trim().isEmpty()) {
NUMCPART = new Double(s);
}
}

protected final void initNUMHHLDR(String s) {
if (!s.trim().isEmpty()) {
NUMHHLDR = new Double(s);
}
}

protected final void initNUMMPART(String s) {
if (!s.trim().isEmpty()) {
NUMMPART = new Double(s);
}
}

protected final void initOFINAL(String s) {
if (!s.trim().isEmpty()) {
OFINAL = new Double(s);
}
}

protected final void initTEN1(String s) {
if (!s.trim().isEmpty()) {
TEN1 = new Double(s);
}
}

protected final void initTEN1_I(String s) {
if (!s.trim().isEmpty()) {
TEN1_I = new Double(s);
}
}

protected final void initTEN1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
TEN1_IFLAG = new Double(s);
}
}

protected final void initTIED(String s) {
if (!s.trim().isEmpty()) {
TIED = new Double(s);
}
}

protected final void initTOTMNEG(String s) {
if (!s.trim().isEmpty()) {
TOTMNEG = new Double(s);
}
}

protected final void initTOTMORT(String s) {
if (!s.trim().isEmpty()) {
TOTMORT = new Double(s);
}
}

protected final void initTOTMVAL(String s) {
if (!s.trim().isEmpty()) {
TOTMVAL = new Double(s);
}
}

protected final void initTOTWLTH(String s) {
if (!s.trim().isEmpty()) {
TOTWLTH = new Double(s);
}
}

protected final void initVCARN(String s) {
if (!s.trim().isEmpty()) {
VCARN = new Double(s);
}
}

protected final void initVCARN_I(String s) {
if (!s.trim().isEmpty()) {
VCARN_I = new Double(s);
}
}

protected final void initVCARN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VCARN_IFLAG = new Double(s);
}
}

protected final void initVOTYP1(String s) {
if (!s.trim().isEmpty()) {
VOTYP1 = new Double(s);
}
}

protected final void initVOTYP1_I(String s) {
if (!s.trim().isEmpty()) {
VOTYP1_I = new Double(s);
}
}

protected final void initVOTYP2(String s) {
if (!s.trim().isEmpty()) {
VOTYP2 = new Double(s);
}
}

protected final void initVOTYP2_I(String s) {
if (!s.trim().isEmpty()) {
VOTYP2_I = new Double(s);
}
}

protected final void initVOTYP3(String s) {
if (!s.trim().isEmpty()) {
VOTYP3 = new Double(s);
}
}

protected final void initVOTYP3_I(String s) {
if (!s.trim().isEmpty()) {
VOTYP3_I = new Double(s);
}
}

protected final void initVOTYP4(String s) {
if (!s.trim().isEmpty()) {
VOTYP4 = new Double(s);
}
}

protected final void initVOTYP4_I(String s) {
if (!s.trim().isEmpty()) {
VOTYP4_I = new Double(s);
}
}

protected final void initVOTYP5_I(String s) {
if (!s.trim().isEmpty()) {
VOTYP5_I = new Double(s);
}
}

protected final void initVOVAL(String s) {
if (!s.trim().isEmpty()) {
VOVAL = new Double(s);
}
}

protected final void initVOVAL_I(String s) {
if (!s.trim().isEmpty()) {
VOVAL_I = new Double(s);
}
}

protected final void initVOVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VOVAL_IFLAG = new Double(s);
}
}

protected final void initVOVLB(String s) {
if (!s.trim().isEmpty()) {
VOVLB = new Double(s);
}
}

protected final void initVPERS(String s) {
if (!s.trim().isEmpty()) {
VPERS = new Double(s);
}
}

protected final void initVPERV(String s) {
if (!s.trim().isEmpty()) {
VPERV = new Double(s);
}
}

protected final void initVPERV_I(String s) {
if (!s.trim().isEmpty()) {
VPERV_I = new Double(s);
}
}

protected final void initVPERV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VPERV_IFLAG = new Double(s);
}
}

protected final void initVTYPE2(String s) {
if (!s.trim().isEmpty()) {
VTYPE2 = new Double(s);
}
}

protected final void initVTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
VTYPE2_I = new Double(s);
}
}

protected final void initVTYPE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VTYPE_IFLAG = new Double(s);
}
}

protected final void initYEAR(String s) {
if (!s.trim().isEmpty()) {
YEAR = new Double(s);
}
}

public Double getACCOM() {
return ACCOM;
}

public Double getACCOTH() {
return ACCOTH;
}

public Double getALLENDW() {
return ALLENDW;
}

public Double getALLGD() {
return ALLGD;
}

public int getCASEW1() {
return CASEW1;
}

public Double getDVEQRELVAL() {
return DVEQRELVAL;
}

public Double getDVGCOLLV() {
return DVGCOLLV;
}

public Double getDVHORP() {
return DVHORP;
}

public Double getDVHSIZE() {
return DVHSIZE;
}

public Double getDVHVALUE() {
return DVHVALUE;
}

public Double getDVPRIRNT() {
return DVPRIRNT;
}

public Double getDVPROPERTY() {
return DVPROPERTY;
}

public Double getDVTOTOTHVEHVAL() {
return DVTOTOTHVEHVAL;
}

public Double getDVTOTPERNPVAL() {
return DVTOTPERNPVAL;
}

public Double getDVTOTVEHVAL() {
return DVTOTVEHVAL;
}

public Double getEINTRAT() {
return EINTRAT;
}

public Double getEINTRAT_I() {
return EINTRAT_I;
}

public Double getEINTRAT_IFLAG() {
return EINTRAT_IFLAG;
}

public Double getEOTHREG() {
return EOTHREG;
}

public Double getEOTHRVA() {
return EOTHRVA;
}

public Double getEOTHRVB() {
return EOTHRVB;
}

public Double getEPRPER() {
return EPRPER;
}

public Double getEPRVAL() {
return EPRVAL;
}

public Double getEPRVPAY() {
return EPRVPAY;
}

public Double getEQVAL() {
return EQVAL;
}

public Double getEQVALB() {
return EQVALB;
}

public Double getEQVAL_I() {
return EQVAL_I;
}

public Double getEQVAL_IFLAG() {
return EQVAL_IFLAG;
}

public Double getEQYES() {
return EQYES;
}

public Double getERECTAX() {
return ERECTAX;
}

public Double getERVPRP() {
return ERVPRP;
}

public Double getERVPRP_I() {
return ERVPRP_I;
}

public Double getERVPRP_IFLAG() {
return ERVPRP_IFLAG;
}

public Double getERVRENT() {
return ERVRENT;
}

public Double getERVSUM() {
return ERVSUM;
}

public Double getERVSUMB() {
return ERVSUMB;
}

public Double getERVTAX() {
return ERVTAX;
}

public Double getFLTTYP() {
return FLTTYP;
}

public Double getFURN() {
return FURN;
}

public Double getGCOLLEC() {
return GCOLLEC;
}

public Double getGCOLLEC_I() {
return GCOLLEC_I;
}

public Double getGCOLLEC_IFLAG() {
return GCOLLEC_IFLAG;
}

public Double getGCOLLV() {
return GCOLLV;
}

public Double getGCOLLVB() {
return GCOLLVB;
}

public Double getGCOLLV_I() {
return GCOLLV_I;
}

public Double getGCOLLV_IFLAG() {
return GCOLLV_IFLAG;
}

public Double getGCONTVB() {
return GCONTVB;
}

public Double getGCONTVB_I() {
return GCONTVB_I;
}

public Double getGCONTVB_IFLAG() {
return GCONTVB_IFLAG;
}

public Double getGOR() {
return GOR;
}

public Double getHAGEB() {
return HAGEB;
}

public Double getHAGEYR() {
return HAGEYR;
}

public Double getHBEDRM() {
return HBEDRM;
}

public Double getHBFROM() {
return HBFROM;
}

public Double getHBUYSE() {
return HBUYSE;
}

public Double getHBUYYR() {
return HBUYYR;
}

public Double getHFINWNT_SUM() {
return HFINWNT_SUM;
}

public Double getHFINW_SUM() {
return HFINW_SUM;
}

public Double getHHOLDTYPE() {
return HHOLDTYPE;
}

public Double getHHOSCH() {
return HHOSCH;
}

public Double getHHOWN() {
return HHOWN;
}

public Double getHMORTG() {
return HMORTG;
}

public Double getHOUSGDST_SUM() {
return HOUSGDST_SUM;
}

public Double getHOUT() {
return HOUT;
}

public Double getHPHYSW() {
return HPHYSW;
}

public Double getHPRICE() {
return HPRICE;
}

public Double getHPRICEB() {
return HPRICEB;
}

public Double getHPROPW() {
return HPROPW;
}

public Double getHRPDVAGE9() {
return HRPDVAGE9;
}

public Double getHRPDVILO3A() {
return HRPDVILO3A;
}

public Double getHRPDVMRDF() {
return HRPDVMRDF;
}

public Double getHRPEDATTN1() {
return HRPEDATTN1;
}

public Double getHRPEDATTN2() {
return HRPEDATTN2;
}

public Double getHRPEDATTN3() {
return HRPEDATTN3;
}

public Double getHRPEDLEVEL() {
return HRPEDLEVEL;
}

public Double getHRPNSSEC3() {
return HRPNSSEC3;
}

public Double getHRPSEX() {
return HRPSEX;
}

public Double getHRTBEV() {
return HRTBEV;
}

public Double getHSETYPE() {
return HSETYPE;
}

public Double getHSHARE() {
return HSHARE;
}

public Double getHSHAREP() {
return HSHAREP;
}

public Double getHSHAREP_I() {
return HSHAREP_I;
}

public Double getHSHAREP_IFLAG() {
return HSHAREP_IFLAG;
}

public Double getHSHARE_I() {
return HSHARE_I;
}

public Double getHSHARE_IFLAG() {
return HSHARE_IFLAG;
}

public Double getHVALB() {
return HVALB;
}

public Double getHVALUE() {
return HVALUE;
}

public Double getHVALUE_I() {
return HVALUE_I;
}

public Double getHVALUE_IFLAG() {
return HVALUE_IFLAG;
}

public Double getLLORD() {
return LLORD;
}

public Double getMALL2() {
return MALL2;
}

public Double getMALL2_I() {
return MALL2_I;
}

public Double getMALL2_IFLAG() {
return MALL2_IFLAG;
}

public Double getMALL3() {
return MALL3;
}

public Double getMALL3_I() {
return MALL3_I;
}

public Double getMALL3_IFLAG() {
return MALL3_IFLAG;
}

public Double getMALLTY2() {
return MALLTY2;
}

public Double getMALLTY2_I() {
return MALLTY2_I;
}

public Double getMALLTY2_IFLAG() {
return MALLTY2_IFLAG;
}

public Double getMALLTY3() {
return MALLTY3;
}

public Double getMARRS2() {
return MARRS2;
}

public Double getMARRS3() {
return MARRS3;
}

public Double getMENDNUM2() {
return MENDNUM2;
}

public Double getMENDNUM2_I() {
return MENDNUM2_I;
}

public Double getMENDNUM2_IFLAG() {
return MENDNUM2_IFLAG;
}

public Double getMENDNUM3() {
return MENDNUM3;
}

public Double getMENDV11() {
return MENDV11;
}

public Double getMENDV2() {
return MENDV2;
}

public Double getMENDV2_I() {
return MENDV2_I;
}

public Double getMENDV2_IFLAG() {
return MENDV2_IFLAG;
}

public Double getMENDV3() {
return MENDV3;
}

public Double getMENDV3_I() {
return MENDV3_I;
}

public Double getMENDV3_IFLAG() {
return MENDV3_IFLAG;
}

public Double getMENDV4() {
return MENDV4;
}

public Double getMENDV4_I() {
return MENDV4_I;
}

public Double getMENDV4_IFLAG() {
return MENDV4_IFLAG;
}

public Double getMENDV5() {
return MENDV5;
}

public Double getMENDV6() {
return MENDV6;
}

public Double getMENDV6_I() {
return MENDV6_I;
}

public Double getMENDV6_IFLAG() {
return MENDV6_IFLAG;
}

public Double getMENDV7() {
return MENDV7;
}

public Double getMENDV8() {
return MENDV8;
}

public Double getMENDVB11() {
return MENDVB11;
}

public Double getMENDVB2() {
return MENDVB2;
}

public Double getMENDVB3() {
return MENDVB3;
}

public Double getMENDVB4() {
return MENDVB4;
}

public Double getMENDVB6() {
return MENDVB6;
}

public Double getMENDVB7() {
return MENDVB7;
}

public Double getMENDW2_I() {
return MENDW2_I;
}

public Double getMENDW2_IFLAG() {
return MENDW2_IFLAG;
}

public Double getMENDW3_I() {
return MENDW3_I;
}

public Double getMENDW3_IFLAG() {
return MENDW3_IFLAG;
}

public Double getMENDX2() {
return MENDX2;
}

public Double getMENDX3() {
return MENDX3;
}

public Double getMENDY11() {
return MENDY11;
}

public Double getMENDY2() {
return MENDY2;
}

public Double getMENDY3() {
return MENDY3;
}

public Double getMENDY4() {
return MENDY4;
}

public Double getMENDY6() {
return MENDY6;
}

public Double getMENDY7() {
return MENDY7;
}

public Double getMHOWPY2() {
return MHOWPY2;
}

public Double getMHOWPY3() {
return MHOWPY3;
}

public Double getMINC1() {
return MINC1;
}

public Double getMINC11() {
return MINC11;
}

public Double getMINC2() {
return MINC2;
}

public Double getMINC3() {
return MINC3;
}

public Double getMINC4() {
return MINC4;
}

public Double getMINC5() {
return MINC5;
}

public Double getMINC6() {
return MINC6;
}

public Double getMJNAME01() {
return MJNAME01;
}

public Double getMJNAME02() {
return MJNAME02;
}

public Double getMJNAME03() {
return MJNAME03;
}

public Double getMJNAME04() {
return MJNAME04;
}

public Double getMJNAME18() {
return MJNAME18;
}

public Double getMJNAME19() {
return MJNAME19;
}

public Double getMJNAME20() {
return MJNAME20;
}

public Double getMJNAME35() {
return MJNAME35;
}

public Double getMJNAME36() {
return MJNAME36;
}

public Double getMNAME2() {
return MNAME2;
}

public Double getMNAME3() {
return MNAME3;
}

public Double getMNEG2() {
return MNEG2;
}

public Double getMNEG2_I() {
return MNEG2_I;
}

public Double getMNEG2_IFLAG() {
return MNEG2_IFLAG;
}

public Double getMNEG3() {
return MNEG3;
}

public Double getMNEGB2() {
return MNEGB2;
}

public Double getMNEGB3() {
return MNEGB3;
}

public Double getMNUMB() {
return MNUMB;
}

public Double getMONAME2() {
return MONAME2;
}

public Double getMONAME3() {
return MONAME3;
}

public Double getMONTH() {
return MONTH;
}

public Double getMPAYB2() {
return MPAYB2;
}

public Double getMPAYB3() {
return MPAYB3;
}

public Double getMPAYM2() {
return MPAYM2;
}

public Double getMPAYM3() {
return MPAYM3;
}

public Double getMPP2() {
return MPP2;
}

public Double getMPP3() {
return MPP3;
}

public Double getMREAS01() {
return MREAS01;
}

public Double getMREAS02() {
return MREAS02;
}

public Double getMREAS03() {
return MREAS03;
}

public Double getMREAS04() {
return MREAS04;
}

public Double getMREAS05() {
return MREAS05;
}

public Double getMREAS06() {
return MREAS06;
}

public Double getMREAS07() {
return MREAS07;
}

public Double getMREAS12() {
return MREAS12;
}

public Double getMREAS13() {
return MREAS13;
}

public Double getMREAS23() {
return MREAS23;
}

public Double getMTYPE2() {
return MTYPE2;
}

public Double getMTYPE2_I() {
return MTYPE2_I;
}

public Double getMTYPE2_IFLAG() {
return MTYPE2_IFLAG;
}

public Double getMTYPE3() {
return MTYPE3;
}

public Double getMTYPE3_I() {
return MTYPE3_I;
}

public Double getMTYPE3_IFLAG() {
return MTYPE3_IFLAG;
}

public Double getMVAL2() {
return MVAL2;
}

public Double getMVAL2_I() {
return MVAL2_I;
}

public Double getMVAL2_IFLAG() {
return MVAL2_IFLAG;
}

public Double getMVAL3() {
return MVAL3;
}

public Double getMVAL3_I() {
return MVAL3_I;
}

public Double getMVAL3_IFLAG() {
return MVAL3_IFLAG;
}

public Double getMVALB2() {
return MVALB2;
}

public Double getMVALB3() {
return MVALB3;
}

public Double getMYLFT2() {
return MYLFT2;
}

public Double getMYLFT3() {
return MYLFT3;
}

public Double getNUMADULT() {
return NUMADULT;
}

public Double getNUMCH18() {
return NUMCH18;
}

public Double getNUMCHILD() {
return NUMCHILD;
}

public Double getNUMCIVPTR() {
return NUMCIVPTR;
}

public Double getNUMCPART() {
return NUMCPART;
}

public Double getNUMHHLDR() {
return NUMHHLDR;
}

public Double getNUMMPART() {
return NUMMPART;
}

public Double getOFINAL() {
return OFINAL;
}

public Double getTEN1() {
return TEN1;
}

public Double getTEN1_I() {
return TEN1_I;
}

public Double getTEN1_IFLAG() {
return TEN1_IFLAG;
}

public Double getTIED() {
return TIED;
}

public Double getTOTMNEG() {
return TOTMNEG;
}

public Double getTOTMORT() {
return TOTMORT;
}

public Double getTOTMVAL() {
return TOTMVAL;
}

public Double getTOTWLTH() {
return TOTWLTH;
}

public Double getVCARN() {
return VCARN;
}

public Double getVCARN_I() {
return VCARN_I;
}

public Double getVCARN_IFLAG() {
return VCARN_IFLAG;
}

public Double getVOTYP1() {
return VOTYP1;
}

public Double getVOTYP1_I() {
return VOTYP1_I;
}

public Double getVOTYP2() {
return VOTYP2;
}

public Double getVOTYP2_I() {
return VOTYP2_I;
}

public Double getVOTYP3() {
return VOTYP3;
}

public Double getVOTYP3_I() {
return VOTYP3_I;
}

public Double getVOTYP4() {
return VOTYP4;
}

public Double getVOTYP4_I() {
return VOTYP4_I;
}

public Double getVOTYP5_I() {
return VOTYP5_I;
}

public Double getVOVAL() {
return VOVAL;
}

public Double getVOVAL_I() {
return VOVAL_I;
}

public Double getVOVAL_IFLAG() {
return VOVAL_IFLAG;
}

public Double getVOVLB() {
return VOVLB;
}

public Double getVPERS() {
return VPERS;
}

public Double getVPERV() {
return VPERV;
}

public Double getVPERV_I() {
return VPERV_I;
}

public Double getVPERV_IFLAG() {
return VPERV_IFLAG;
}

public Double getVTYPE2() {
return VTYPE2;
}

public Double getVTYPE2_I() {
return VTYPE2_I;
}

public Double getVTYPE_IFLAG() {
return VTYPE_IFLAG;
}

public Double getYEAR() {
return YEAR;
}

}
