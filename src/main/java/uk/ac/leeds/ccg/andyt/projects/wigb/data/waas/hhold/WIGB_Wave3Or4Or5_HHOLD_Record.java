/**
 * Source code generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas.hhold;
public class WIGB_Wave3Or4Or5_HHOLD_Record extends WIGB_Wave1Or2Or3Or4Or5_HHOLD_Record {
protected double BUYLGDST_SUM;
protected Integer CASEW2;
protected Integer CASEW3;
protected double DVBLDDEBT_SUM;
protected double DVBLDVAL_SUM;
protected double DVBLTDEBT_SUM;
protected double DVBLTVAL_SUM;
protected double DVCACRVAL_AGGR;
protected double DVCACTV_AGGR;
protected double DVCAODVAL_AGGR;
protected double DVCASVV_AGGR;
protected double DVCAVAL_AGGR;
protected double DVCISAV_AGGR;
protected double DVDBRWEALTHVAL_AGGR;
protected double DVEQLTM;
protected double DVEQPRUN;
protected double DVEQSRB;
protected double DVERECGROSSANNUAL;
protected double DVERECNETANNUAL;
protected double DVERVRECGROSSANNUAL;
protected double DVERVRECNETANNUAL;
protected double DVFBONDV_AGGR;
protected double DVFCOLLV_AGGR;
protected double DVFEOPTV_AGGR;
protected double DVFESHARES_AGGR;
protected double DVFESHAV_AGGR;
protected double DVFFASSETS_AGGR;
protected double DVFGLTFOV_AGGR;
protected double DVFGLTUKV_AGGR;
protected double DVFINFLV_AGGR;
protected double DVFINFVAL_AGGR;
protected double DVFINFV_AGGR;
protected double DVFINVOTV_AGGR;
protected double DVFLFENV_AGGR;
protected double DVFLFFSV_AGGR;
protected double DVFLFSIV_AGGR;
protected double DVFLFTEV_AGGR;
protected double DVFNSVAL_AGGR;
protected double DVFSHOSV_AGGR;
protected double DVFSHUKV_AGGR;
protected double DVGIEMP_AGGR;
protected double DVGIINV_AGGR;
protected double DVGIOTHR_AGGR;
protected double DVGIPPEN_AGGR;
protected double DVGISE_AGGR;
protected double DVGRSRENTAMTANNUAL_AGGR;
protected double DVHSEDEBT_SUM;
protected double DVHSEVAL_SUM;
protected double DVIISAV_AGGR;
protected double DVINSV_AGGR;
protected double DVISAVAL_AGGR;
protected double DVKISAV_AGGR;
protected double DVLOSDEBT_SUM;
protected double DVLOSVAL_SUM;
protected double DVLUKDEBT_SUM;
protected double DVLUKVAL_SUM;
protected double DVNETRENTAMTANNUAL_AGGR;
protected double DVNIEMP_AGGR;
protected double DVNIINV_AGGR;
protected double DVNIOTHI_AGGR;
protected double DVNIOTHR_AGGR;
protected double DVNIPPEN_AGGR;
protected double DVNISE_AGGR;
protected double DVOIGEGANNUAL_AGGR;
protected double DVOIGFRANNUAL_AGGR;
protected double DVOIGGTANNUAL_AGGR;
protected double DVOIGMAANNUAL_AGGR;
protected double DVOIGOPANNUAL_AGGR;
protected double DVOIGROANNUAL_AGGR;
protected double DVOIGRRANNUAL_AGGR;
protected double DVOINEGANNUAL_AGGR;
protected double DVOINFRANNUAL_AGGR;
protected double DVOINGTANNUAL_AGGR;
protected double DVOINMAANNUAL_AGGR;
protected double DVOINOPANNUAL_AGGR;
protected double DVOINROANNUAL_AGGR;
protected double DVOINRRANNUAL_AGGR;
protected double DVOPRDEBT_SUM;
protected double DVOPRVAL_SUM;
protected double DVPAVCUV_AGGR;
protected double DVPFCURVAL_AGGR;
protected double DVPFDDV_AGGR;
protected double DVPINPVAL_AGGR;
protected double DVPPVAL_AGGR;
protected double DVSAVAL_AGGR;
protected double DVSPEN_AGGR;
protected double DVTOTGIR;
protected double DVTOTNIR;
protected double DVVALDBT_AGGR;
protected double DVVALDCOS_AGGR;
protected double EINT;
protected double EINTFIX;
protected double EINT_I;
protected double EINT_IFLAG;
protected double EMSARR;
protected double EMSPAY;
protected double EQDRAW;
protected double EQDRAW_I;
protected double EQDRAW_IFLAG;
protected double EQNEW;
protected double EQOLD;
protected double EQTYPE1;
protected double EQTYPE1_I;
protected double EQTYPE1_IFLAG;
protected double EQTYPE2;
protected double EQUITY_YN_I;
protected double EQUITY_YN_IFLAG;
protected double EQVALDR;
protected double EQVALDRB;
protected double EQWHENM;
protected double EQWHENY;
protected double EREC;
protected double ERECMBY;
protected double ERECMPD;
protected double ERVRECBY;
protected double ERVRECPD;
protected double ERVREG1;
protected double ERVREG2;
protected double ESHARAPP;
protected double FRREPFIX;
protected double GCONTVLS;
protected double HEXT1;
protected double HEXT2;
protected double HEXT3;
protected double HEXT4;
protected double HFINL_AGGR;
protected double HFINW_EXCENDW_AGGR;
protected double HOUSGDSOST_SUM;
protected double MARRSV2;
protected double MARRSV3;
protected double MCHGE;
protected double MCHGENUM;
protected double MENDNUM3_I;
protected double MENDNUM3_IFLAG;
protected double MENDV5_I;
protected double MENDV5_IFLAG;
protected double MENDV7_I;
protected double MENDV7_IFLAG;
protected double MENDW2;
protected double MEXTN;
protected double MEXTRS1;
protected double MEXTRS2;
protected double MEXTRS3;
protected double MNUMBN;
protected double MNUMBO;
protected double MNUMB_I;
protected double MNUMB_IFLAG;
protected double MREAS14;
protected double MREAS24;
protected double MW2CHK1;
protected double MW2CHK2;
protected double MW2CHK3;
protected double MYIFCH2;
protected double MYIFCH3;
protected double NOUNITS;
protected double NUMDEPCH;
protected double NUMELCH;
protected double NUMNOELCH;
protected double OTHMORT_SUM;
protected double PHYSBUYLGDST_AGGR;
protected double PHYSHOUSGDSOST_AGGR;
protected double PHYSHOUSGDST_AGGR;
protected double PRREPAY;
protected double PRREPAY_I;
protected double PRREPAY_IFLAG;
protected double PRREPFIX;
protected double PRREPFIX_I;
protected double PRREPFIX_IFLAG;
protected double PRREPPC;
protected double PRREPPC_I;
protected double PRREPPC_IFLAG;
protected double SHARAPP;
protected double TOTARR_EXCMORT_AGGR;
protected double TOTBILLARR_AGGR;
protected double TOTCC_AGGR;
protected double TOTDVNWFLN_AGGR;
protected double TOTDVNWILN_AGGR;
protected double TOTFLNS_AGGR;
protected double TOTHPARR_AGGR;
protected double TOTHP_AGGR;
protected double TOTLNARR_AGGR;
protected double TOTLNS_AGGR;
protected double TOTLOS_AGGR;
protected double TOTMOARR_AGGR;
protected double TOTMO_AGGR;
protected double TOTNLOS_AGGR;
protected double TOTNSLBNK_AGGR;
protected double TOTNSLC_AGGR;
protected double TOTOSLBNK_AGGR;
protected double TOTOSLC_AGGR;
protected double TOTPEN_AGGR;
protected double TOTSC_AGGR;
protected double TOTSLBNK_AGGR;
protected double TOTSLC_AGGR;
protected double VOTPN;
protected double VPERS_I;
protected double VPERS_IFLAG;
protected final void initBUYLGDST_SUM(String s) {
if (!s.trim().isEmpty()) {
BUYLGDST_SUM = new Double(s);
} else {
BUYLGDST_SUM = Double.NaN;
}
}

protected final void initCASEW2(String s) {
if (!s.trim().isEmpty()) {
CASEW2 = new Integer(s);
}
}

protected final void initCASEW3(String s) {
if (!s.trim().isEmpty()) {
CASEW3 = new Integer(s);
}
}

protected final void initDVBLDDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLDDEBT_SUM = new Double(s);
} else {
DVBLDDEBT_SUM = Double.NaN;
}
}

protected final void initDVBLDVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLDVAL_SUM = new Double(s);
} else {
DVBLDVAL_SUM = Double.NaN;
}
}

protected final void initDVBLTDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLTDEBT_SUM = new Double(s);
} else {
DVBLTDEBT_SUM = Double.NaN;
}
}

protected final void initDVBLTVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLTVAL_SUM = new Double(s);
} else {
DVBLTVAL_SUM = Double.NaN;
}
}

protected final void initDVCACRVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCACRVAL_AGGR = new Double(s);
} else {
DVCACRVAL_AGGR = Double.NaN;
}
}

protected final void initDVCACTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCACTV_AGGR = new Double(s);
} else {
DVCACTV_AGGR = Double.NaN;
}
}

protected final void initDVCAODVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCAODVAL_AGGR = new Double(s);
} else {
DVCAODVAL_AGGR = Double.NaN;
}
}

protected final void initDVCASVV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCASVV_AGGR = new Double(s);
} else {
DVCASVV_AGGR = Double.NaN;
}
}

protected final void initDVCAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCAVAL_AGGR = new Double(s);
} else {
DVCAVAL_AGGR = Double.NaN;
}
}

protected final void initDVCISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCISAV_AGGR = new Double(s);
} else {
DVCISAV_AGGR = Double.NaN;
}
}

protected final void initDVDBRWEALTHVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVDBRWEALTHVAL_AGGR = new Double(s);
} else {
DVDBRWEALTHVAL_AGGR = Double.NaN;
}
}

protected final void initDVEQLTM(String s) {
if (!s.trim().isEmpty()) {
DVEQLTM = new Double(s);
} else {
DVEQLTM = Double.NaN;
}
}

protected final void initDVEQPRUN(String s) {
if (!s.trim().isEmpty()) {
DVEQPRUN = new Double(s);
} else {
DVEQPRUN = Double.NaN;
}
}

protected final void initDVEQSRB(String s) {
if (!s.trim().isEmpty()) {
DVEQSRB = new Double(s);
} else {
DVEQSRB = Double.NaN;
}
}

protected final void initDVERECGROSSANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERECGROSSANNUAL = new Double(s);
} else {
DVERECGROSSANNUAL = Double.NaN;
}
}

protected final void initDVERECNETANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERECNETANNUAL = new Double(s);
} else {
DVERECNETANNUAL = Double.NaN;
}
}

protected final void initDVERVRECGROSSANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERVRECGROSSANNUAL = new Double(s);
} else {
DVERVRECGROSSANNUAL = Double.NaN;
}
}

protected final void initDVERVRECNETANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERVRECNETANNUAL = new Double(s);
} else {
DVERVRECNETANNUAL = Double.NaN;
}
}

protected final void initDVFBONDV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFBONDV_AGGR = new Double(s);
} else {
DVFBONDV_AGGR = Double.NaN;
}
}

protected final void initDVFCOLLV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFCOLLV_AGGR = new Double(s);
} else {
DVFCOLLV_AGGR = Double.NaN;
}
}

protected final void initDVFEOPTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFEOPTV_AGGR = new Double(s);
} else {
DVFEOPTV_AGGR = Double.NaN;
}
}

protected final void initDVFESHARES_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFESHARES_AGGR = new Double(s);
} else {
DVFESHARES_AGGR = Double.NaN;
}
}

protected final void initDVFESHAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFESHAV_AGGR = new Double(s);
} else {
DVFESHAV_AGGR = Double.NaN;
}
}

protected final void initDVFFASSETS_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFFASSETS_AGGR = new Double(s);
} else {
DVFFASSETS_AGGR = Double.NaN;
}
}

protected final void initDVFGLTFOV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFGLTFOV_AGGR = new Double(s);
} else {
DVFGLTFOV_AGGR = Double.NaN;
}
}

protected final void initDVFGLTUKV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFGLTUKV_AGGR = new Double(s);
} else {
DVFGLTUKV_AGGR = Double.NaN;
}
}

protected final void initDVFINFLV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFLV_AGGR = new Double(s);
} else {
DVFINFLV_AGGR = Double.NaN;
}
}

protected final void initDVFINFVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFVAL_AGGR = new Double(s);
} else {
DVFINFVAL_AGGR = Double.NaN;
}
}

protected final void initDVFINFV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFV_AGGR = new Double(s);
} else {
DVFINFV_AGGR = Double.NaN;
}
}

protected final void initDVFINVOTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINVOTV_AGGR = new Double(s);
} else {
DVFINVOTV_AGGR = Double.NaN;
}
}

protected final void initDVFLFENV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFENV_AGGR = new Double(s);
} else {
DVFLFENV_AGGR = Double.NaN;
}
}

protected final void initDVFLFFSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFFSV_AGGR = new Double(s);
} else {
DVFLFFSV_AGGR = Double.NaN;
}
}

protected final void initDVFLFSIV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFSIV_AGGR = new Double(s);
} else {
DVFLFSIV_AGGR = Double.NaN;
}
}

protected final void initDVFLFTEV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFTEV_AGGR = new Double(s);
} else {
DVFLFTEV_AGGR = Double.NaN;
}
}

protected final void initDVFNSVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFNSVAL_AGGR = new Double(s);
} else {
DVFNSVAL_AGGR = Double.NaN;
}
}

protected final void initDVFSHOSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFSHOSV_AGGR = new Double(s);
} else {
DVFSHOSV_AGGR = Double.NaN;
}
}

protected final void initDVFSHUKV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFSHUKV_AGGR = new Double(s);
} else {
DVFSHUKV_AGGR = Double.NaN;
}
}

protected final void initDVGIEMP_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIEMP_AGGR = new Double(s);
} else {
DVGIEMP_AGGR = Double.NaN;
}
}

protected final void initDVGIINV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIINV_AGGR = new Double(s);
} else {
DVGIINV_AGGR = Double.NaN;
}
}

protected final void initDVGIOTHR_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIOTHR_AGGR = new Double(s);
} else {
DVGIOTHR_AGGR = Double.NaN;
}
}

protected final void initDVGIPPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIPPEN_AGGR = new Double(s);
} else {
DVGIPPEN_AGGR = Double.NaN;
}
}

protected final void initDVGISE_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGISE_AGGR = new Double(s);
} else {
DVGISE_AGGR = Double.NaN;
}
}

protected final void initDVGRSRENTAMTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGRSRENTAMTANNUAL_AGGR = new Double(s);
} else {
DVGRSRENTAMTANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVHSEDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVHSEDEBT_SUM = new Double(s);
} else {
DVHSEDEBT_SUM = Double.NaN;
}
}

protected final void initDVHSEVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVHSEVAL_SUM = new Double(s);
} else {
DVHSEVAL_SUM = Double.NaN;
}
}

protected final void initDVIISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVIISAV_AGGR = new Double(s);
} else {
DVIISAV_AGGR = Double.NaN;
}
}

protected final void initDVINSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVINSV_AGGR = new Double(s);
} else {
DVINSV_AGGR = Double.NaN;
}
}

protected final void initDVISAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVISAVAL_AGGR = new Double(s);
} else {
DVISAVAL_AGGR = Double.NaN;
}
}

protected final void initDVKISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVKISAV_AGGR = new Double(s);
} else {
DVKISAV_AGGR = Double.NaN;
}
}

protected final void initDVLOSDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLOSDEBT_SUM = new Double(s);
} else {
DVLOSDEBT_SUM = Double.NaN;
}
}

protected final void initDVLOSVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLOSVAL_SUM = new Double(s);
} else {
DVLOSVAL_SUM = Double.NaN;
}
}

protected final void initDVLUKDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLUKDEBT_SUM = new Double(s);
} else {
DVLUKDEBT_SUM = Double.NaN;
}
}

protected final void initDVLUKVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLUKVAL_SUM = new Double(s);
} else {
DVLUKVAL_SUM = Double.NaN;
}
}

protected final void initDVNETRENTAMTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNETRENTAMTANNUAL_AGGR = new Double(s);
} else {
DVNETRENTAMTANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVNIEMP_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIEMP_AGGR = new Double(s);
} else {
DVNIEMP_AGGR = Double.NaN;
}
}

protected final void initDVNIINV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIINV_AGGR = new Double(s);
} else {
DVNIINV_AGGR = Double.NaN;
}
}

protected final void initDVNIOTHI_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIOTHI_AGGR = new Double(s);
} else {
DVNIOTHI_AGGR = Double.NaN;
}
}

protected final void initDVNIOTHR_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIOTHR_AGGR = new Double(s);
} else {
DVNIOTHR_AGGR = Double.NaN;
}
}

protected final void initDVNIPPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIPPEN_AGGR = new Double(s);
} else {
DVNIPPEN_AGGR = Double.NaN;
}
}

protected final void initDVNISE_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNISE_AGGR = new Double(s);
} else {
DVNISE_AGGR = Double.NaN;
}
}

protected final void initDVOIGEGANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGEGANNUAL_AGGR = new Double(s);
} else {
DVOIGEGANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGFRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGFRANNUAL_AGGR = new Double(s);
} else {
DVOIGFRANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGGTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGGTANNUAL_AGGR = new Double(s);
} else {
DVOIGGTANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGMAANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGMAANNUAL_AGGR = new Double(s);
} else {
DVOIGMAANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGOPANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGOPANNUAL_AGGR = new Double(s);
} else {
DVOIGOPANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGROANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGROANNUAL_AGGR = new Double(s);
} else {
DVOIGROANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOIGRRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGRRANNUAL_AGGR = new Double(s);
} else {
DVOIGRRANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINEGANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINEGANNUAL_AGGR = new Double(s);
} else {
DVOINEGANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINFRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINFRANNUAL_AGGR = new Double(s);
} else {
DVOINFRANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINGTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINGTANNUAL_AGGR = new Double(s);
} else {
DVOINGTANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINMAANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINMAANNUAL_AGGR = new Double(s);
} else {
DVOINMAANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINOPANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINOPANNUAL_AGGR = new Double(s);
} else {
DVOINOPANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINROANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINROANNUAL_AGGR = new Double(s);
} else {
DVOINROANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOINRRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINRRANNUAL_AGGR = new Double(s);
} else {
DVOINRRANNUAL_AGGR = Double.NaN;
}
}

protected final void initDVOPRDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVOPRDEBT_SUM = new Double(s);
} else {
DVOPRDEBT_SUM = Double.NaN;
}
}

protected final void initDVOPRVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVOPRVAL_SUM = new Double(s);
} else {
DVOPRVAL_SUM = Double.NaN;
}
}

protected final void initDVPAVCUV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPAVCUV_AGGR = new Double(s);
} else {
DVPAVCUV_AGGR = Double.NaN;
}
}

protected final void initDVPFCURVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPFCURVAL_AGGR = new Double(s);
} else {
DVPFCURVAL_AGGR = Double.NaN;
}
}

protected final void initDVPFDDV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPFDDV_AGGR = new Double(s);
} else {
DVPFDDV_AGGR = Double.NaN;
}
}

protected final void initDVPINPVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPINPVAL_AGGR = new Double(s);
} else {
DVPINPVAL_AGGR = Double.NaN;
}
}

protected final void initDVPPVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPPVAL_AGGR = new Double(s);
} else {
DVPPVAL_AGGR = Double.NaN;
}
}

protected final void initDVSAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVSAVAL_AGGR = new Double(s);
} else {
DVSAVAL_AGGR = Double.NaN;
}
}

protected final void initDVSPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVSPEN_AGGR = new Double(s);
} else {
DVSPEN_AGGR = Double.NaN;
}
}

protected final void initDVTOTGIR(String s) {
if (!s.trim().isEmpty()) {
DVTOTGIR = new Double(s);
} else {
DVTOTGIR = Double.NaN;
}
}

protected final void initDVTOTNIR(String s) {
if (!s.trim().isEmpty()) {
DVTOTNIR = new Double(s);
} else {
DVTOTNIR = Double.NaN;
}
}

protected final void initDVVALDBT_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVVALDBT_AGGR = new Double(s);
} else {
DVVALDBT_AGGR = Double.NaN;
}
}

protected final void initDVVALDCOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVVALDCOS_AGGR = new Double(s);
} else {
DVVALDCOS_AGGR = Double.NaN;
}
}

protected final void initEINT(String s) {
if (!s.trim().isEmpty()) {
EINT = new Double(s);
} else {
EINT = Double.NaN;
}
}

protected final void initEINTFIX(String s) {
if (!s.trim().isEmpty()) {
EINTFIX = new Double(s);
} else {
EINTFIX = Double.NaN;
}
}

protected final void initEINT_I(String s) {
if (!s.trim().isEmpty()) {
EINT_I = new Double(s);
} else {
EINT_I = Double.NaN;
}
}

protected final void initEINT_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EINT_IFLAG = new Double(s);
} else {
EINT_IFLAG = Double.NaN;
}
}

protected final void initEMSARR(String s) {
if (!s.trim().isEmpty()) {
EMSARR = new Double(s);
} else {
EMSARR = Double.NaN;
}
}

protected final void initEMSPAY(String s) {
if (!s.trim().isEmpty()) {
EMSPAY = new Double(s);
} else {
EMSPAY = Double.NaN;
}
}

protected final void initEQDRAW(String s) {
if (!s.trim().isEmpty()) {
EQDRAW = new Double(s);
} else {
EQDRAW = Double.NaN;
}
}

protected final void initEQDRAW_I(String s) {
if (!s.trim().isEmpty()) {
EQDRAW_I = new Double(s);
} else {
EQDRAW_I = Double.NaN;
}
}

protected final void initEQDRAW_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQDRAW_IFLAG = new Double(s);
} else {
EQDRAW_IFLAG = Double.NaN;
}
}

protected final void initEQNEW(String s) {
if (!s.trim().isEmpty()) {
EQNEW = new Double(s);
} else {
EQNEW = Double.NaN;
}
}

protected final void initEQOLD(String s) {
if (!s.trim().isEmpty()) {
EQOLD = new Double(s);
} else {
EQOLD = Double.NaN;
}
}

protected final void initEQTYPE1(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1 = new Double(s);
} else {
EQTYPE1 = Double.NaN;
}
}

protected final void initEQTYPE1_I(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1_I = new Double(s);
} else {
EQTYPE1_I = Double.NaN;
}
}

protected final void initEQTYPE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1_IFLAG = new Double(s);
} else {
EQTYPE1_IFLAG = Double.NaN;
}
}

protected final void initEQTYPE2(String s) {
if (!s.trim().isEmpty()) {
EQTYPE2 = new Double(s);
} else {
EQTYPE2 = Double.NaN;
}
}

protected final void initEQUITY_YN_I(String s) {
if (!s.trim().isEmpty()) {
EQUITY_YN_I = new Double(s);
} else {
EQUITY_YN_I = Double.NaN;
}
}

protected final void initEQUITY_YN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQUITY_YN_IFLAG = new Double(s);
} else {
EQUITY_YN_IFLAG = Double.NaN;
}
}

protected final void initEQVALDR(String s) {
if (!s.trim().isEmpty()) {
EQVALDR = new Double(s);
} else {
EQVALDR = Double.NaN;
}
}

protected final void initEQVALDRB(String s) {
if (!s.trim().isEmpty()) {
EQVALDRB = new Double(s);
} else {
EQVALDRB = Double.NaN;
}
}

protected final void initEQWHENM(String s) {
if (!s.trim().isEmpty()) {
EQWHENM = new Double(s);
} else {
EQWHENM = Double.NaN;
}
}

protected final void initEQWHENY(String s) {
if (!s.trim().isEmpty()) {
EQWHENY = new Double(s);
} else {
EQWHENY = Double.NaN;
}
}

protected final void initEREC(String s) {
if (!s.trim().isEmpty()) {
EREC = new Double(s);
} else {
EREC = Double.NaN;
}
}

protected final void initERECMBY(String s) {
if (!s.trim().isEmpty()) {
ERECMBY = new Double(s);
} else {
ERECMBY = Double.NaN;
}
}

protected final void initERECMPD(String s) {
if (!s.trim().isEmpty()) {
ERECMPD = new Double(s);
} else {
ERECMPD = Double.NaN;
}
}

protected final void initERVRECBY(String s) {
if (!s.trim().isEmpty()) {
ERVRECBY = new Double(s);
} else {
ERVRECBY = Double.NaN;
}
}

protected final void initERVRECPD(String s) {
if (!s.trim().isEmpty()) {
ERVRECPD = new Double(s);
} else {
ERVRECPD = Double.NaN;
}
}

protected final void initERVREG1(String s) {
if (!s.trim().isEmpty()) {
ERVREG1 = new Double(s);
} else {
ERVREG1 = Double.NaN;
}
}

protected final void initERVREG2(String s) {
if (!s.trim().isEmpty()) {
ERVREG2 = new Double(s);
} else {
ERVREG2 = Double.NaN;
}
}

protected final void initESHARAPP(String s) {
if (!s.trim().isEmpty()) {
ESHARAPP = new Double(s);
} else {
ESHARAPP = Double.NaN;
}
}

protected final void initFRREPFIX(String s) {
if (!s.trim().isEmpty()) {
FRREPFIX = new Double(s);
} else {
FRREPFIX = Double.NaN;
}
}

protected final void initGCONTVLS(String s) {
if (!s.trim().isEmpty()) {
GCONTVLS = new Double(s);
} else {
GCONTVLS = Double.NaN;
}
}

protected final void initHEXT1(String s) {
if (!s.trim().isEmpty()) {
HEXT1 = new Double(s);
} else {
HEXT1 = Double.NaN;
}
}

protected final void initHEXT2(String s) {
if (!s.trim().isEmpty()) {
HEXT2 = new Double(s);
} else {
HEXT2 = Double.NaN;
}
}

protected final void initHEXT3(String s) {
if (!s.trim().isEmpty()) {
HEXT3 = new Double(s);
} else {
HEXT3 = Double.NaN;
}
}

protected final void initHEXT4(String s) {
if (!s.trim().isEmpty()) {
HEXT4 = new Double(s);
} else {
HEXT4 = Double.NaN;
}
}

protected final void initHFINL_AGGR(String s) {
if (!s.trim().isEmpty()) {
HFINL_AGGR = new Double(s);
} else {
HFINL_AGGR = Double.NaN;
}
}

protected final void initHFINW_EXCENDW_AGGR(String s) {
if (!s.trim().isEmpty()) {
HFINW_EXCENDW_AGGR = new Double(s);
} else {
HFINW_EXCENDW_AGGR = Double.NaN;
}
}

protected final void initHOUSGDSOST_SUM(String s) {
if (!s.trim().isEmpty()) {
HOUSGDSOST_SUM = new Double(s);
} else {
HOUSGDSOST_SUM = Double.NaN;
}
}

protected final void initMARRSV2(String s) {
if (!s.trim().isEmpty()) {
MARRSV2 = new Double(s);
} else {
MARRSV2 = Double.NaN;
}
}

protected final void initMARRSV3(String s) {
if (!s.trim().isEmpty()) {
MARRSV3 = new Double(s);
} else {
MARRSV3 = Double.NaN;
}
}

protected final void initMCHGE(String s) {
if (!s.trim().isEmpty()) {
MCHGE = new Double(s);
} else {
MCHGE = Double.NaN;
}
}

protected final void initMCHGENUM(String s) {
if (!s.trim().isEmpty()) {
MCHGENUM = new Double(s);
} else {
MCHGENUM = Double.NaN;
}
}

protected final void initMENDNUM3_I(String s) {
if (!s.trim().isEmpty()) {
MENDNUM3_I = new Double(s);
} else {
MENDNUM3_I = Double.NaN;
}
}

protected final void initMENDNUM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDNUM3_IFLAG = new Double(s);
} else {
MENDNUM3_IFLAG = Double.NaN;
}
}

protected final void initMENDV5_I(String s) {
if (!s.trim().isEmpty()) {
MENDV5_I = new Double(s);
} else {
MENDV5_I = Double.NaN;
}
}

protected final void initMENDV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV5_IFLAG = new Double(s);
} else {
MENDV5_IFLAG = Double.NaN;
}
}

protected final void initMENDV7_I(String s) {
if (!s.trim().isEmpty()) {
MENDV7_I = new Double(s);
} else {
MENDV7_I = Double.NaN;
}
}

protected final void initMENDV7_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV7_IFLAG = new Double(s);
} else {
MENDV7_IFLAG = Double.NaN;
}
}

protected final void initMENDW2(String s) {
if (!s.trim().isEmpty()) {
MENDW2 = new Double(s);
} else {
MENDW2 = Double.NaN;
}
}

protected final void initMEXTN(String s) {
if (!s.trim().isEmpty()) {
MEXTN = new Double(s);
} else {
MEXTN = Double.NaN;
}
}

protected final void initMEXTRS1(String s) {
if (!s.trim().isEmpty()) {
MEXTRS1 = new Double(s);
} else {
MEXTRS1 = Double.NaN;
}
}

protected final void initMEXTRS2(String s) {
if (!s.trim().isEmpty()) {
MEXTRS2 = new Double(s);
} else {
MEXTRS2 = Double.NaN;
}
}

protected final void initMEXTRS3(String s) {
if (!s.trim().isEmpty()) {
MEXTRS3 = new Double(s);
} else {
MEXTRS3 = Double.NaN;
}
}

protected final void initMNUMBN(String s) {
if (!s.trim().isEmpty()) {
MNUMBN = new Double(s);
} else {
MNUMBN = Double.NaN;
}
}

protected final void initMNUMBO(String s) {
if (!s.trim().isEmpty()) {
MNUMBO = new Double(s);
} else {
MNUMBO = Double.NaN;
}
}

protected final void initMNUMB_I(String s) {
if (!s.trim().isEmpty()) {
MNUMB_I = new Double(s);
} else {
MNUMB_I = Double.NaN;
}
}

protected final void initMNUMB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MNUMB_IFLAG = new Double(s);
} else {
MNUMB_IFLAG = Double.NaN;
}
}

protected final void initMREAS14(String s) {
if (!s.trim().isEmpty()) {
MREAS14 = new Double(s);
} else {
MREAS14 = Double.NaN;
}
}

protected final void initMREAS24(String s) {
if (!s.trim().isEmpty()) {
MREAS24 = new Double(s);
} else {
MREAS24 = Double.NaN;
}
}

protected final void initMW2CHK1(String s) {
if (!s.trim().isEmpty()) {
MW2CHK1 = new Double(s);
} else {
MW2CHK1 = Double.NaN;
}
}

protected final void initMW2CHK2(String s) {
if (!s.trim().isEmpty()) {
MW2CHK2 = new Double(s);
} else {
MW2CHK2 = Double.NaN;
}
}

protected final void initMW2CHK3(String s) {
if (!s.trim().isEmpty()) {
MW2CHK3 = new Double(s);
} else {
MW2CHK3 = Double.NaN;
}
}

protected final void initMYIFCH2(String s) {
if (!s.trim().isEmpty()) {
MYIFCH2 = new Double(s);
} else {
MYIFCH2 = Double.NaN;
}
}

protected final void initMYIFCH3(String s) {
if (!s.trim().isEmpty()) {
MYIFCH3 = new Double(s);
} else {
MYIFCH3 = Double.NaN;
}
}

protected final void initNOUNITS(String s) {
if (!s.trim().isEmpty()) {
NOUNITS = new Double(s);
} else {
NOUNITS = Double.NaN;
}
}

protected final void initNUMDEPCH(String s) {
if (!s.trim().isEmpty()) {
NUMDEPCH = new Double(s);
} else {
NUMDEPCH = Double.NaN;
}
}

protected final void initNUMELCH(String s) {
if (!s.trim().isEmpty()) {
NUMELCH = new Double(s);
} else {
NUMELCH = Double.NaN;
}
}

protected final void initNUMNOELCH(String s) {
if (!s.trim().isEmpty()) {
NUMNOELCH = new Double(s);
} else {
NUMNOELCH = Double.NaN;
}
}

protected final void initOTHMORT_SUM(String s) {
if (!s.trim().isEmpty()) {
OTHMORT_SUM = new Double(s);
} else {
OTHMORT_SUM = Double.NaN;
}
}

protected final void initPHYSBUYLGDST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSBUYLGDST_AGGR = new Double(s);
} else {
PHYSBUYLGDST_AGGR = Double.NaN;
}
}

protected final void initPHYSHOUSGDSOST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSHOUSGDSOST_AGGR = new Double(s);
} else {
PHYSHOUSGDSOST_AGGR = Double.NaN;
}
}

protected final void initPHYSHOUSGDST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSHOUSGDST_AGGR = new Double(s);
} else {
PHYSHOUSGDST_AGGR = Double.NaN;
}
}

protected final void initPRREPAY(String s) {
if (!s.trim().isEmpty()) {
PRREPAY = new Double(s);
} else {
PRREPAY = Double.NaN;
}
}

protected final void initPRREPAY_I(String s) {
if (!s.trim().isEmpty()) {
PRREPAY_I = new Double(s);
} else {
PRREPAY_I = Double.NaN;
}
}

protected final void initPRREPAY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPAY_IFLAG = new Double(s);
} else {
PRREPAY_IFLAG = Double.NaN;
}
}

protected final void initPRREPFIX(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX = new Double(s);
} else {
PRREPFIX = Double.NaN;
}
}

protected final void initPRREPFIX_I(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX_I = new Double(s);
} else {
PRREPFIX_I = Double.NaN;
}
}

protected final void initPRREPFIX_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX_IFLAG = new Double(s);
} else {
PRREPFIX_IFLAG = Double.NaN;
}
}

protected final void initPRREPPC(String s) {
if (!s.trim().isEmpty()) {
PRREPPC = new Double(s);
} else {
PRREPPC = Double.NaN;
}
}

protected final void initPRREPPC_I(String s) {
if (!s.trim().isEmpty()) {
PRREPPC_I = new Double(s);
} else {
PRREPPC_I = Double.NaN;
}
}

protected final void initPRREPPC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPPC_IFLAG = new Double(s);
} else {
PRREPPC_IFLAG = Double.NaN;
}
}

protected final void initSHARAPP(String s) {
if (!s.trim().isEmpty()) {
SHARAPP = new Double(s);
} else {
SHARAPP = Double.NaN;
}
}

protected final void initTOTARR_EXCMORT_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTARR_EXCMORT_AGGR = new Double(s);
} else {
TOTARR_EXCMORT_AGGR = Double.NaN;
}
}

protected final void initTOTBILLARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTBILLARR_AGGR = new Double(s);
} else {
TOTBILLARR_AGGR = Double.NaN;
}
}

protected final void initTOTCC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTCC_AGGR = new Double(s);
} else {
TOTCC_AGGR = Double.NaN;
}
}

protected final void initTOTDVNWFLN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTDVNWFLN_AGGR = new Double(s);
} else {
TOTDVNWFLN_AGGR = Double.NaN;
}
}

protected final void initTOTDVNWILN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTDVNWILN_AGGR = new Double(s);
} else {
TOTDVNWILN_AGGR = Double.NaN;
}
}

protected final void initTOTFLNS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTFLNS_AGGR = new Double(s);
} else {
TOTFLNS_AGGR = Double.NaN;
}
}

protected final void initTOTHPARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTHPARR_AGGR = new Double(s);
} else {
TOTHPARR_AGGR = Double.NaN;
}
}

protected final void initTOTHP_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTHP_AGGR = new Double(s);
} else {
TOTHP_AGGR = Double.NaN;
}
}

protected final void initTOTLNARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLNARR_AGGR = new Double(s);
} else {
TOTLNARR_AGGR = Double.NaN;
}
}

protected final void initTOTLNS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLNS_AGGR = new Double(s);
} else {
TOTLNS_AGGR = Double.NaN;
}
}

protected final void initTOTLOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLOS_AGGR = new Double(s);
} else {
TOTLOS_AGGR = Double.NaN;
}
}

protected final void initTOTMOARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTMOARR_AGGR = new Double(s);
} else {
TOTMOARR_AGGR = Double.NaN;
}
}

protected final void initTOTMO_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTMO_AGGR = new Double(s);
} else {
TOTMO_AGGR = Double.NaN;
}
}

protected final void initTOTNLOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNLOS_AGGR = new Double(s);
} else {
TOTNLOS_AGGR = Double.NaN;
}
}

protected final void initTOTNSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNSLBNK_AGGR = new Double(s);
} else {
TOTNSLBNK_AGGR = Double.NaN;
}
}

protected final void initTOTNSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNSLC_AGGR = new Double(s);
} else {
TOTNSLC_AGGR = Double.NaN;
}
}

protected final void initTOTOSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTOSLBNK_AGGR = new Double(s);
} else {
TOTOSLBNK_AGGR = Double.NaN;
}
}

protected final void initTOTOSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTOSLC_AGGR = new Double(s);
} else {
TOTOSLC_AGGR = Double.NaN;
}
}

protected final void initTOTPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTPEN_AGGR = new Double(s);
} else {
TOTPEN_AGGR = Double.NaN;
}
}

protected final void initTOTSC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSC_AGGR = new Double(s);
} else {
TOTSC_AGGR = Double.NaN;
}
}

protected final void initTOTSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSLBNK_AGGR = new Double(s);
} else {
TOTSLBNK_AGGR = Double.NaN;
}
}

protected final void initTOTSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSLC_AGGR = new Double(s);
} else {
TOTSLC_AGGR = Double.NaN;
}
}

protected final void initVOTPN(String s) {
if (!s.trim().isEmpty()) {
VOTPN = new Double(s);
} else {
VOTPN = Double.NaN;
}
}

protected final void initVPERS_I(String s) {
if (!s.trim().isEmpty()) {
VPERS_I = new Double(s);
} else {
VPERS_I = Double.NaN;
}
}

protected final void initVPERS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VPERS_IFLAG = new Double(s);
} else {
VPERS_IFLAG = Double.NaN;
}
}

public double getBUYLGDST_SUM() {
return BUYLGDST_SUM;
}

public Integer getCASEW2() {
return CASEW2;
}

public Integer getCASEW3() {
return CASEW3;
}

public double getDVBLDDEBT_SUM() {
return DVBLDDEBT_SUM;
}

public double getDVBLDVAL_SUM() {
return DVBLDVAL_SUM;
}

public double getDVBLTDEBT_SUM() {
return DVBLTDEBT_SUM;
}

public double getDVBLTVAL_SUM() {
return DVBLTVAL_SUM;
}

public double getDVCACRVAL_AGGR() {
return DVCACRVAL_AGGR;
}

public double getDVCACTV_AGGR() {
return DVCACTV_AGGR;
}

public double getDVCAODVAL_AGGR() {
return DVCAODVAL_AGGR;
}

public double getDVCASVV_AGGR() {
return DVCASVV_AGGR;
}

public double getDVCAVAL_AGGR() {
return DVCAVAL_AGGR;
}

public double getDVCISAV_AGGR() {
return DVCISAV_AGGR;
}

public double getDVDBRWEALTHVAL_AGGR() {
return DVDBRWEALTHVAL_AGGR;
}

public double getDVEQLTM() {
return DVEQLTM;
}

public double getDVEQPRUN() {
return DVEQPRUN;
}

public double getDVEQSRB() {
return DVEQSRB;
}

public double getDVERECGROSSANNUAL() {
return DVERECGROSSANNUAL;
}

public double getDVERECNETANNUAL() {
return DVERECNETANNUAL;
}

public double getDVERVRECGROSSANNUAL() {
return DVERVRECGROSSANNUAL;
}

public double getDVERVRECNETANNUAL() {
return DVERVRECNETANNUAL;
}

public double getDVFBONDV_AGGR() {
return DVFBONDV_AGGR;
}

public double getDVFCOLLV_AGGR() {
return DVFCOLLV_AGGR;
}

public double getDVFEOPTV_AGGR() {
return DVFEOPTV_AGGR;
}

public double getDVFESHARES_AGGR() {
return DVFESHARES_AGGR;
}

public double getDVFESHAV_AGGR() {
return DVFESHAV_AGGR;
}

public double getDVFFASSETS_AGGR() {
return DVFFASSETS_AGGR;
}

public double getDVFGLTFOV_AGGR() {
return DVFGLTFOV_AGGR;
}

public double getDVFGLTUKV_AGGR() {
return DVFGLTUKV_AGGR;
}

public double getDVFINFLV_AGGR() {
return DVFINFLV_AGGR;
}

public double getDVFINFVAL_AGGR() {
return DVFINFVAL_AGGR;
}

public double getDVFINFV_AGGR() {
return DVFINFV_AGGR;
}

public double getDVFINVOTV_AGGR() {
return DVFINVOTV_AGGR;
}

public double getDVFLFENV_AGGR() {
return DVFLFENV_AGGR;
}

public double getDVFLFFSV_AGGR() {
return DVFLFFSV_AGGR;
}

public double getDVFLFSIV_AGGR() {
return DVFLFSIV_AGGR;
}

public double getDVFLFTEV_AGGR() {
return DVFLFTEV_AGGR;
}

public double getDVFNSVAL_AGGR() {
return DVFNSVAL_AGGR;
}

public double getDVFSHOSV_AGGR() {
return DVFSHOSV_AGGR;
}

public double getDVFSHUKV_AGGR() {
return DVFSHUKV_AGGR;
}

public double getDVGIEMP_AGGR() {
return DVGIEMP_AGGR;
}

public double getDVGIINV_AGGR() {
return DVGIINV_AGGR;
}

public double getDVGIOTHR_AGGR() {
return DVGIOTHR_AGGR;
}

public double getDVGIPPEN_AGGR() {
return DVGIPPEN_AGGR;
}

public double getDVGISE_AGGR() {
return DVGISE_AGGR;
}

public double getDVGRSRENTAMTANNUAL_AGGR() {
return DVGRSRENTAMTANNUAL_AGGR;
}

public double getDVHSEDEBT_SUM() {
return DVHSEDEBT_SUM;
}

public double getDVHSEVAL_SUM() {
return DVHSEVAL_SUM;
}

public double getDVIISAV_AGGR() {
return DVIISAV_AGGR;
}

public double getDVINSV_AGGR() {
return DVINSV_AGGR;
}

public double getDVISAVAL_AGGR() {
return DVISAVAL_AGGR;
}

public double getDVKISAV_AGGR() {
return DVKISAV_AGGR;
}

public double getDVLOSDEBT_SUM() {
return DVLOSDEBT_SUM;
}

public double getDVLOSVAL_SUM() {
return DVLOSVAL_SUM;
}

public double getDVLUKDEBT_SUM() {
return DVLUKDEBT_SUM;
}

public double getDVLUKVAL_SUM() {
return DVLUKVAL_SUM;
}

public double getDVNETRENTAMTANNUAL_AGGR() {
return DVNETRENTAMTANNUAL_AGGR;
}

public double getDVNIEMP_AGGR() {
return DVNIEMP_AGGR;
}

public double getDVNIINV_AGGR() {
return DVNIINV_AGGR;
}

public double getDVNIOTHI_AGGR() {
return DVNIOTHI_AGGR;
}

public double getDVNIOTHR_AGGR() {
return DVNIOTHR_AGGR;
}

public double getDVNIPPEN_AGGR() {
return DVNIPPEN_AGGR;
}

public double getDVNISE_AGGR() {
return DVNISE_AGGR;
}

public double getDVOIGEGANNUAL_AGGR() {
return DVOIGEGANNUAL_AGGR;
}

public double getDVOIGFRANNUAL_AGGR() {
return DVOIGFRANNUAL_AGGR;
}

public double getDVOIGGTANNUAL_AGGR() {
return DVOIGGTANNUAL_AGGR;
}

public double getDVOIGMAANNUAL_AGGR() {
return DVOIGMAANNUAL_AGGR;
}

public double getDVOIGOPANNUAL_AGGR() {
return DVOIGOPANNUAL_AGGR;
}

public double getDVOIGROANNUAL_AGGR() {
return DVOIGROANNUAL_AGGR;
}

public double getDVOIGRRANNUAL_AGGR() {
return DVOIGRRANNUAL_AGGR;
}

public double getDVOINEGANNUAL_AGGR() {
return DVOINEGANNUAL_AGGR;
}

public double getDVOINFRANNUAL_AGGR() {
return DVOINFRANNUAL_AGGR;
}

public double getDVOINGTANNUAL_AGGR() {
return DVOINGTANNUAL_AGGR;
}

public double getDVOINMAANNUAL_AGGR() {
return DVOINMAANNUAL_AGGR;
}

public double getDVOINOPANNUAL_AGGR() {
return DVOINOPANNUAL_AGGR;
}

public double getDVOINROANNUAL_AGGR() {
return DVOINROANNUAL_AGGR;
}

public double getDVOINRRANNUAL_AGGR() {
return DVOINRRANNUAL_AGGR;
}

public double getDVOPRDEBT_SUM() {
return DVOPRDEBT_SUM;
}

public double getDVOPRVAL_SUM() {
return DVOPRVAL_SUM;
}

public double getDVPAVCUV_AGGR() {
return DVPAVCUV_AGGR;
}

public double getDVPFCURVAL_AGGR() {
return DVPFCURVAL_AGGR;
}

public double getDVPFDDV_AGGR() {
return DVPFDDV_AGGR;
}

public double getDVPINPVAL_AGGR() {
return DVPINPVAL_AGGR;
}

public double getDVPPVAL_AGGR() {
return DVPPVAL_AGGR;
}

public double getDVSAVAL_AGGR() {
return DVSAVAL_AGGR;
}

public double getDVSPEN_AGGR() {
return DVSPEN_AGGR;
}

public double getDVTOTGIR() {
return DVTOTGIR;
}

public double getDVTOTNIR() {
return DVTOTNIR;
}

public double getDVVALDBT_AGGR() {
return DVVALDBT_AGGR;
}

public double getDVVALDCOS_AGGR() {
return DVVALDCOS_AGGR;
}

public double getEINT() {
return EINT;
}

public double getEINTFIX() {
return EINTFIX;
}

public double getEINT_I() {
return EINT_I;
}

public double getEINT_IFLAG() {
return EINT_IFLAG;
}

public double getEMSARR() {
return EMSARR;
}

public double getEMSPAY() {
return EMSPAY;
}

public double getEQDRAW() {
return EQDRAW;
}

public double getEQDRAW_I() {
return EQDRAW_I;
}

public double getEQDRAW_IFLAG() {
return EQDRAW_IFLAG;
}

public double getEQNEW() {
return EQNEW;
}

public double getEQOLD() {
return EQOLD;
}

public double getEQTYPE1() {
return EQTYPE1;
}

public double getEQTYPE1_I() {
return EQTYPE1_I;
}

public double getEQTYPE1_IFLAG() {
return EQTYPE1_IFLAG;
}

public double getEQTYPE2() {
return EQTYPE2;
}

public double getEQUITY_YN_I() {
return EQUITY_YN_I;
}

public double getEQUITY_YN_IFLAG() {
return EQUITY_YN_IFLAG;
}

public double getEQVALDR() {
return EQVALDR;
}

public double getEQVALDRB() {
return EQVALDRB;
}

public double getEQWHENM() {
return EQWHENM;
}

public double getEQWHENY() {
return EQWHENY;
}

public double getEREC() {
return EREC;
}

public double getERECMBY() {
return ERECMBY;
}

public double getERECMPD() {
return ERECMPD;
}

public double getERVRECBY() {
return ERVRECBY;
}

public double getERVRECPD() {
return ERVRECPD;
}

public double getERVREG1() {
return ERVREG1;
}

public double getERVREG2() {
return ERVREG2;
}

public double getESHARAPP() {
return ESHARAPP;
}

public double getFRREPFIX() {
return FRREPFIX;
}

public double getGCONTVLS() {
return GCONTVLS;
}

public double getHEXT1() {
return HEXT1;
}

public double getHEXT2() {
return HEXT2;
}

public double getHEXT3() {
return HEXT3;
}

public double getHEXT4() {
return HEXT4;
}

public double getHFINL_AGGR() {
return HFINL_AGGR;
}

public double getHFINW_EXCENDW_AGGR() {
return HFINW_EXCENDW_AGGR;
}

public double getHOUSGDSOST_SUM() {
return HOUSGDSOST_SUM;
}

public double getMARRSV2() {
return MARRSV2;
}

public double getMARRSV3() {
return MARRSV3;
}

public double getMCHGE() {
return MCHGE;
}

public double getMCHGENUM() {
return MCHGENUM;
}

public double getMENDNUM3_I() {
return MENDNUM3_I;
}

public double getMENDNUM3_IFLAG() {
return MENDNUM3_IFLAG;
}

public double getMENDV5_I() {
return MENDV5_I;
}

public double getMENDV5_IFLAG() {
return MENDV5_IFLAG;
}

public double getMENDV7_I() {
return MENDV7_I;
}

public double getMENDV7_IFLAG() {
return MENDV7_IFLAG;
}

public double getMENDW2() {
return MENDW2;
}

public double getMEXTN() {
return MEXTN;
}

public double getMEXTRS1() {
return MEXTRS1;
}

public double getMEXTRS2() {
return MEXTRS2;
}

public double getMEXTRS3() {
return MEXTRS3;
}

public double getMNUMBN() {
return MNUMBN;
}

public double getMNUMBO() {
return MNUMBO;
}

public double getMNUMB_I() {
return MNUMB_I;
}

public double getMNUMB_IFLAG() {
return MNUMB_IFLAG;
}

public double getMREAS14() {
return MREAS14;
}

public double getMREAS24() {
return MREAS24;
}

public double getMW2CHK1() {
return MW2CHK1;
}

public double getMW2CHK2() {
return MW2CHK2;
}

public double getMW2CHK3() {
return MW2CHK3;
}

public double getMYIFCH2() {
return MYIFCH2;
}

public double getMYIFCH3() {
return MYIFCH3;
}

public double getNOUNITS() {
return NOUNITS;
}

public double getNUMDEPCH() {
return NUMDEPCH;
}

public double getNUMELCH() {
return NUMELCH;
}

public double getNUMNOELCH() {
return NUMNOELCH;
}

public double getOTHMORT_SUM() {
return OTHMORT_SUM;
}

public double getPHYSBUYLGDST_AGGR() {
return PHYSBUYLGDST_AGGR;
}

public double getPHYSHOUSGDSOST_AGGR() {
return PHYSHOUSGDSOST_AGGR;
}

public double getPHYSHOUSGDST_AGGR() {
return PHYSHOUSGDST_AGGR;
}

public double getPRREPAY() {
return PRREPAY;
}

public double getPRREPAY_I() {
return PRREPAY_I;
}

public double getPRREPAY_IFLAG() {
return PRREPAY_IFLAG;
}

public double getPRREPFIX() {
return PRREPFIX;
}

public double getPRREPFIX_I() {
return PRREPFIX_I;
}

public double getPRREPFIX_IFLAG() {
return PRREPFIX_IFLAG;
}

public double getPRREPPC() {
return PRREPPC;
}

public double getPRREPPC_I() {
return PRREPPC_I;
}

public double getPRREPPC_IFLAG() {
return PRREPPC_IFLAG;
}

public double getSHARAPP() {
return SHARAPP;
}

public double getTOTARR_EXCMORT_AGGR() {
return TOTARR_EXCMORT_AGGR;
}

public double getTOTBILLARR_AGGR() {
return TOTBILLARR_AGGR;
}

public double getTOTCC_AGGR() {
return TOTCC_AGGR;
}

public double getTOTDVNWFLN_AGGR() {
return TOTDVNWFLN_AGGR;
}

public double getTOTDVNWILN_AGGR() {
return TOTDVNWILN_AGGR;
}

public double getTOTFLNS_AGGR() {
return TOTFLNS_AGGR;
}

public double getTOTHPARR_AGGR() {
return TOTHPARR_AGGR;
}

public double getTOTHP_AGGR() {
return TOTHP_AGGR;
}

public double getTOTLNARR_AGGR() {
return TOTLNARR_AGGR;
}

public double getTOTLNS_AGGR() {
return TOTLNS_AGGR;
}

public double getTOTLOS_AGGR() {
return TOTLOS_AGGR;
}

public double getTOTMOARR_AGGR() {
return TOTMOARR_AGGR;
}

public double getTOTMO_AGGR() {
return TOTMO_AGGR;
}

public double getTOTNLOS_AGGR() {
return TOTNLOS_AGGR;
}

public double getTOTNSLBNK_AGGR() {
return TOTNSLBNK_AGGR;
}

public double getTOTNSLC_AGGR() {
return TOTNSLC_AGGR;
}

public double getTOTOSLBNK_AGGR() {
return TOTOSLBNK_AGGR;
}

public double getTOTOSLC_AGGR() {
return TOTOSLC_AGGR;
}

public double getTOTPEN_AGGR() {
return TOTPEN_AGGR;
}

public double getTOTSC_AGGR() {
return TOTSC_AGGR;
}

public double getTOTSLBNK_AGGR() {
return TOTSLBNK_AGGR;
}

public double getTOTSLC_AGGR() {
return TOTSLC_AGGR;
}

public double getVOTPN() {
return VOTPN;
}

public double getVPERS_I() {
return VPERS_I;
}

public double getVPERS_IFLAG() {
return VPERS_IFLAG;
}

}
