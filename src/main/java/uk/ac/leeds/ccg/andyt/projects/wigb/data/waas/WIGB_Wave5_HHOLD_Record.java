/**
 * This code has been generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas;
public class WIGB_Wave5_HHOLD_Record extends WIGB_Wave4Or5_HHOLD_Record {
protected static Double BRIDLN1;

protected static Double BRIDLN2;

protected static Double BRIDLN3;

protected static Double BUYLGDST_SUM;

protected static Double CASEW2;

protected static Double CASEW3;

protected static Double CASEW4;

protected static Double CASEW5;

protected static Double DVBENEFITANNUAL_AGGR;

protected static Double DVBLDDEBT_SUM;

protected static Double DVBLDVAL_SUM;

protected static Double DVBLTDEBT_SUM;

protected static Double DVBLTVAL_SUM;

protected static Double DVCACRVAL_AGGR;

protected static Double DVCACTV_AGGR;

protected static Double DVCAODVAL_AGGR;

protected static Double DVCASVV_AGGR;

protected static Double DVCAVAL_AGGR;

protected static Double DVCISAV_AGGR;

protected static Double DVDBRWEALTHVAL_AGGR;

protected static Double DVEQLTM;

protected static Double DVEQPRUN;

protected static Double DVEQSRB;

protected static Double DVERECGROSSANNUAL;

protected static Double DVERECNETANNUAL;

protected static Double DVERVRECGROSSANNUAL;

protected static Double DVERVRECNETANNUAL;

protected static Double DVFBONDV_AGGR;

protected static Double DVFCOLLV_AGGR;

protected static Double DVFEOPTV_AGGR;

protected static Double DVFESHARES_AGGR;

protected static Double DVFESHAV_AGGR;

protected static Double DVFFASSETS_AGGR;

protected static Double DVFGLTFOV_AGGR;

protected static Double DVFGLTUKV_AGGR;

protected static Double DVFINFLV_AGGR;

protected static Double DVFINFVAL_AGGR;

protected static Double DVFINFV_AGGR;

protected static Double DVFINVOTV_AGGR;

protected static Double DVFLFENV_AGGR;

protected static Double DVFLFFSV_AGGR;

protected static Double DVFLFSIV_AGGR;

protected static Double DVFLFTEV_AGGR;

protected static Double DVFNSVAL_AGGR;

protected static Double DVFSHOSV_AGGR;

protected static Double DVFSHUKV_AGGR;

protected static Double DVGIEMP_AGGR;

protected static Double DVGIINV_AGGR;

protected static Double DVGIOTHR_AGGR;

protected static Double DVGIPPEN_AGGR;

protected static Double DVGISE_AGGR;

protected static Double DVGRSRENTAMTANNUAL_AGGR;

protected static Double DVHSEDEBT_SUM;

protected static Double DVHSEVAL_SUM;

protected static Double DVIISAV_AGGR;

protected static Double DVINSV_AGGR;

protected static Double DVISAVAL_AGGR;

protected static Double DVKISAV_AGGR;

protected static Double DVLOSDEBT_SUM;

protected static Double DVLOSVAL_SUM;

protected static Double DVLUKDEBT_SUM;

protected static Double DVLUKVAL_SUM;

protected static Double DVNETRENTAMTANNUAL_AGGR;

protected static Double DVNIEMP_AGGR;

protected static Double DVNIINV_AGGR;

protected static Double DVNIOTHI_AGGR;

protected static Double DVNIOTHR_AGGR;

protected static Double DVNIPPEN_AGGR;

protected static Double DVNISE_AGGR;

protected static Double DVOIGEGANNUAL_AGGR;

protected static Double DVOIGFRANNUAL_AGGR;

protected static Double DVOIGGTANNUAL_AGGR;

protected static Double DVOIGMAANNUAL_AGGR;

protected static Double DVOIGOPANNUAL_AGGR;

protected static Double DVOIGROANNUAL_AGGR;

protected static Double DVOIGRRANNUAL_AGGR;

protected static Double DVOINEGANNUAL_AGGR;

protected static Double DVOINFRANNUAL_AGGR;

protected static Double DVOINGTANNUAL_AGGR;

protected static Double DVOINMAANNUAL_AGGR;

protected static Double DVOINOPANNUAL_AGGR;

protected static Double DVOINROANNUAL_AGGR;

protected static Double DVOINRRANNUAL_AGGR;

protected static Double DVOPRDEBT_SUM;

protected static Double DVOPRVAL_SUM;

protected static Double DVPAVCUV_AGGR;

protected static Double DVPFCURVAL_AGGR;

protected static Double DVPFDDV_AGGR;

protected static Double DVPINPVAL_AGGR;

protected static Double DVPPVAL_AGGR;

protected static Double DVSAVAL_AGGR;

protected static Double DVSPEN_AGGR;

protected static Double DVTOTGIR;

protected static Double DVTOTGIR_3SF;

protected static Double DVTOTNIR;

protected static Double DVVALDBT_AGGR;

protected static Double DVVALDCOS_AGGR;

protected static Double EINT;

protected static Double EINTFIX;

protected static Double EINT_I;

protected static Double EINT_IFLAG;

protected static Double EMSARR;

protected static Double EMSPAY;

protected static Double EQDRAW;

protected static Double EQDRAW_I;

protected static Double EQDRAW_IFLAG;

protected static Double EQNEW;

protected static Double EQOLD;

protected static Double EQTYPE1;

protected static Double EQTYPE1_I;

protected static Double EQTYPE1_IFLAG;

protected static Double EQTYPE2;

protected static Double EQUITY_YN_I;

protected static Double EQUITY_YN_IFLAG;

protected static Double EQVALB_I;

protected static Double EQVALB_IFLAG;

protected static Double EQVALDR;

protected static Double EQVALDRB;

protected static Double EQWHENM;

protected static Double EQWHENY;

protected static Double EREC;

protected static Double ERECMBY;

protected static Double ERECMPD;

protected static Double ERVRECBY;

protected static Double ERVRECPD;

protected static Double ERVREG1;

protected static Double ERVREG2;

protected static Double ESHARAPP;

protected static Double FRREPFIX;

protected static Double GCONTVLS;

protected static Double HEXT1;

protected static Double HEXT2;

protected static Double HEXT3;

protected static Double HEXT4;

protected static Double HFINL_AGGR;

protected static Double HFINW_EXCENDW_AGGR;

protected static Double HOUSGDSOST_SUM;

protected static Double HRPDVAGE;

protected static Double HRPDVECACT;

protected static Double HRPIOUT1;

protected static Double HRPPARTIOUT1;

protected static Double MALL1;

protected static Double MALL1_I;

protected static Double MALL1_IFLAG;

protected static Double MALLTY1;

protected static Double MALLTY1_I;

protected static Double MALLTY1_IFLAG;

protected static Double MARR2YR1;

protected static Double MARR2YR2;

protected static Double MARR2YR3;

protected static Double MARRCL01;

protected static Double MARRCL02;

protected static Double MARRCL12;

protected static Double MARRS1;

protected static Double MARRSV1;

protected static Double MARRSV2;

protected static Double MARRSV3;

protected static Double MCHGE;

protected static Double MCHGENUM;

protected static Double MENDNUM1;

protected static Double MENDNUM1_I;

protected static Double MENDNUM1_IFLAG;

protected static Double MENDNUM3_I;

protected static Double MENDNUM3_IFLAG;

protected static Double MENDV1;

protected static Double MENDV10_I;

protected static Double MENDV10_IFLAG;

protected static Double MENDV11_I;

protected static Double MENDV11_IFLAG;

protected static Double MENDV1_I;

protected static Double MENDV1_IFLAG;

protected static Double MENDV5_I;

protected static Double MENDV5_IFLAG;

protected static Double MENDV7_I;

protected static Double MENDV7_IFLAG;

protected static Double MENDVB1;

protected static Double MENDVB11_I;

protected static Double MENDVB11_IFLAG;

protected static Double MENDVB1_I;

protected static Double MENDVB1_IFLAG;

protected static Double MENDVB2_I;

protected static Double MENDVB2_IFLAG;

protected static Double MENDVB3_I;

protected static Double MENDVB3_IFLAG;

protected static Double MENDVB4_I;

protected static Double MENDVB4_IFLAG;

protected static Double MENDVB5_I;

protected static Double MENDVB5_IFLAG;

protected static Double MENDVB6_I;

protected static Double MENDVB6_IFLAG;

protected static Double MENDVB7_I;

protected static Double MENDVB7_IFLAG;

protected static Double MENDVB8;

protected static Double MENDVB8_I;

protected static Double MENDVB8_IFLAG;

protected static Double MENDVB9_I;

protected static Double MENDVB9_IFLAG;

protected static Double MENDW1;

protected static Double MENDW1_I;

protected static Double MENDW1_IFLAG;

protected static Double MENDW2;

protected static Double MENDW3;

protected static Double MENDX1;

protected static Double MENDY1;

protected static Double MENDY8;

protected static Double MEXTN;

protected static Double MEXTRS1;

protected static Double MEXTRS2;

protected static Double MEXTRS3;

protected static Double MHOWPY1;

protected static Double MINTFIX1;

protected static Double MINTFIX2;

protected static Double MINTFIX3;

protected static Double MINTPAID1;

protected static Double MINTPAID2;

protected static Double MINTPAID3;

protected static Double MINTRATE1;

protected static Double MINTRATE2;

protected static Double MINTRATE3;

protected static Double MINVW1;

protected static Double MINVW2;

protected static Double MINVW3;

protected static Double MNAME1;

protected static Double MNEG1;

protected static Double MNEG1_I;

protected static Double MNEG1_IFLAG;

protected static Double MNEGB1;

protected static Double MNUMBN;

protected static Double MNUMBO;

protected static Double MNUMB_I;

protected static Double MNUMB_IFLAG;

protected static Double MONAME1;

protected static Double MONTHW1;

protected static Double MONTHW2;

protected static Double MONTHW3;

protected static Double MONTHW4;

protected static Double MPASTSPA1;

protected static Double MPASTSPA2;

protected static Double MPASTSPA3;

protected static Double MPAYB1;

protected static Double MPAYM1;

protected static Double MPOLICY1;

protected static Double MPOLICY2;

protected static Double MPP1;

protected static Double MREAS14;

protected static Double MREAS24;

protected static Double MTYPE1;

protected static Double MTYPE1_I;

protected static Double MTYPE1_IFLAG;

protected static Double MVAL1;

protected static Double MVAL1_I;

protected static Double MVAL1_IFLAG;

protected static Double MVALB1;

protected static Double MW2CHK1;

protected static Double MW2CHK2;

protected static Double MW2CHK3;

protected static Double MYIFCH1;

protected static Double MYIFCH2;

protected static Double MYIFCH3;

protected static Double MYLFT1;

protected static Double MYPASTSPA1;

protected static Double MYPASTSPA2;

protected static Double MYPASTSPA3;

protected static Double NOUNITS;

protected static Double NUMADISW;

protected static Double NUMDEPCH;

protected static Double NUMELCH;

protected static Double NUMNOELCH;

protected static Double OTHMORT_SUM;

protected static Double PHYSBUYLGDST_AGGR;

protected static Double PHYSHOUSGDSOST_AGGR;

protected static Double PHYSHOUSGDST_AGGR;

protected static Double PRREPAY;

protected static Double PRREPAY_I;

protected static Double PRREPAY_IFLAG;

protected static Double PRREPFIX;

protected static Double PRREPFIX_I;

protected static Double PRREPFIX_IFLAG;

protected static Double PRREPPC;

protected static Double PRREPPC_I;

protected static Double PRREPPC_IFLAG;

protected static Double SHARAPP;

protected static Double TOTARR_EXCMORT_AGGR;

protected static Double TOTBILLARR_AGGR;

protected static Double TOTCC_AGGR;

protected static Double TOTDVNWFLN_AGGR;

protected static Double TOTDVNWILN_AGGR;

protected static Double TOTFLNS_AGGR;

protected static Double TOTHPARR_AGGR;

protected static Double TOTHP_AGGR;

protected static Double TOTLNARR_AGGR;

protected static Double TOTLNS_AGGR;

protected static Double TOTLOS_AGGR;

protected static Double TOTMOARR_AGGR;

protected static Double TOTMO_AGGR;

protected static Double TOTNLOS_AGGR;

protected static Double TOTNSLBNK_AGGR;

protected static Double TOTNSLC_AGGR;

protected static Double TOTOSLBNK_AGGR;

protected static Double TOTOSLC_AGGR;

protected static Double TOTPEN_AGGR;

protected static Double TOTSC_AGGR;

protected static Double TOTSLBNK_AGGR;

protected static Double TOTSLC_AGGR;

protected static Double VESTVTOTAL;

protected static Double VESTVTOTALB;

protected static Double VESTVTOTALB_I;

protected static Double VESTVTOTALB_IFLAG;

protected static Double VESTVTOTAL_I;

protected static Double VESTVTOTAL_IFLAG;

protected static Double VOTPN;

protected static Double VOTYP_IFLAG;

protected static Double VOVLB_I;

protected static Double VOVLB_IFLAG;

protected static Double VPERS_I;

protected static Double VPERS_IFLAG;

protected static Double VTYPE1;

protected static Double VTYPE1_I;

protected static Double VTYPE3;

protected static Double VTYPE3_I;

protected static Double W5XSHHWGT;

protected static Double YEARW1;

protected static Double YEARW2;

protected static Double YEARW3;

protected static Double YEARW4;

public Double getBRIDLN1() {
return BRIDLN1;
}

public Double getBRIDLN2() {
return BRIDLN2;
}

public Double getBRIDLN3() {
return BRIDLN3;
}

public Double getBUYLGDST_SUM() {
return BUYLGDST_SUM;
}

public Double getCASEW2() {
return CASEW2;
}

public Double getCASEW3() {
return CASEW3;
}

public Double getCASEW4() {
return CASEW4;
}

public Double getCASEW5() {
return CASEW5;
}

public Double getDVBENEFITANNUAL_AGGR() {
return DVBENEFITANNUAL_AGGR;
}

public Double getDVBLDDEBT_SUM() {
return DVBLDDEBT_SUM;
}

public Double getDVBLDVAL_SUM() {
return DVBLDVAL_SUM;
}

public Double getDVBLTDEBT_SUM() {
return DVBLTDEBT_SUM;
}

public Double getDVBLTVAL_SUM() {
return DVBLTVAL_SUM;
}

public Double getDVCACRVAL_AGGR() {
return DVCACRVAL_AGGR;
}

public Double getDVCACTV_AGGR() {
return DVCACTV_AGGR;
}

public Double getDVCAODVAL_AGGR() {
return DVCAODVAL_AGGR;
}

public Double getDVCASVV_AGGR() {
return DVCASVV_AGGR;
}

public Double getDVCAVAL_AGGR() {
return DVCAVAL_AGGR;
}

public Double getDVCISAV_AGGR() {
return DVCISAV_AGGR;
}

public Double getDVDBRWEALTHVAL_AGGR() {
return DVDBRWEALTHVAL_AGGR;
}

public Double getDVEQLTM() {
return DVEQLTM;
}

public Double getDVEQPRUN() {
return DVEQPRUN;
}

public Double getDVEQSRB() {
return DVEQSRB;
}

public Double getDVERECGROSSANNUAL() {
return DVERECGROSSANNUAL;
}

public Double getDVERECNETANNUAL() {
return DVERECNETANNUAL;
}

public Double getDVERVRECGROSSANNUAL() {
return DVERVRECGROSSANNUAL;
}

public Double getDVERVRECNETANNUAL() {
return DVERVRECNETANNUAL;
}

public Double getDVFBONDV_AGGR() {
return DVFBONDV_AGGR;
}

public Double getDVFCOLLV_AGGR() {
return DVFCOLLV_AGGR;
}

public Double getDVFEOPTV_AGGR() {
return DVFEOPTV_AGGR;
}

public Double getDVFESHARES_AGGR() {
return DVFESHARES_AGGR;
}

public Double getDVFESHAV_AGGR() {
return DVFESHAV_AGGR;
}

public Double getDVFFASSETS_AGGR() {
return DVFFASSETS_AGGR;
}

public Double getDVFGLTFOV_AGGR() {
return DVFGLTFOV_AGGR;
}

public Double getDVFGLTUKV_AGGR() {
return DVFGLTUKV_AGGR;
}

public Double getDVFINFLV_AGGR() {
return DVFINFLV_AGGR;
}

public Double getDVFINFVAL_AGGR() {
return DVFINFVAL_AGGR;
}

public Double getDVFINFV_AGGR() {
return DVFINFV_AGGR;
}

public Double getDVFINVOTV_AGGR() {
return DVFINVOTV_AGGR;
}

public Double getDVFLFENV_AGGR() {
return DVFLFENV_AGGR;
}

public Double getDVFLFFSV_AGGR() {
return DVFLFFSV_AGGR;
}

public Double getDVFLFSIV_AGGR() {
return DVFLFSIV_AGGR;
}

public Double getDVFLFTEV_AGGR() {
return DVFLFTEV_AGGR;
}

public Double getDVFNSVAL_AGGR() {
return DVFNSVAL_AGGR;
}

public Double getDVFSHOSV_AGGR() {
return DVFSHOSV_AGGR;
}

public Double getDVFSHUKV_AGGR() {
return DVFSHUKV_AGGR;
}

public Double getDVGIEMP_AGGR() {
return DVGIEMP_AGGR;
}

public Double getDVGIINV_AGGR() {
return DVGIINV_AGGR;
}

public Double getDVGIOTHR_AGGR() {
return DVGIOTHR_AGGR;
}

public Double getDVGIPPEN_AGGR() {
return DVGIPPEN_AGGR;
}

public Double getDVGISE_AGGR() {
return DVGISE_AGGR;
}

public Double getDVGRSRENTAMTANNUAL_AGGR() {
return DVGRSRENTAMTANNUAL_AGGR;
}

public Double getDVHSEDEBT_SUM() {
return DVHSEDEBT_SUM;
}

public Double getDVHSEVAL_SUM() {
return DVHSEVAL_SUM;
}

public Double getDVIISAV_AGGR() {
return DVIISAV_AGGR;
}

public Double getDVINSV_AGGR() {
return DVINSV_AGGR;
}

public Double getDVISAVAL_AGGR() {
return DVISAVAL_AGGR;
}

public Double getDVKISAV_AGGR() {
return DVKISAV_AGGR;
}

public Double getDVLOSDEBT_SUM() {
return DVLOSDEBT_SUM;
}

public Double getDVLOSVAL_SUM() {
return DVLOSVAL_SUM;
}

public Double getDVLUKDEBT_SUM() {
return DVLUKDEBT_SUM;
}

public Double getDVLUKVAL_SUM() {
return DVLUKVAL_SUM;
}

public Double getDVNETRENTAMTANNUAL_AGGR() {
return DVNETRENTAMTANNUAL_AGGR;
}

public Double getDVNIEMP_AGGR() {
return DVNIEMP_AGGR;
}

public Double getDVNIINV_AGGR() {
return DVNIINV_AGGR;
}

public Double getDVNIOTHI_AGGR() {
return DVNIOTHI_AGGR;
}

public Double getDVNIOTHR_AGGR() {
return DVNIOTHR_AGGR;
}

public Double getDVNIPPEN_AGGR() {
return DVNIPPEN_AGGR;
}

public Double getDVNISE_AGGR() {
return DVNISE_AGGR;
}

public Double getDVOIGEGANNUAL_AGGR() {
return DVOIGEGANNUAL_AGGR;
}

public Double getDVOIGFRANNUAL_AGGR() {
return DVOIGFRANNUAL_AGGR;
}

public Double getDVOIGGTANNUAL_AGGR() {
return DVOIGGTANNUAL_AGGR;
}

public Double getDVOIGMAANNUAL_AGGR() {
return DVOIGMAANNUAL_AGGR;
}

public Double getDVOIGOPANNUAL_AGGR() {
return DVOIGOPANNUAL_AGGR;
}

public Double getDVOIGROANNUAL_AGGR() {
return DVOIGROANNUAL_AGGR;
}

public Double getDVOIGRRANNUAL_AGGR() {
return DVOIGRRANNUAL_AGGR;
}

public Double getDVOINEGANNUAL_AGGR() {
return DVOINEGANNUAL_AGGR;
}

public Double getDVOINFRANNUAL_AGGR() {
return DVOINFRANNUAL_AGGR;
}

public Double getDVOINGTANNUAL_AGGR() {
return DVOINGTANNUAL_AGGR;
}

public Double getDVOINMAANNUAL_AGGR() {
return DVOINMAANNUAL_AGGR;
}

public Double getDVOINOPANNUAL_AGGR() {
return DVOINOPANNUAL_AGGR;
}

public Double getDVOINROANNUAL_AGGR() {
return DVOINROANNUAL_AGGR;
}

public Double getDVOINRRANNUAL_AGGR() {
return DVOINRRANNUAL_AGGR;
}

public Double getDVOPRDEBT_SUM() {
return DVOPRDEBT_SUM;
}

public Double getDVOPRVAL_SUM() {
return DVOPRVAL_SUM;
}

public Double getDVPAVCUV_AGGR() {
return DVPAVCUV_AGGR;
}

public Double getDVPFCURVAL_AGGR() {
return DVPFCURVAL_AGGR;
}

public Double getDVPFDDV_AGGR() {
return DVPFDDV_AGGR;
}

public Double getDVPINPVAL_AGGR() {
return DVPINPVAL_AGGR;
}

public Double getDVPPVAL_AGGR() {
return DVPPVAL_AGGR;
}

public Double getDVSAVAL_AGGR() {
return DVSAVAL_AGGR;
}

public Double getDVSPEN_AGGR() {
return DVSPEN_AGGR;
}

public Double getDVTOTGIR() {
return DVTOTGIR;
}

public Double getDVTOTGIR_3SF() {
return DVTOTGIR_3SF;
}

public Double getDVTOTNIR() {
return DVTOTNIR;
}

public Double getDVVALDBT_AGGR() {
return DVVALDBT_AGGR;
}

public Double getDVVALDCOS_AGGR() {
return DVVALDCOS_AGGR;
}

public Double getEINT() {
return EINT;
}

public Double getEINTFIX() {
return EINTFIX;
}

public Double getEINT_I() {
return EINT_I;
}

public Double getEINT_IFLAG() {
return EINT_IFLAG;
}

public Double getEMSARR() {
return EMSARR;
}

public Double getEMSPAY() {
return EMSPAY;
}

public Double getEQDRAW() {
return EQDRAW;
}

public Double getEQDRAW_I() {
return EQDRAW_I;
}

public Double getEQDRAW_IFLAG() {
return EQDRAW_IFLAG;
}

public Double getEQNEW() {
return EQNEW;
}

public Double getEQOLD() {
return EQOLD;
}

public Double getEQTYPE1() {
return EQTYPE1;
}

public Double getEQTYPE1_I() {
return EQTYPE1_I;
}

public Double getEQTYPE1_IFLAG() {
return EQTYPE1_IFLAG;
}

public Double getEQTYPE2() {
return EQTYPE2;
}

public Double getEQUITY_YN_I() {
return EQUITY_YN_I;
}

public Double getEQUITY_YN_IFLAG() {
return EQUITY_YN_IFLAG;
}

public Double getEQVALB_I() {
return EQVALB_I;
}

public Double getEQVALB_IFLAG() {
return EQVALB_IFLAG;
}

public Double getEQVALDR() {
return EQVALDR;
}

public Double getEQVALDRB() {
return EQVALDRB;
}

public Double getEQWHENM() {
return EQWHENM;
}

public Double getEQWHENY() {
return EQWHENY;
}

public Double getEREC() {
return EREC;
}

public Double getERECMBY() {
return ERECMBY;
}

public Double getERECMPD() {
return ERECMPD;
}

public Double getERVRECBY() {
return ERVRECBY;
}

public Double getERVRECPD() {
return ERVRECPD;
}

public Double getERVREG1() {
return ERVREG1;
}

public Double getERVREG2() {
return ERVREG2;
}

public Double getESHARAPP() {
return ESHARAPP;
}

public Double getFRREPFIX() {
return FRREPFIX;
}

public Double getGCONTVLS() {
return GCONTVLS;
}

public Double getHEXT1() {
return HEXT1;
}

public Double getHEXT2() {
return HEXT2;
}

public Double getHEXT3() {
return HEXT3;
}

public Double getHEXT4() {
return HEXT4;
}

public Double getHFINL_AGGR() {
return HFINL_AGGR;
}

public Double getHFINW_EXCENDW_AGGR() {
return HFINW_EXCENDW_AGGR;
}

public Double getHOUSGDSOST_SUM() {
return HOUSGDSOST_SUM;
}

public Double getHRPDVAGE() {
return HRPDVAGE;
}

public Double getHRPDVECACT() {
return HRPDVECACT;
}

public Double getHRPIOUT1() {
return HRPIOUT1;
}

public Double getHRPPARTIOUT1() {
return HRPPARTIOUT1;
}

public Double getMALL1() {
return MALL1;
}

public Double getMALL1_I() {
return MALL1_I;
}

public Double getMALL1_IFLAG() {
return MALL1_IFLAG;
}

public Double getMALLTY1() {
return MALLTY1;
}

public Double getMALLTY1_I() {
return MALLTY1_I;
}

public Double getMALLTY1_IFLAG() {
return MALLTY1_IFLAG;
}

public Double getMARR2YR1() {
return MARR2YR1;
}

public Double getMARR2YR2() {
return MARR2YR2;
}

public Double getMARR2YR3() {
return MARR2YR3;
}

public Double getMARRCL01() {
return MARRCL01;
}

public Double getMARRCL02() {
return MARRCL02;
}

public Double getMARRCL12() {
return MARRCL12;
}

public Double getMARRS1() {
return MARRS1;
}

public Double getMARRSV1() {
return MARRSV1;
}

public Double getMARRSV2() {
return MARRSV2;
}

public Double getMARRSV3() {
return MARRSV3;
}

public Double getMCHGE() {
return MCHGE;
}

public Double getMCHGENUM() {
return MCHGENUM;
}

public Double getMENDNUM1() {
return MENDNUM1;
}

public Double getMENDNUM1_I() {
return MENDNUM1_I;
}

public Double getMENDNUM1_IFLAG() {
return MENDNUM1_IFLAG;
}

public Double getMENDNUM3_I() {
return MENDNUM3_I;
}

public Double getMENDNUM3_IFLAG() {
return MENDNUM3_IFLAG;
}

public Double getMENDV1() {
return MENDV1;
}

public Double getMENDV10_I() {
return MENDV10_I;
}

public Double getMENDV10_IFLAG() {
return MENDV10_IFLAG;
}

public Double getMENDV11_I() {
return MENDV11_I;
}

public Double getMENDV11_IFLAG() {
return MENDV11_IFLAG;
}

public Double getMENDV1_I() {
return MENDV1_I;
}

public Double getMENDV1_IFLAG() {
return MENDV1_IFLAG;
}

public Double getMENDV5_I() {
return MENDV5_I;
}

public Double getMENDV5_IFLAG() {
return MENDV5_IFLAG;
}

public Double getMENDV7_I() {
return MENDV7_I;
}

public Double getMENDV7_IFLAG() {
return MENDV7_IFLAG;
}

public Double getMENDVB1() {
return MENDVB1;
}

public Double getMENDVB11_I() {
return MENDVB11_I;
}

public Double getMENDVB11_IFLAG() {
return MENDVB11_IFLAG;
}

public Double getMENDVB1_I() {
return MENDVB1_I;
}

public Double getMENDVB1_IFLAG() {
return MENDVB1_IFLAG;
}

public Double getMENDVB2_I() {
return MENDVB2_I;
}

public Double getMENDVB2_IFLAG() {
return MENDVB2_IFLAG;
}

public Double getMENDVB3_I() {
return MENDVB3_I;
}

public Double getMENDVB3_IFLAG() {
return MENDVB3_IFLAG;
}

public Double getMENDVB4_I() {
return MENDVB4_I;
}

public Double getMENDVB4_IFLAG() {
return MENDVB4_IFLAG;
}

public Double getMENDVB5_I() {
return MENDVB5_I;
}

public Double getMENDVB5_IFLAG() {
return MENDVB5_IFLAG;
}

public Double getMENDVB6_I() {
return MENDVB6_I;
}

public Double getMENDVB6_IFLAG() {
return MENDVB6_IFLAG;
}

public Double getMENDVB7_I() {
return MENDVB7_I;
}

public Double getMENDVB7_IFLAG() {
return MENDVB7_IFLAG;
}

public Double getMENDVB8() {
return MENDVB8;
}

public Double getMENDVB8_I() {
return MENDVB8_I;
}

public Double getMENDVB8_IFLAG() {
return MENDVB8_IFLAG;
}

public Double getMENDVB9_I() {
return MENDVB9_I;
}

public Double getMENDVB9_IFLAG() {
return MENDVB9_IFLAG;
}

public Double getMENDW1() {
return MENDW1;
}

public Double getMENDW1_I() {
return MENDW1_I;
}

public Double getMENDW1_IFLAG() {
return MENDW1_IFLAG;
}

public Double getMENDW2() {
return MENDW2;
}

public Double getMENDW3() {
return MENDW3;
}

public Double getMENDX1() {
return MENDX1;
}

public Double getMENDY1() {
return MENDY1;
}

public Double getMENDY8() {
return MENDY8;
}

public Double getMEXTN() {
return MEXTN;
}

public Double getMEXTRS1() {
return MEXTRS1;
}

public Double getMEXTRS2() {
return MEXTRS2;
}

public Double getMEXTRS3() {
return MEXTRS3;
}

public Double getMHOWPY1() {
return MHOWPY1;
}

public Double getMINTFIX1() {
return MINTFIX1;
}

public Double getMINTFIX2() {
return MINTFIX2;
}

public Double getMINTFIX3() {
return MINTFIX3;
}

public Double getMINTPAID1() {
return MINTPAID1;
}

public Double getMINTPAID2() {
return MINTPAID2;
}

public Double getMINTPAID3() {
return MINTPAID3;
}

public Double getMINTRATE1() {
return MINTRATE1;
}

public Double getMINTRATE2() {
return MINTRATE2;
}

public Double getMINTRATE3() {
return MINTRATE3;
}

public Double getMINVW1() {
return MINVW1;
}

public Double getMINVW2() {
return MINVW2;
}

public Double getMINVW3() {
return MINVW3;
}

public Double getMNAME1() {
return MNAME1;
}

public Double getMNEG1() {
return MNEG1;
}

public Double getMNEG1_I() {
return MNEG1_I;
}

public Double getMNEG1_IFLAG() {
return MNEG1_IFLAG;
}

public Double getMNEGB1() {
return MNEGB1;
}

public Double getMNUMBN() {
return MNUMBN;
}

public Double getMNUMBO() {
return MNUMBO;
}

public Double getMNUMB_I() {
return MNUMB_I;
}

public Double getMNUMB_IFLAG() {
return MNUMB_IFLAG;
}

public Double getMONAME1() {
return MONAME1;
}

public Double getMONTHW1() {
return MONTHW1;
}

public Double getMONTHW2() {
return MONTHW2;
}

public Double getMONTHW3() {
return MONTHW3;
}

public Double getMONTHW4() {
return MONTHW4;
}

public Double getMPASTSPA1() {
return MPASTSPA1;
}

public Double getMPASTSPA2() {
return MPASTSPA2;
}

public Double getMPASTSPA3() {
return MPASTSPA3;
}

public Double getMPAYB1() {
return MPAYB1;
}

public Double getMPAYM1() {
return MPAYM1;
}

public Double getMPOLICY1() {
return MPOLICY1;
}

public Double getMPOLICY2() {
return MPOLICY2;
}

public Double getMPP1() {
return MPP1;
}

public Double getMREAS14() {
return MREAS14;
}

public Double getMREAS24() {
return MREAS24;
}

public Double getMTYPE1() {
return MTYPE1;
}

public Double getMTYPE1_I() {
return MTYPE1_I;
}

public Double getMTYPE1_IFLAG() {
return MTYPE1_IFLAG;
}

public Double getMVAL1() {
return MVAL1;
}

public Double getMVAL1_I() {
return MVAL1_I;
}

public Double getMVAL1_IFLAG() {
return MVAL1_IFLAG;
}

public Double getMVALB1() {
return MVALB1;
}

public Double getMW2CHK1() {
return MW2CHK1;
}

public Double getMW2CHK2() {
return MW2CHK2;
}

public Double getMW2CHK3() {
return MW2CHK3;
}

public Double getMYIFCH1() {
return MYIFCH1;
}

public Double getMYIFCH2() {
return MYIFCH2;
}

public Double getMYIFCH3() {
return MYIFCH3;
}

public Double getMYLFT1() {
return MYLFT1;
}

public Double getMYPASTSPA1() {
return MYPASTSPA1;
}

public Double getMYPASTSPA2() {
return MYPASTSPA2;
}

public Double getMYPASTSPA3() {
return MYPASTSPA3;
}

public Double getNOUNITS() {
return NOUNITS;
}

public Double getNUMADISW() {
return NUMADISW;
}

public Double getNUMDEPCH() {
return NUMDEPCH;
}

public Double getNUMELCH() {
return NUMELCH;
}

public Double getNUMNOELCH() {
return NUMNOELCH;
}

public Double getOTHMORT_SUM() {
return OTHMORT_SUM;
}

public Double getPHYSBUYLGDST_AGGR() {
return PHYSBUYLGDST_AGGR;
}

public Double getPHYSHOUSGDSOST_AGGR() {
return PHYSHOUSGDSOST_AGGR;
}

public Double getPHYSHOUSGDST_AGGR() {
return PHYSHOUSGDST_AGGR;
}

public Double getPRREPAY() {
return PRREPAY;
}

public Double getPRREPAY_I() {
return PRREPAY_I;
}

public Double getPRREPAY_IFLAG() {
return PRREPAY_IFLAG;
}

public Double getPRREPFIX() {
return PRREPFIX;
}

public Double getPRREPFIX_I() {
return PRREPFIX_I;
}

public Double getPRREPFIX_IFLAG() {
return PRREPFIX_IFLAG;
}

public Double getPRREPPC() {
return PRREPPC;
}

public Double getPRREPPC_I() {
return PRREPPC_I;
}

public Double getPRREPPC_IFLAG() {
return PRREPPC_IFLAG;
}

public Double getSHARAPP() {
return SHARAPP;
}

public Double getTOTARR_EXCMORT_AGGR() {
return TOTARR_EXCMORT_AGGR;
}

public Double getTOTBILLARR_AGGR() {
return TOTBILLARR_AGGR;
}

public Double getTOTCC_AGGR() {
return TOTCC_AGGR;
}

public Double getTOTDVNWFLN_AGGR() {
return TOTDVNWFLN_AGGR;
}

public Double getTOTDVNWILN_AGGR() {
return TOTDVNWILN_AGGR;
}

public Double getTOTFLNS_AGGR() {
return TOTFLNS_AGGR;
}

public Double getTOTHPARR_AGGR() {
return TOTHPARR_AGGR;
}

public Double getTOTHP_AGGR() {
return TOTHP_AGGR;
}

public Double getTOTLNARR_AGGR() {
return TOTLNARR_AGGR;
}

public Double getTOTLNS_AGGR() {
return TOTLNS_AGGR;
}

public Double getTOTLOS_AGGR() {
return TOTLOS_AGGR;
}

public Double getTOTMOARR_AGGR() {
return TOTMOARR_AGGR;
}

public Double getTOTMO_AGGR() {
return TOTMO_AGGR;
}

public Double getTOTNLOS_AGGR() {
return TOTNLOS_AGGR;
}

public Double getTOTNSLBNK_AGGR() {
return TOTNSLBNK_AGGR;
}

public Double getTOTNSLC_AGGR() {
return TOTNSLC_AGGR;
}

public Double getTOTOSLBNK_AGGR() {
return TOTOSLBNK_AGGR;
}

public Double getTOTOSLC_AGGR() {
return TOTOSLC_AGGR;
}

public Double getTOTPEN_AGGR() {
return TOTPEN_AGGR;
}

public Double getTOTSC_AGGR() {
return TOTSC_AGGR;
}

public Double getTOTSLBNK_AGGR() {
return TOTSLBNK_AGGR;
}

public Double getTOTSLC_AGGR() {
return TOTSLC_AGGR;
}

public Double getVESTVTOTAL() {
return VESTVTOTAL;
}

public Double getVESTVTOTALB() {
return VESTVTOTALB;
}

public Double getVESTVTOTALB_I() {
return VESTVTOTALB_I;
}

public Double getVESTVTOTALB_IFLAG() {
return VESTVTOTALB_IFLAG;
}

public Double getVESTVTOTAL_I() {
return VESTVTOTAL_I;
}

public Double getVESTVTOTAL_IFLAG() {
return VESTVTOTAL_IFLAG;
}

public Double getVOTPN() {
return VOTPN;
}

public Double getVOTYP_IFLAG() {
return VOTYP_IFLAG;
}

public Double getVOVLB_I() {
return VOVLB_I;
}

public Double getVOVLB_IFLAG() {
return VOVLB_IFLAG;
}

public Double getVPERS_I() {
return VPERS_I;
}

public Double getVPERS_IFLAG() {
return VPERS_IFLAG;
}

public Double getVTYPE1() {
return VTYPE1;
}

public Double getVTYPE1_I() {
return VTYPE1_I;
}

public Double getVTYPE3() {
return VTYPE3;
}

public Double getVTYPE3_I() {
return VTYPE3_I;
}

public Double getW5XSHHWGT() {
return W5XSHHWGT;
}

public Double getYEARW1() {
return YEARW1;
}

public Double getYEARW2() {
return YEARW2;
}

public Double getYEARW3() {
return YEARW3;
}

public Double getYEARW4() {
return YEARW4;
}

public WIGB_Wave5_HHOLD_Record(String line) {
split = line.split("\t");
if (!split[0].trim().isEmpty()) {
YEARW1 = new Double(split[0]);
}
if (!split[1].trim().isEmpty()) {
MONTHW1 = new Double(split[1]);
}
if (!split[2].trim().isEmpty()) {
YEARW2 = new Double(split[2]);
}
if (!split[3].trim().isEmpty()) {
MONTHW2 = new Double(split[3]);
}
if (!split[4].trim().isEmpty()) {
YEARW3 = new Double(split[4]);
}
if (!split[5].trim().isEmpty()) {
MONTHW3 = new Double(split[5]);
}
if (!split[6].trim().isEmpty()) {
YEARW4 = new Double(split[6]);
}
if (!split[7].trim().isEmpty()) {
MONTHW4 = new Double(split[7]);
}
if (!split[8].trim().isEmpty()) {
YEAR = new Double(split[8]);
}
if (!split[9].trim().isEmpty()) {
MONTH = new Double(split[9]);
}
if (!split[10].trim().isEmpty()) {
HOUT = new Double(split[10]);
}
if (!split[11].trim().isEmpty()) {
W5XSHHWGT = new Double(split[11]);
}
if (!split[12].trim().isEmpty()) {
ACCOM = new Double(split[12]);
}
if (!split[13].trim().isEmpty()) {
FLTTYP = new Double(split[13]);
}
if (!split[14].trim().isEmpty()) {
ACCOTH = new Double(split[14]);
}
if (!split[15].trim().isEmpty()) {
TEN1 = new Double(split[15]);
}
if (!split[16].trim().isEmpty()) {
TIED = new Double(split[16]);
}
if (!split[17].trim().isEmpty()) {
LLORD = new Double(split[17]);
}
if (!split[18].trim().isEmpty()) {
FURN = new Double(split[18]);
}
if (!split[19].trim().isEmpty()) {
DVPRIRNT = new Double(split[19]);
}
if (!split[20].trim().isEmpty()) {
HHOWN = new Double(split[20]);
}
if (!split[21].trim().isEmpty()) {
HAGEB = new Double(split[21]);
}
if (!split[22].trim().isEmpty()) {
HAGEYR = new Double(split[22]);
}
if (!split[23].trim().isEmpty()) {
HBUYYR = new Double(split[23]);
}
if (!split[24].trim().isEmpty()) {
HBUYSE = new Double(split[24]);
}
if (!split[25].trim().isEmpty()) {
HSHARE = new Double(split[25]);
}
if (!split[26].trim().isEmpty()) {
HSHAREP = new Double(split[26]);
}
if (!split[27].trim().isEmpty()) {
HPRICE = new Double(split[27]);
}
if (!split[28].trim().isEmpty()) {
HPRICEB = new Double(split[28]);
}
if (!split[29].trim().isEmpty()) {
HBFROM = new Double(split[29]);
}
if (!split[30].trim().isEmpty()) {
HRTBEV = new Double(split[30]);
}
if (!split[31].trim().isEmpty()) {
HHOSCH = new Double(split[31]);
}
if (!split[32].trim().isEmpty()) {
HVALUE = new Double(split[32]);
}
if (!split[33].trim().isEmpty()) {
HVALB = new Double(split[33]);
}
if (!split[34].trim().isEmpty()) {
HEXT1 = new Double(split[34]);
}
if (!split[35].trim().isEmpty()) {
HEXT2 = new Double(split[35]);
}
if (!split[36].trim().isEmpty()) {
HEXT3 = new Double(split[36]);
}
if (!split[37].trim().isEmpty()) {
HEXT4 = new Double(split[37]);
}
if (!split[38].trim().isEmpty()) {
MNUMBN = new Double(split[38]);
}
if (!split[39].trim().isEmpty()) {
MNUMB = new Double(split[39]);
}
if (!split[40].trim().isEmpty()) {
MW2CHK1 = new Double(split[40]);
}
if (!split[41].trim().isEmpty()) {
MW2CHK2 = new Double(split[41]);
}
if (!split[42].trim().isEmpty()) {
MW2CHK3 = new Double(split[42]);
}
if (!split[43].trim().isEmpty()) {
MEXTN = new Double(split[43]);
}
if (!split[44].trim().isEmpty()) {
MEXTRS1 = new Double(split[44]);
}
if (!split[45].trim().isEmpty()) {
MEXTRS2 = new Double(split[45]);
}
if (!split[46].trim().isEmpty()) {
MEXTRS3 = new Double(split[46]);
}
if (!split[47].trim().isEmpty()) {
MCHGE = new Double(split[47]);
}
if (!split[48].trim().isEmpty()) {
MCHGENUM = new Double(split[48]);
}
if (!split[49].trim().isEmpty()) {
MNUMBO = new Double(split[49]);
}
if (!split[50].trim().isEmpty()) {
MNAME1 = new Double(split[50]);
}
if (!split[51].trim().isEmpty()) {
MONAME1 = new Double(split[51]);
}
if (!split[52].trim().isEmpty()) {
MJNAME01 = new Double(split[52]);
}
if (!split[53].trim().isEmpty()) {
MJNAME02 = new Double(split[53]);
}
if (!split[54].trim().isEmpty()) {
MJNAME03 = new Double(split[54]);
}
if (!split[55].trim().isEmpty()) {
MJNAME04 = new Double(split[55]);
}
if (!split[56].trim().isEmpty()) {
MREAS01 = new Double(split[56]);
}
if (!split[57].trim().isEmpty()) {
MREAS02 = new Double(split[57]);
}
if (!split[58].trim().isEmpty()) {
MREAS03 = new Double(split[58]);
}
if (!split[59].trim().isEmpty()) {
MREAS04 = new Double(split[59]);
}
if (!split[60].trim().isEmpty()) {
MREAS05 = new Double(split[60]);
}
if (!split[61].trim().isEmpty()) {
MREAS06 = new Double(split[61]);
}
if (!split[62].trim().isEmpty()) {
MREAS07 = new Double(split[62]);
}
if (!split[63].trim().isEmpty()) {
MTYPE1 = new Double(split[63]);
}
if (!split[64].trim().isEmpty()) {
MENDW1 = new Double(split[64]);
}
if (!split[65].trim().isEmpty()) {
MENDNUM1 = new Double(split[65]);
}
if (!split[66].trim().isEmpty()) {
MALL1 = new Double(split[66]);
}
if (!split[67].trim().isEmpty()) {
MALLTY1 = new Double(split[67]);
}
if (!split[68].trim().isEmpty()) {
MVAL1 = new Double(split[68]);
}
if (!split[69].trim().isEmpty()) {
MVALB1 = new Double(split[69]);
}
if (!split[70].trim().isEmpty()) {
MNEG1 = new Double(split[70]);
}
if (!split[71].trim().isEmpty()) {
MNEGB1 = new Double(split[71]);
}
if (!split[72].trim().isEmpty()) {
MENDV1 = new Double(split[72]);
}
if (!split[73].trim().isEmpty()) {
MENDVB1 = new Double(split[73]);
}
if (!split[74].trim().isEmpty()) {
MENDY1 = new Double(split[74]);
}
if (!split[75].trim().isEmpty()) {
MENDV2 = new Double(split[75]);
}
if (!split[76].trim().isEmpty()) {
MENDVB2 = new Double(split[76]);
}
if (!split[77].trim().isEmpty()) {
MENDY2 = new Double(split[77]);
}
if (!split[78].trim().isEmpty()) {
MENDV3 = new Double(split[78]);
}
if (!split[79].trim().isEmpty()) {
MENDVB3 = new Double(split[79]);
}
if (!split[80].trim().isEmpty()) {
MENDY3 = new Double(split[80]);
}
if (!split[81].trim().isEmpty()) {
MENDV4 = new Double(split[81]);
}
if (!split[82].trim().isEmpty()) {
MENDVB4 = new Double(split[82]);
}
if (!split[83].trim().isEmpty()) {
MENDY4 = new Double(split[83]);
}
if (!split[84].trim().isEmpty()) {
MENDV5 = new Double(split[84]);
}
if (!split[85].trim().isEmpty()) {
MENDX1 = new Double(split[85]);
}
if (!split[86].trim().isEmpty()) {
MINVW1 = new Double(split[86]);
}
if (!split[87].trim().isEmpty()) {
MINVW2 = new Double(split[87]);
}
if (!split[88].trim().isEmpty()) {
MINVW3 = new Double(split[88]);
}
if (!split[89].trim().isEmpty()) {
MPOLICY1 = new Double(split[89]);
}
if (!split[90].trim().isEmpty()) {
MPOLICY2 = new Double(split[90]);
}
if (!split[91].trim().isEmpty()) {
MYLFT1 = new Double(split[91]);
}
if (!split[92].trim().isEmpty()) {
MYIFCH1 = new Double(split[92]);
}
if (!split[93].trim().isEmpty()) {
MINTPAID1 = new Double(split[93]);
}
if (!split[94].trim().isEmpty()) {
MINTFIX1 = new Double(split[94]);
}
if (!split[95].trim().isEmpty()) {
MINTRATE1 = new Double(split[95]);
}
if (!split[96].trim().isEmpty()) {
MPAYM1 = new Double(split[96]);
}
if (!split[97].trim().isEmpty()) {
MPAYB1 = new Double(split[97]);
}
if (!split[98].trim().isEmpty()) {
MPASTSPA1 = new Double(split[98]);
}
if (!split[99].trim().isEmpty()) {
MYPASTSPA1 = new Double(split[99]);
}
if (!split[100].trim().isEmpty()) {
MINC1 = new Double(split[100]);
}
if (!split[101].trim().isEmpty()) {
MINC2 = new Double(split[101]);
}
if (!split[102].trim().isEmpty()) {
MINC3 = new Double(split[102]);
}
if (!split[103].trim().isEmpty()) {
MINC4 = new Double(split[103]);
}
if (!split[104].trim().isEmpty()) {
MINC5 = new Double(split[104]);
}
if (!split[105].trim().isEmpty()) {
MPP1 = new Double(split[105]);
}
if (!split[106].trim().isEmpty()) {
MHOWPY1 = new Double(split[106]);
}
if (!split[107].trim().isEmpty()) {
MARRS1 = new Double(split[107]);
}
if (!split[108].trim().isEmpty()) {
MARRSV1 = new Double(split[108]);
}
if (!split[109].trim().isEmpty()) {
MARR2YR1 = new Double(split[109]);
}
if (!split[110].trim().isEmpty()) {
MARR2YR2 = new Double(split[110]);
}
if (!split[111].trim().isEmpty()) {
MARR2YR3 = new Double(split[111]);
}
if (!split[112].trim().isEmpty()) {
MARRCL01 = new Double(split[112]);
}
if (!split[113].trim().isEmpty()) {
MARRCL02 = new Double(split[113]);
}
if (!split[114].trim().isEmpty()) {
MARRCL12 = new Double(split[114]);
}
if (!split[115].trim().isEmpty()) {
MNAME2 = new Double(split[115]);
}
if (!split[116].trim().isEmpty()) {
MONAME2 = new Double(split[116]);
}
if (!split[117].trim().isEmpty()) {
MJNAME18 = new Double(split[117]);
}
if (!split[118].trim().isEmpty()) {
MJNAME19 = new Double(split[118]);
}
if (!split[119].trim().isEmpty()) {
MJNAME20 = new Double(split[119]);
}
if (!split[120].trim().isEmpty()) {
MREAS12 = new Double(split[120]);
}
if (!split[121].trim().isEmpty()) {
MREAS13 = new Double(split[121]);
}
if (!split[122].trim().isEmpty()) {
MREAS14 = new Double(split[122]);
}
if (!split[123].trim().isEmpty()) {
MTYPE2 = new Double(split[123]);
}
if (!split[124].trim().isEmpty()) {
BRIDLN1 = new Double(split[124]);
}
if (!split[125].trim().isEmpty()) {
BRIDLN2 = new Double(split[125]);
}
if (!split[126].trim().isEmpty()) {
BRIDLN3 = new Double(split[126]);
}
if (!split[127].trim().isEmpty()) {
MENDW2 = new Double(split[127]);
}
if (!split[128].trim().isEmpty()) {
MENDNUM2 = new Double(split[128]);
}
if (!split[129].trim().isEmpty()) {
MALL2 = new Double(split[129]);
}
if (!split[130].trim().isEmpty()) {
MALLTY2 = new Double(split[130]);
}
if (!split[131].trim().isEmpty()) {
MVAL2 = new Double(split[131]);
}
if (!split[132].trim().isEmpty()) {
MVALB2 = new Double(split[132]);
}
if (!split[133].trim().isEmpty()) {
MNEG2 = new Double(split[133]);
}
if (!split[134].trim().isEmpty()) {
MNEGB2 = new Double(split[134]);
}
if (!split[135].trim().isEmpty()) {
MENDV6 = new Double(split[135]);
}
if (!split[136].trim().isEmpty()) {
MENDVB6 = new Double(split[136]);
}
if (!split[137].trim().isEmpty()) {
MENDY6 = new Double(split[137]);
}
if (!split[138].trim().isEmpty()) {
MENDV7 = new Double(split[138]);
}
if (!split[139].trim().isEmpty()) {
MENDVB7 = new Double(split[139]);
}
if (!split[140].trim().isEmpty()) {
MENDY7 = new Double(split[140]);
}
if (!split[141].trim().isEmpty()) {
MENDV8 = new Double(split[141]);
}
if (!split[142].trim().isEmpty()) {
MENDVB8 = new Double(split[142]);
}
if (!split[143].trim().isEmpty()) {
MENDY8 = new Double(split[143]);
}
if (!split[144].trim().isEmpty()) {
MENDX2 = new Double(split[144]);
}
if (!split[145].trim().isEmpty()) {
MYLFT2 = new Double(split[145]);
}
if (!split[146].trim().isEmpty()) {
MYIFCH2 = new Double(split[146]);
}
if (!split[147].trim().isEmpty()) {
MPASTSPA2 = new Double(split[147]);
}
if (!split[148].trim().isEmpty()) {
MYPASTSPA2 = new Double(split[148]);
}
if (!split[149].trim().isEmpty()) {
MPAYM2 = new Double(split[149]);
}
if (!split[150].trim().isEmpty()) {
MPAYB2 = new Double(split[150]);
}
if (!split[151].trim().isEmpty()) {
MINC6 = new Double(split[151]);
}
if (!split[152].trim().isEmpty()) {
MPP2 = new Double(split[152]);
}
if (!split[153].trim().isEmpty()) {
MINTPAID2 = new Double(split[153]);
}
if (!split[154].trim().isEmpty()) {
MINTFIX2 = new Double(split[154]);
}
if (!split[155].trim().isEmpty()) {
MINTRATE2 = new Double(split[155]);
}
if (!split[156].trim().isEmpty()) {
MHOWPY2 = new Double(split[156]);
}
if (!split[157].trim().isEmpty()) {
MARRS2 = new Double(split[157]);
}
if (!split[158].trim().isEmpty()) {
MARRSV2 = new Double(split[158]);
}
if (!split[159].trim().isEmpty()) {
MNAME3 = new Double(split[159]);
}
if (!split[160].trim().isEmpty()) {
MONAME3 = new Double(split[160]);
}
if (!split[161].trim().isEmpty()) {
MJNAME35 = new Double(split[161]);
}
if (!split[162].trim().isEmpty()) {
MJNAME36 = new Double(split[162]);
}
if (!split[163].trim().isEmpty()) {
MREAS23 = new Double(split[163]);
}
if (!split[164].trim().isEmpty()) {
MREAS24 = new Double(split[164]);
}
if (!split[165].trim().isEmpty()) {
MTYPE3 = new Double(split[165]);
}
if (!split[166].trim().isEmpty()) {
MENDW3 = new Double(split[166]);
}
if (!split[167].trim().isEmpty()) {
MENDNUM3 = new Double(split[167]);
}
if (!split[168].trim().isEmpty()) {
MALL3 = new Double(split[168]);
}
if (!split[169].trim().isEmpty()) {
MALLTY3 = new Double(split[169]);
}
if (!split[170].trim().isEmpty()) {
MVAL3 = new Double(split[170]);
}
if (!split[171].trim().isEmpty()) {
MVALB3 = new Double(split[171]);
}
if (!split[172].trim().isEmpty()) {
MNEG3 = new Double(split[172]);
}
if (!split[173].trim().isEmpty()) {
MNEGB3 = new Double(split[173]);
}
if (!split[174].trim().isEmpty()) {
MENDV11 = new Double(split[174]);
}
if (!split[175].trim().isEmpty()) {
MENDVB11 = new Double(split[175]);
}
if (!split[176].trim().isEmpty()) {
MENDY11 = new Double(split[176]);
}
if (!split[177].trim().isEmpty()) {
MENDX3 = new Double(split[177]);
}
if (!split[178].trim().isEmpty()) {
MYLFT3 = new Double(split[178]);
}
if (!split[179].trim().isEmpty()) {
MYIFCH3 = new Double(split[179]);
}
if (!split[180].trim().isEmpty()) {
MPASTSPA3 = new Double(split[180]);
}
if (!split[181].trim().isEmpty()) {
MYPASTSPA3 = new Double(split[181]);
}
if (!split[182].trim().isEmpty()) {
MPAYM3 = new Double(split[182]);
}
if (!split[183].trim().isEmpty()) {
MPAYB3 = new Double(split[183]);
}
if (!split[184].trim().isEmpty()) {
MINC11 = new Double(split[184]);
}
if (!split[185].trim().isEmpty()) {
MPP3 = new Double(split[185]);
}
if (!split[186].trim().isEmpty()) {
MINTPAID3 = new Double(split[186]);
}
if (!split[187].trim().isEmpty()) {
MINTFIX3 = new Double(split[187]);
}
if (!split[188].trim().isEmpty()) {
MINTRATE3 = new Double(split[188]);
}
if (!split[189].trim().isEmpty()) {
MHOWPY3 = new Double(split[189]);
}
if (!split[190].trim().isEmpty()) {
MARRS3 = new Double(split[190]);
}
if (!split[191].trim().isEmpty()) {
MARRSV3 = new Double(split[191]);
}
if (!split[192].trim().isEmpty()) {
EQOLD = new Double(split[192]);
}
if (!split[193].trim().isEmpty()) {
EQNEW = new Double(split[193]);
}
if (!split[194].trim().isEmpty()) {
EQYES = new Double(split[194]);
}
if (!split[195].trim().isEmpty()) {
EQTYPE1 = new Double(split[195]);
}
if (!split[196].trim().isEmpty()) {
EQTYPE2 = new Double(split[196]);
}
if (!split[197].trim().isEmpty()) {
EQWHENY = new Double(split[197]);
}
if (!split[198].trim().isEmpty()) {
EQWHENM = new Double(split[198]);
}
if (!split[199].trim().isEmpty()) {
EQDRAW = new Double(split[199]);
}
if (!split[200].trim().isEmpty()) {
EQVAL = new Double(split[200]);
}
if (!split[201].trim().isEmpty()) {
EQVALB = new Double(split[201]);
}
if (!split[202].trim().isEmpty()) {
EQVALDR = new Double(split[202]);
}
if (!split[203].trim().isEmpty()) {
EQVALDRB = new Double(split[203]);
}
if (!split[204].trim().isEmpty()) {
EREC = new Double(split[204]);
}
if (!split[205].trim().isEmpty()) {
ERECMPD = new Double(split[205]);
}
if (!split[206].trim().isEmpty()) {
ERECMBY = new Double(split[206]);
}
if (!split[207].trim().isEmpty()) {
ERECTAX = new Double(split[207]);
}
if (!split[208].trim().isEmpty()) {
EINT = new Double(split[208]);
}
if (!split[209].trim().isEmpty()) {
EINTFIX = new Double(split[209]);
}
if (!split[210].trim().isEmpty()) {
EINTRAT = new Double(split[210]);
}
if (!split[211].trim().isEmpty()) {
EMSPAY = new Double(split[211]);
}
if (!split[212].trim().isEmpty()) {
EMSARR = new Double(split[212]);
}
if (!split[213].trim().isEmpty()) {
FRREPFIX = new Double(split[213]);
}
if (!split[214].trim().isEmpty()) {
SHARAPP = new Double(split[214]);
}
if (!split[215].trim().isEmpty()) {
ESHARAPP = new Double(split[215]);
}
if (!split[216].trim().isEmpty()) {
ERVREG1 = new Double(split[216]);
}
if (!split[217].trim().isEmpty()) {
ERVREG2 = new Double(split[217]);
}
if (!split[218].trim().isEmpty()) {
ERVSUM = new Double(split[218]);
}
if (!split[219].trim().isEmpty()) {
ERVSUMB = new Double(split[219]);
}
if (!split[220].trim().isEmpty()) {
ERVRECPD = new Double(split[220]);
}
if (!split[221].trim().isEmpty()) {
ERVRECBY = new Double(split[221]);
}
if (!split[222].trim().isEmpty()) {
ERVTAX = new Double(split[222]);
}
if (!split[223].trim().isEmpty()) {
ERVRENT = new Double(split[223]);
}
if (!split[224].trim().isEmpty()) {
ERVPRP = new Double(split[224]);
}
if (!split[225].trim().isEmpty()) {
EPRVPAY = new Double(split[225]);
}
if (!split[226].trim().isEmpty()) {
EPRVAL = new Double(split[226]);
}
if (!split[227].trim().isEmpty()) {
EPRPER = new Double(split[227]);
}
if (!split[228].trim().isEmpty()) {
EOTHREG = new Double(split[228]);
}
if (!split[229].trim().isEmpty()) {
EOTHRVA = new Double(split[229]);
}
if (!split[230].trim().isEmpty()) {
EOTHRVB = new Double(split[230]);
}
if (!split[231].trim().isEmpty()) {
PRREPAY = new Double(split[231]);
}
if (!split[232].trim().isEmpty()) {
PRREPFIX = new Double(split[232]);
}
if (!split[233].trim().isEmpty()) {
PRREPPC = new Double(split[233]);
}
if (!split[234].trim().isEmpty()) {
GCOLLEC = new Double(split[234]);
}
if (!split[235].trim().isEmpty()) {
GCOLLV = new Double(split[235]);
}
if (!split[236].trim().isEmpty()) {
GCOLLVB = new Double(split[236]);
}
if (!split[237].trim().isEmpty()) {
GCONTVB = new Double(split[237]);
}
if (!split[238].trim().isEmpty()) {
VCARN = new Double(split[238]);
}
if (!split[239].trim().isEmpty()) {
VTYPE1 = new Double(split[239]);
}
if (!split[240].trim().isEmpty()) {
VTYPE2 = new Double(split[240]);
}
if (!split[241].trim().isEmpty()) {
VTYPE3 = new Double(split[241]);
}
if (!split[242].trim().isEmpty()) {
VPERS = new Double(split[242]);
}
if (!split[243].trim().isEmpty()) {
VPERV = new Double(split[243]);
}
if (!split[244].trim().isEmpty()) {
VOTYP1 = new Double(split[244]);
}
if (!split[245].trim().isEmpty()) {
VOTYP2 = new Double(split[245]);
}
if (!split[246].trim().isEmpty()) {
VOTYP3 = new Double(split[246]);
}
if (!split[247].trim().isEmpty()) {
VOTYP4 = new Double(split[247]);
}
if (!split[248].trim().isEmpty()) {
VOTPN = new Double(split[248]);
}
if (!split[249].trim().isEmpty()) {
VOVAL = new Double(split[249]);
}
if (!split[250].trim().isEmpty()) {
VOVLB = new Double(split[250]);
}
if (!split[251].trim().isEmpty()) {
VCARN_I = new Double(split[251]);
}
if (!split[252].trim().isEmpty()) {
VCARN_IFLAG = new Double(split[252]);
}
if (!split[253].trim().isEmpty()) {
VESTVTOTAL = new Double(split[253]);
}
if (!split[254].trim().isEmpty()) {
VESTVTOTALB = new Double(split[254]);
}
if (!split[255].trim().isEmpty()) {
VESTVTOTALB_I = new Double(split[255]);
}
if (!split[256].trim().isEmpty()) {
VESTVTOTALB_IFLAG = new Double(split[256]);
}
if (!split[257].trim().isEmpty()) {
VESTVTOTAL_I = new Double(split[257]);
}
if (!split[258].trim().isEmpty()) {
VESTVTOTAL_IFLAG = new Double(split[258]);
}
if (!split[259].trim().isEmpty()) {
VTYPE_IFLAG = new Double(split[259]);
}
if (!split[260].trim().isEmpty()) {
VOTYP_IFLAG = new Double(split[260]);
}
if (!split[261].trim().isEmpty()) {
VOVLB_I = new Double(split[261]);
}
if (!split[262].trim().isEmpty()) {
VOVLB_IFLAG = new Double(split[262]);
}
if (!split[263].trim().isEmpty()) {
MNUMB_I = new Double(split[263]);
}
if (!split[264].trim().isEmpty()) {
MNUMB_IFLAG = new Double(split[264]);
}
if (!split[265].trim().isEmpty()) {
MALL1_I = new Double(split[265]);
}
if (!split[266].trim().isEmpty()) {
MALL1_IFLAG = new Double(split[266]);
}
if (!split[267].trim().isEmpty()) {
MALL2_I = new Double(split[267]);
}
if (!split[268].trim().isEmpty()) {
MALL2_IFLAG = new Double(split[268]);
}
if (!split[269].trim().isEmpty()) {
MALL3_I = new Double(split[269]);
}
if (!split[270].trim().isEmpty()) {
MALL3_IFLAG = new Double(split[270]);
}
if (!split[271].trim().isEmpty()) {
MALLTY1_I = new Double(split[271]);
}
if (!split[272].trim().isEmpty()) {
MALLTY1_IFLAG = new Double(split[272]);
}
if (!split[273].trim().isEmpty()) {
MALLTY2_I = new Double(split[273]);
}
if (!split[274].trim().isEmpty()) {
MALLTY2_IFLAG = new Double(split[274]);
}
if (!split[275].trim().isEmpty()) {
MVAL1_I = new Double(split[275]);
}
if (!split[276].trim().isEmpty()) {
MVAL1_IFLAG = new Double(split[276]);
}
if (!split[277].trim().isEmpty()) {
MVAL2_I = new Double(split[277]);
}
if (!split[278].trim().isEmpty()) {
MVAL2_IFLAG = new Double(split[278]);
}
if (!split[279].trim().isEmpty()) {
MVAL3_I = new Double(split[279]);
}
if (!split[280].trim().isEmpty()) {
MVAL3_IFLAG = new Double(split[280]);
}
if (!split[281].trim().isEmpty()) {
MNEG1_I = new Double(split[281]);
}
if (!split[282].trim().isEmpty()) {
MNEG1_IFLAG = new Double(split[282]);
}
if (!split[283].trim().isEmpty()) {
MNEG2_I = new Double(split[283]);
}
if (!split[284].trim().isEmpty()) {
MNEG2_IFLAG = new Double(split[284]);
}
if (!split[285].trim().isEmpty()) {
TEN1_I = new Double(split[285]);
}
if (!split[286].trim().isEmpty()) {
TEN1_IFLAG = new Double(split[286]);
}
if (!split[287].trim().isEmpty()) {
HSHARE_I = new Double(split[287]);
}
if (!split[288].trim().isEmpty()) {
HSHARE_IFLAG = new Double(split[288]);
}
if (!split[289].trim().isEmpty()) {
HSHAREP_I = new Double(split[289]);
}
if (!split[290].trim().isEmpty()) {
HSHAREP_IFLAG = new Double(split[290]);
}
if (!split[291].trim().isEmpty()) {
EQUITY_YN_I = new Double(split[291]);
}
if (!split[292].trim().isEmpty()) {
EQUITY_YN_IFLAG = new Double(split[292]);
}
if (!split[293].trim().isEmpty()) {
EQTYPE1_I = new Double(split[293]);
}
if (!split[294].trim().isEmpty()) {
EQTYPE1_IFLAG = new Double(split[294]);
}
if (!split[295].trim().isEmpty()) {
EQDRAW_I = new Double(split[295]);
}
if (!split[296].trim().isEmpty()) {
EQDRAW_IFLAG = new Double(split[296]);
}
if (!split[297].trim().isEmpty()) {
EQVALB_I = new Double(split[297]);
}
if (!split[298].trim().isEmpty()) {
EQVALB_IFLAG = new Double(split[298]);
}
if (!split[299].trim().isEmpty()) {
EQVAL_I = new Double(split[299]);
}
if (!split[300].trim().isEmpty()) {
EQVAL_IFLAG = new Double(split[300]);
}
if (!split[301].trim().isEmpty()) {
EINT_I = new Double(split[301]);
}
if (!split[302].trim().isEmpty()) {
EINT_IFLAG = new Double(split[302]);
}
if (!split[303].trim().isEmpty()) {
EINTRAT_I = new Double(split[303]);
}
if (!split[304].trim().isEmpty()) {
EINTRAT_IFLAG = new Double(split[304]);
}
if (!split[305].trim().isEmpty()) {
ERVPRP_I = new Double(split[305]);
}
if (!split[306].trim().isEmpty()) {
ERVPRP_IFLAG = new Double(split[306]);
}
if (!split[307].trim().isEmpty()) {
PRREPAY_I = new Double(split[307]);
}
if (!split[308].trim().isEmpty()) {
PRREPAY_IFLAG = new Double(split[308]);
}
if (!split[309].trim().isEmpty()) {
PRREPFIX_I = new Double(split[309]);
}
if (!split[310].trim().isEmpty()) {
PRREPFIX_IFLAG = new Double(split[310]);
}
if (!split[311].trim().isEmpty()) {
PRREPPC_I = new Double(split[311]);
}
if (!split[312].trim().isEmpty()) {
PRREPPC_IFLAG = new Double(split[312]);
}
if (!split[313].trim().isEmpty()) {
MTYPE1_I = new Double(split[313]);
}
if (!split[314].trim().isEmpty()) {
MTYPE1_IFLAG = new Double(split[314]);
}
if (!split[315].trim().isEmpty()) {
MTYPE2_I = new Double(split[315]);
}
if (!split[316].trim().isEmpty()) {
MTYPE2_IFLAG = new Double(split[316]);
}
if (!split[317].trim().isEmpty()) {
MTYPE3_I = new Double(split[317]);
}
if (!split[318].trim().isEmpty()) {
MTYPE3_IFLAG = new Double(split[318]);
}
if (!split[319].trim().isEmpty()) {
MENDW1_I = new Double(split[319]);
}
if (!split[320].trim().isEmpty()) {
MENDW1_IFLAG = new Double(split[320]);
}
if (!split[321].trim().isEmpty()) {
MENDW2_I = new Double(split[321]);
}
if (!split[322].trim().isEmpty()) {
MENDW2_IFLAG = new Double(split[322]);
}
if (!split[323].trim().isEmpty()) {
MENDW3_I = new Double(split[323]);
}
if (!split[324].trim().isEmpty()) {
MENDW3_IFLAG = new Double(split[324]);
}
if (!split[325].trim().isEmpty()) {
MENDNUM1_I = new Double(split[325]);
}
if (!split[326].trim().isEmpty()) {
MENDNUM1_IFLAG = new Double(split[326]);
}
if (!split[327].trim().isEmpty()) {
MENDNUM2_I = new Double(split[327]);
}
if (!split[328].trim().isEmpty()) {
MENDNUM2_IFLAG = new Double(split[328]);
}
if (!split[329].trim().isEmpty()) {
MENDNUM3_I = new Double(split[329]);
}
if (!split[330].trim().isEmpty()) {
MENDNUM3_IFLAG = new Double(split[330]);
}
if (!split[331].trim().isEmpty()) {
MENDVB1_I = new Double(split[331]);
}
if (!split[332].trim().isEmpty()) {
MENDVB1_IFLAG = new Double(split[332]);
}
if (!split[333].trim().isEmpty()) {
MENDVB2_I = new Double(split[333]);
}
if (!split[334].trim().isEmpty()) {
MENDVB2_IFLAG = new Double(split[334]);
}
if (!split[335].trim().isEmpty()) {
MENDVB3_I = new Double(split[335]);
}
if (!split[336].trim().isEmpty()) {
MENDVB3_IFLAG = new Double(split[336]);
}
if (!split[337].trim().isEmpty()) {
MENDVB4_I = new Double(split[337]);
}
if (!split[338].trim().isEmpty()) {
MENDVB4_IFLAG = new Double(split[338]);
}
if (!split[339].trim().isEmpty()) {
MENDVB5_I = new Double(split[339]);
}
if (!split[340].trim().isEmpty()) {
MENDVB5_IFLAG = new Double(split[340]);
}
if (!split[341].trim().isEmpty()) {
MENDVB9_I = new Double(split[341]);
}
if (!split[342].trim().isEmpty()) {
MENDVB9_IFLAG = new Double(split[342]);
}
if (!split[343].trim().isEmpty()) {
MENDVB6_I = new Double(split[343]);
}
if (!split[344].trim().isEmpty()) {
MENDVB6_IFLAG = new Double(split[344]);
}
if (!split[345].trim().isEmpty()) {
MENDVB7_I = new Double(split[345]);
}
if (!split[346].trim().isEmpty()) {
MENDVB7_IFLAG = new Double(split[346]);
}
if (!split[347].trim().isEmpty()) {
MENDVB8_I = new Double(split[347]);
}
if (!split[348].trim().isEmpty()) {
MENDVB8_IFLAG = new Double(split[348]);
}
if (!split[349].trim().isEmpty()) {
MENDVB11_I = new Double(split[349]);
}
if (!split[350].trim().isEmpty()) {
MENDVB11_IFLAG = new Double(split[350]);
}
if (!split[351].trim().isEmpty()) {
MENDV1_I = new Double(split[351]);
}
if (!split[352].trim().isEmpty()) {
MENDV1_IFLAG = new Double(split[352]);
}
if (!split[353].trim().isEmpty()) {
MENDV2_I = new Double(split[353]);
}
if (!split[354].trim().isEmpty()) {
MENDV2_IFLAG = new Double(split[354]);
}
if (!split[355].trim().isEmpty()) {
MENDV3_I = new Double(split[355]);
}
if (!split[356].trim().isEmpty()) {
MENDV3_IFLAG = new Double(split[356]);
}
if (!split[357].trim().isEmpty()) {
MENDV4_I = new Double(split[357]);
}
if (!split[358].trim().isEmpty()) {
MENDV4_IFLAG = new Double(split[358]);
}
if (!split[359].trim().isEmpty()) {
MENDV5_I = new Double(split[359]);
}
if (!split[360].trim().isEmpty()) {
MENDV5_IFLAG = new Double(split[360]);
}
if (!split[361].trim().isEmpty()) {
MENDV6_I = new Double(split[361]);
}
if (!split[362].trim().isEmpty()) {
MENDV6_IFLAG = new Double(split[362]);
}
if (!split[363].trim().isEmpty()) {
MENDV7_I = new Double(split[363]);
}
if (!split[364].trim().isEmpty()) {
MENDV7_IFLAG = new Double(split[364]);
}
if (!split[365].trim().isEmpty()) {
MENDV10_I = new Double(split[365]);
}
if (!split[366].trim().isEmpty()) {
MENDV10_IFLAG = new Double(split[366]);
}
if (!split[367].trim().isEmpty()) {
MENDV11_I = new Double(split[367]);
}
if (!split[368].trim().isEmpty()) {
MENDV11_IFLAG = new Double(split[368]);
}
if (!split[369].trim().isEmpty()) {
HVALUE_I = new Double(split[369]);
}
if (!split[370].trim().isEmpty()) {
HVALUE_IFLAG = new Double(split[370]);
}
if (!split[371].trim().isEmpty()) {
DVHVALUE = new Double(split[371]);
}
if (!split[372].trim().isEmpty()) {
TOTMVAL = new Double(split[372]);
}
if (!split[373].trim().isEmpty()) {
TOTMNEG = new Double(split[373]);
}
if (!split[374].trim().isEmpty()) {
TOTMORT = new Double(split[374]);
}
if (!split[375].trim().isEmpty()) {
DVEQRELVAL = new Double(split[375]);
}
if (!split[376].trim().isEmpty()) {
DVEQLTM = new Double(split[376]);
}
if (!split[377].trim().isEmpty()) {
DVHORP = new Double(split[377]);
}
if (!split[378].trim().isEmpty()) {
DVEQSRB = new Double(split[378]);
}
if (!split[379].trim().isEmpty()) {
DVEQPRUN = new Double(split[379]);
}
if (!split[380].trim().isEmpty()) {
HMORTG = new Double(split[380]);
}
if (!split[381].trim().isEmpty()) {
ALLENDW = new Double(split[381]);
}
if (!split[382].trim().isEmpty()) {
HSETYPE = new Double(split[382]);
}
if (!split[383].trim().isEmpty()) {
VTYPE1_I = new Double(split[383]);
}
if (!split[384].trim().isEmpty()) {
VTYPE2_I = new Double(split[384]);
}
if (!split[385].trim().isEmpty()) {
VTYPE3_I = new Double(split[385]);
}
if (!split[386].trim().isEmpty()) {
VPERS_I = new Double(split[386]);
}
if (!split[387].trim().isEmpty()) {
VPERS_IFLAG = new Double(split[387]);
}
if (!split[388].trim().isEmpty()) {
VPERV_I = new Double(split[388]);
}
if (!split[389].trim().isEmpty()) {
VPERV_IFLAG = new Double(split[389]);
}
if (!split[390].trim().isEmpty()) {
VOTYP1_I = new Double(split[390]);
}
if (!split[391].trim().isEmpty()) {
VOTYP2_I = new Double(split[391]);
}
if (!split[392].trim().isEmpty()) {
VOTYP3_I = new Double(split[392]);
}
if (!split[393].trim().isEmpty()) {
VOTYP4_I = new Double(split[393]);
}
if (!split[394].trim().isEmpty()) {
VOTYP5_I = new Double(split[394]);
}
if (!split[395].trim().isEmpty()) {
VOVAL_I = new Double(split[395]);
}
if (!split[396].trim().isEmpty()) {
VOVAL_IFLAG = new Double(split[396]);
}
if (!split[397].trim().isEmpty()) {
GCOLLEC_I = new Double(split[397]);
}
if (!split[398].trim().isEmpty()) {
GCOLLEC_IFLAG = new Double(split[398]);
}
if (!split[399].trim().isEmpty()) {
GCOLLV_I = new Double(split[399]);
}
if (!split[400].trim().isEmpty()) {
GCOLLV_IFLAG = new Double(split[400]);
}
if (!split[401].trim().isEmpty()) {
GCONTVB_I = new Double(split[401]);
}
if (!split[402].trim().isEmpty()) {
GCONTVB_IFLAG = new Double(split[402]);
}
if (!split[403].trim().isEmpty()) {
DVHSEVAL_SUM = new Double(split[403]);
}
if (!split[404].trim().isEmpty()) {
DVBLTVAL_SUM = new Double(split[404]);
}
if (!split[405].trim().isEmpty()) {
DVBLDVAL_SUM = new Double(split[405]);
}
if (!split[406].trim().isEmpty()) {
DVLUKVAL_SUM = new Double(split[406]);
}
if (!split[407].trim().isEmpty()) {
DVLOSVAL_SUM = new Double(split[407]);
}
if (!split[408].trim().isEmpty()) {
DVOPRVAL_SUM = new Double(split[408]);
}
if (!split[409].trim().isEmpty()) {
DVHSEDEBT_SUM = new Double(split[409]);
}
if (!split[410].trim().isEmpty()) {
DVBLTDEBT_SUM = new Double(split[410]);
}
if (!split[411].trim().isEmpty()) {
DVBLDDEBT_SUM = new Double(split[411]);
}
if (!split[412].trim().isEmpty()) {
DVLUKDEBT_SUM = new Double(split[412]);
}
if (!split[413].trim().isEmpty()) {
DVLOSDEBT_SUM = new Double(split[413]);
}
if (!split[414].trim().isEmpty()) {
DVOPRDEBT_SUM = new Double(split[414]);
}
if (!split[415].trim().isEmpty()) {
OTHMORT_SUM = new Double(split[415]);
}
if (!split[416].trim().isEmpty()) {
HOUSGDST_SUM = new Double(split[416]);
}
if (!split[417].trim().isEmpty()) {
BUYLGDST_SUM = new Double(split[417]);
}
if (!split[418].trim().isEmpty()) {
HOUSGDSOST_SUM = new Double(split[418]);
}
if (!split[419].trim().isEmpty()) {
PHYSHOUSGDST_AGGR = new Double(split[419]);
}
if (!split[420].trim().isEmpty()) {
PHYSBUYLGDST_AGGR = new Double(split[420]);
}
if (!split[421].trim().isEmpty()) {
PHYSHOUSGDSOST_AGGR = new Double(split[421]);
}
if (!split[422].trim().isEmpty()) {
GCONTVLS = new Double(split[422]);
}
if (!split[423].trim().isEmpty()) {
DVGCOLLV = new Double(split[423]);
}
if (!split[424].trim().isEmpty()) {
ALLGD = new Double(split[424]);
}
if (!split[425].trim().isEmpty()) {
DVTOTOTHVEHVAL = new Double(split[425]);
}
if (!split[426].trim().isEmpty()) {
DVTOTPERNPVAL = new Double(split[426]);
}
if (!split[427].trim().isEmpty()) {
DVTOTVEHVAL = new Double(split[427]);
}
if (!split[428].trim().isEmpty()) {
HPHYSW = new Double(split[428]);
}
if (!split[429].trim().isEmpty()) {
DVPROPERTY = new Double(split[429]);
}
if (!split[430].trim().isEmpty()) {
HPROPW = new Double(split[430]);
}
if (!split[431].trim().isEmpty()) {
DVCISAV_AGGR = new Double(split[431]);
}
if (!split[432].trim().isEmpty()) {
DVIISAV_AGGR = new Double(split[432]);
}
if (!split[433].trim().isEmpty()) {
DVKISAV_AGGR = new Double(split[433]);
}
if (!split[434].trim().isEmpty()) {
DVFNSVAL_AGGR = new Double(split[434]);
}
if (!split[435].trim().isEmpty()) {
DVFSHUKV_AGGR = new Double(split[435]);
}
if (!split[436].trim().isEmpty()) {
DVINSV_AGGR = new Double(split[436]);
}
if (!split[437].trim().isEmpty()) {
DVFLFENV_AGGR = new Double(split[437]);
}
if (!split[438].trim().isEmpty()) {
DVFLFSIV_AGGR = new Double(split[438]);
}
if (!split[439].trim().isEmpty()) {
DVFLFFSV_AGGR = new Double(split[439]);
}
if (!split[440].trim().isEmpty()) {
DVFLFTEV_AGGR = new Double(split[440]);
}
if (!split[441].trim().isEmpty()) {
DVFBONDV_AGGR = new Double(split[441]);
}
if (!split[442].trim().isEmpty()) {
DVFESHARES_AGGR = new Double(split[442]);
}
if (!split[443].trim().isEmpty()) {
DVFESHAV_AGGR = new Double(split[443]);
}
if (!split[444].trim().isEmpty()) {
DVFEOPTV_AGGR = new Double(split[444]);
}
if (!split[445].trim().isEmpty()) {
DVFCOLLV_AGGR = new Double(split[445]);
}
if (!split[446].trim().isEmpty()) {
DVFSHOSV_AGGR = new Double(split[446]);
}
if (!split[447].trim().isEmpty()) {
DVFGLTUKV_AGGR = new Double(split[447]);
}
if (!split[448].trim().isEmpty()) {
DVFGLTFOV_AGGR = new Double(split[448]);
}
if (!split[449].trim().isEmpty()) {
DVFINVOTV_AGGR = new Double(split[449]);
}
if (!split[450].trim().isEmpty()) {
DVFINFVAL_AGGR = new Double(split[450]);
}
if (!split[451].trim().isEmpty()) {
DVFINFLV_AGGR = new Double(split[451]);
}
if (!split[452].trim().isEmpty()) {
DVFINFV_AGGR = new Double(split[452]);
}
if (!split[453].trim().isEmpty()) {
DVISAVAL_AGGR = new Double(split[453]);
}
if (!split[454].trim().isEmpty()) {
DVFFASSETS_AGGR = new Double(split[454]);
}
if (!split[455].trim().isEmpty()) {
DVCACTV_AGGR = new Double(split[455]);
}
if (!split[456].trim().isEmpty()) {
DVCASVV_AGGR = new Double(split[456]);
}
if (!split[457].trim().isEmpty()) {
DVCAVAL_AGGR = new Double(split[457]);
}
if (!split[458].trim().isEmpty()) {
DVCACRVAL_AGGR = new Double(split[458]);
}
if (!split[459].trim().isEmpty()) {
DVCAODVAL_AGGR = new Double(split[459]);
}
if (!split[460].trim().isEmpty()) {
DVSAVAL_AGGR = new Double(split[460]);
}
if (!split[461].trim().isEmpty()) {
TOTCC_AGGR = new Double(split[461]);
}
if (!split[462].trim().isEmpty()) {
TOTSC_AGGR = new Double(split[462]);
}
if (!split[463].trim().isEmpty()) {
TOTMO_AGGR = new Double(split[463]);
}
if (!split[464].trim().isEmpty()) {
TOTNSLBNK_AGGR = new Double(split[464]);
}
if (!split[465].trim().isEmpty()) {
TOTNSLC_AGGR = new Double(split[465]);
}
if (!split[466].trim().isEmpty()) {
TOTOSLBNK_AGGR = new Double(split[466]);
}
if (!split[467].trim().isEmpty()) {
TOTOSLC_AGGR = new Double(split[467]);
}
if (!split[468].trim().isEmpty()) {
TOTSLBNK_AGGR = new Double(split[468]);
}
if (!split[469].trim().isEmpty()) {
TOTSLC_AGGR = new Double(split[469]);
}
if (!split[470].trim().isEmpty()) {
TOTBILLARR_AGGR = new Double(split[470]);
}
if (!split[471].trim().isEmpty()) {
TOTHPARR_AGGR = new Double(split[471]);
}
if (!split[472].trim().isEmpty()) {
TOTMOARR_AGGR = new Double(split[472]);
}
if (!split[473].trim().isEmpty()) {
TOTLNARR_AGGR = new Double(split[473]);
}
if (!split[474].trim().isEmpty()) {
TOTDVNWFLN_AGGR = new Double(split[474]);
}
if (!split[475].trim().isEmpty()) {
TOTDVNWILN_AGGR = new Double(split[475]);
}
if (!split[476].trim().isEmpty()) {
TOTARR_EXCMORT_AGGR = new Double(split[476]);
}
if (!split[477].trim().isEmpty()) {
HFINW_EXCENDW_AGGR = new Double(split[477]);
}
if (!split[478].trim().isEmpty()) {
HFINW_SUM = new Double(split[478]);
}
if (!split[479].trim().isEmpty()) {
DVVALDBT_AGGR = new Double(split[479]);
}
if (!split[480].trim().isEmpty()) {
DVVALDCOS_AGGR = new Double(split[480]);
}
if (!split[481].trim().isEmpty()) {
DVPAVCUV_AGGR = new Double(split[481]);
}
if (!split[482].trim().isEmpty()) {
DVPFDDV_AGGR = new Double(split[482]);
}
if (!split[483].trim().isEmpty()) {
DVPPVAL_AGGR = new Double(split[483]);
}
if (!split[484].trim().isEmpty()) {
TOTLOS_AGGR = new Double(split[484]);
}
if (!split[485].trim().isEmpty()) {
TOTNLOS_AGGR = new Double(split[485]);
}
if (!split[486].trim().isEmpty()) {
TOTFLNS_AGGR = new Double(split[486]);
}
if (!split[487].trim().isEmpty()) {
TOTHP_AGGR = new Double(split[487]);
}
if (!split[488].trim().isEmpty()) {
TOTLNS_AGGR = new Double(split[488]);
}
if (!split[489].trim().isEmpty()) {
HFINL_AGGR = new Double(split[489]);
}
if (!split[490].trim().isEmpty()) {
HFINWNT_SUM = new Double(split[490]);
}
if (!split[491].trim().isEmpty()) {
DVSPEN_AGGR = new Double(split[491]);
}
if (!split[492].trim().isEmpty()) {
DVPINPVAL_AGGR = new Double(split[492]);
}
if (!split[493].trim().isEmpty()) {
DVDBRWEALTHVAL_AGGR = new Double(split[493]);
}
if (!split[494].trim().isEmpty()) {
TOTPEN_AGGR = new Double(split[494]);
}
if (!split[495].trim().isEmpty()) {
TOTWLTH = new Double(split[495]);
}
if (!split[496].trim().isEmpty()) {
DVPFCURVAL_AGGR = new Double(split[496]);
}
if (!split[497].trim().isEmpty()) {
DVTOTGIR = new Double(split[497]);
}
if (!split[498].trim().isEmpty()) {
DVNIOTHI_AGGR = new Double(split[498]);
}
if (!split[499].trim().isEmpty()) {
HRPDVAGE = new Double(split[499]);
}
if (!split[500].trim().isEmpty()) {
HRPDVAGE9 = new Double(split[500]);
}
if (!split[501].trim().isEmpty()) {
HRPSEX = new Double(split[501]);
}
if (!split[502].trim().isEmpty()) {
HRPNSSEC3 = new Double(split[502]);
}
if (!split[503].trim().isEmpty()) {
HRPDVILO3A = new Double(split[503]);
}
if (!split[504].trim().isEmpty()) {
HRPDVMRDF = new Double(split[504]);
}
if (!split[505].trim().isEmpty()) {
HRPEDATTN1 = new Double(split[505]);
}
if (!split[506].trim().isEmpty()) {
HRPEDATTN2 = new Double(split[506]);
}
if (!split[507].trim().isEmpty()) {
HRPEDATTN3 = new Double(split[507]);
}
if (!split[508].trim().isEmpty()) {
HRPDVECACT = new Double(split[508]);
}
if (!split[509].trim().isEmpty()) {
HRPIOUT1 = new Double(split[509]);
}
if (!split[510].trim().isEmpty()) {
HRPPARTIOUT1 = new Double(split[510]);
}
if (!split[511].trim().isEmpty()) {
OFINAL = new Double(split[511]);
}
if (!split[512].trim().isEmpty()) {
NOUNITS = new Double(split[512]);
}
if (!split[513].trim().isEmpty()) {
DVHSIZE = new Double(split[513]);
}
if (!split[514].trim().isEmpty()) {
GOR = new Double(split[514]);
}
if (!split[515].trim().isEmpty()) {
NUMADISW = new Double(split[515]);
}
if (!split[516].trim().isEmpty()) {
NUMADULT = new Double(split[516]);
}
if (!split[517].trim().isEmpty()) {
NUMCH18 = new Double(split[517]);
}
if (!split[518].trim().isEmpty()) {
NUMCHILD = new Double(split[518]);
}
if (!split[519].trim().isEmpty()) {
NUMCIVPTR = new Double(split[519]);
}
if (!split[520].trim().isEmpty()) {
NUMCPART = new Double(split[520]);
}
if (!split[521].trim().isEmpty()) {
NUMDEPCH = new Double(split[521]);
}
if (!split[522].trim().isEmpty()) {
NUMELCH = new Double(split[522]);
}
if (!split[523].trim().isEmpty()) {
NUMHHLDR = new Double(split[523]);
}
if (!split[524].trim().isEmpty()) {
NUMMPART = new Double(split[524]);
}
if (!split[525].trim().isEmpty()) {
NUMNOELCH = new Double(split[525]);
}
if (!split[526].trim().isEmpty()) {
HHOLDTYPE = new Double(split[526]);
}
if (!split[527].trim().isEmpty()) {
HRPEDLEVEL = new Double(split[527]);
}
if (!split[528].trim().isEmpty()) {
HBEDRM = new Double(split[528]);
}
if (!split[529].trim().isEmpty()) {
CASEW5 = new Double(split[529]);
}
if (!split[530].trim().isEmpty()) {
DVTOTNIR = new Double(split[530]);
}
if (!split[531].trim().isEmpty()) {
DVTOTGIR_3SF = new Double(split[531]);
}
if (!split[532].trim().isEmpty()) {
DVGISE_AGGR = new Double(split[532]);
}
if (!split[533].trim().isEmpty()) {
DVGIPPEN_AGGR = new Double(split[533]);
}
if (!split[534].trim().isEmpty()) {
DVGIEMP_AGGR = new Double(split[534]);
}
if (!split[535].trim().isEmpty()) {
DVBENEFITANNUAL_AGGR = new Double(split[535]);
}
if (!split[536].trim().isEmpty()) {
DVGIINV_AGGR = new Double(split[536]);
}
if (!split[537].trim().isEmpty()) {
DVGRSRENTAMTANNUAL_AGGR = new Double(split[537]);
}
if (!split[538].trim().isEmpty()) {
DVNISE_AGGR = new Double(split[538]);
}
if (!split[539].trim().isEmpty()) {
DVNIPPEN_AGGR = new Double(split[539]);
}
if (!split[540].trim().isEmpty()) {
DVNIEMP_AGGR = new Double(split[540]);
}
if (!split[541].trim().isEmpty()) {
DVNIINV_AGGR = new Double(split[541]);
}
if (!split[542].trim().isEmpty()) {
DVNETRENTAMTANNUAL_AGGR = new Double(split[542]);
}
if (!split[543].trim().isEmpty()) {
DVOINRRANNUAL_AGGR = new Double(split[543]);
}
if (!split[544].trim().isEmpty()) {
DVOINGTANNUAL_AGGR = new Double(split[544]);
}
if (!split[545].trim().isEmpty()) {
DVOINEGANNUAL_AGGR = new Double(split[545]);
}
if (!split[546].trim().isEmpty()) {
DVOINFRANNUAL_AGGR = new Double(split[546]);
}
if (!split[547].trim().isEmpty()) {
DVOINMAANNUAL_AGGR = new Double(split[547]);
}
if (!split[548].trim().isEmpty()) {
DVOINROANNUAL_AGGR = new Double(split[548]);
}
if (!split[549].trim().isEmpty()) {
DVOINOPANNUAL_AGGR = new Double(split[549]);
}
if (!split[550].trim().isEmpty()) {
DVOIGRRANNUAL_AGGR = new Double(split[550]);
}
if (!split[551].trim().isEmpty()) {
DVOIGGTANNUAL_AGGR = new Double(split[551]);
}
if (!split[552].trim().isEmpty()) {
DVOIGEGANNUAL_AGGR = new Double(split[552]);
}
if (!split[553].trim().isEmpty()) {
DVOIGFRANNUAL_AGGR = new Double(split[553]);
}
if (!split[554].trim().isEmpty()) {
DVOIGMAANNUAL_AGGR = new Double(split[554]);
}
if (!split[555].trim().isEmpty()) {
DVOIGROANNUAL_AGGR = new Double(split[555]);
}
if (!split[556].trim().isEmpty()) {
DVOIGOPANNUAL_AGGR = new Double(split[556]);
}
if (!split[557].trim().isEmpty()) {
DVGIOTHR_AGGR = new Double(split[557]);
}
if (!split[558].trim().isEmpty()) {
DVNIOTHR_AGGR = new Double(split[558]);
}
if (!split[559].trim().isEmpty()) {
DVERECNETANNUAL = new Double(split[559]);
}
if (!split[560].trim().isEmpty()) {
DVERVRECNETANNUAL = new Double(split[560]);
}
if (!split[561].trim().isEmpty()) {
DVERECGROSSANNUAL = new Double(split[561]);
}
if (!split[562].trim().isEmpty()) {
DVERVRECGROSSANNUAL = new Double(split[562]);
}
if (!split[563].trim().isEmpty()) {
CASEW4 = new Double(split[563]);
}
if (!split[564].trim().isEmpty()) {
CASEW3 = new Double(split[564]);
}
if (!split[565].trim().isEmpty()) {
CASEW2 = new Double(split[565]);
}
if (!split[566].trim().isEmpty()) {
CASEW1 = new Double(split[566]);
}
}
}
