/**
 * Source code generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas.person;
public class WIGB_Wave2_PERSON_Record extends WIGB_Wave1Or2_PERSON_Record {
private static final long serialVersionUID = 1;
protected Double ACCFRAC;

protected Double ACCFRAC2;

protected Double ASAF2T;

protected Double ASAFT;

protected Double BAMT19;

protected Double BAMTDK19;

protected Double BEN1Q4;

protected Double BENUS;

protected Double BFUND11;

protected Double BFUND12;

protected Double BFUND13;

protected Double BFUND14;

protected Double BFUND15;

protected Double BFUND16;

protected Double BFUND19;

protected Double BFUND20;

protected Double BFUND21;

protected Double BFUND22;

protected Double BFUND23;

protected Double BFUND24;

protected Double BFUND5;

protected Double BFUND6;

protected Double BFUND7;

protected Double BFUND8;

protected Double BPD19;

protected Double BPRFLOSS2;

protected Double BPRFLOSS3;

protected Double BUAMT;

protected Double BUPD;

protected Double BUYLDB1;

protected Double BUYLDB2;

protected Double BUYLDB3;

protected Double BUYLDEBT1;

protected Double BUYLDEBT1_I;

protected Double BUYLDEBT1_IFLAG;

protected Double BUYLDEBT2;

protected Double BUYLDEBT2_I;

protected Double BUYLDEBT2_IFLAG;

protected Double BUYLDEBT3;

protected Double BUYLDEBT3_I;

protected Double BUYLDEBT3_IFLAG;

protected Double BUYLGDST;

protected Double BUYLGDVAL1;

protected Double BUYLGDVAL2;

protected Double BUYLGDVAL3;

protected Double BUYLGDVB1;

protected Double BUYLGDVB1_I;

protected Double BUYLGDVB1_IFLAG;

protected Double BUYLGDVB2;

protected Double BUYLGDVB2_I;

protected Double BUYLGDVB2_IFLAG;

protected Double BUYLGDVB3;

protected Double BUYLGDVB3_I;

protected Double BUYLGDVB3_IFLAG;

protected Double BUYLVAL1;

protected Double BUYLVAL1_I;

protected Double BUYLVAL1_IFLAG;

protected Double BUYLVAL2;

protected Double BUYLVAL2_I;

protected Double BUYLVAL2_IFLAG;

protected Double BUYLVAL3;

protected Double BUYLVAL3_I;

protected Double BUYLVAL3_IFLAG;

protected Double BUYLVB1;

protected Double BUYLVB2;

protected Double BUYLVB3;

protected Double BVALB3;

protected Double BVALWH11;

protected Double BVALWH12;

protected Double BVALWH15;

protected Double BVALWH16;

protected Double BVALWH17;

protected Double BVALWH18;

protected Double BVALWH4;

protected Double BVALWH5;

protected Double BVALWH6;

protected Double CAREDUR;

protected Double CAREHR;

protected Double CAREPS;

protected Integer CASEW2;

protected Double CHECK1;

protected Double CHECK2;

protected Double CHECKNDL;

protected Double CHOIC;

protected Double CHOIC10;

protected Double CHOIC2;

protected Double CHOIC3;

protected Double CHOIC4;

protected Double CHOIC5;

protected Double CHOIC6;

protected Double CHOIC7;

protected Double CHOIC8;

protected Double CHOIC9;

protected Double CHOICP;

protected Double CHOICP10;

protected Double CHOICP11;

protected Double CHOICP18;

protected Double CHOICP19;

protected Double CHOICP2;

protected Double CHOICP3;

protected Double CHOICP4;

protected Double CHOICP5;

protected Double CHOICP6;

protected Double CHOICP7;

protected Double CHOICP8;

protected Double CHOICP9;

protected Double COMBAM;

protected Double COMBPD;

protected Double COMBWK;

protected Double COMMI;

protected Double CONTSUB;

protected Double CTBEN;

protected Double CURSTAT;

protected Double CUTBACK;

protected Double DADVACT1;

protected Double DADVACT2;

protected Double DADVACT3;

protected Double DADVMTH;

protected Double DBURDW1;

protected Double DBURDW7;

protected Double DBURD___W2;

protected Double DC12BEH;

protected Double DC12BEH2;

protected Double DC12BEH3;

protected Double DC12BEH4;

protected Double DC12BEH5;

protected Double DC12OWE;

protected Double DC12OWE2;

protected Double DC12OWE3;

protected Double DC12OWE4;

protected Double DC12OWE5;

protected Double DCNUM2;

protected Double DCNUM2_I;

protected Double DCNUM2_IFLAG;

protected Double DCOINV4;

protected Double DCOINVB4;

protected Double DCOSHV10;

protected Double DCOSHV4;

protected Double DCOSHV5;

protected Double DCOSHV6;

protected Double DCOSHV7;

protected Double DCOSHV8;

protected Double DCOSHV9;

protected Double DCOSHVB3;

protected Double DCVAL1;

protected Double DCVAL2;

protected Double DHBANY08;

protected Double DHBANY08_I;

protected Double DHBANY08_IFLAG;

protected Double DHBANY09;

protected Double DHBANY09_I;

protected Double DHBANY09_IFLAG;

protected Double DHBANY10;

protected Double DHBANY10_I;

protected Double DHBANY10_IFLAG;

protected Double DHBANY11;

protected Double DHBANY11_I;

protected Double DHBANY11_IFLAG;

protected Double DLIND;

protected Double DLNNM;

protected Double DLNNM_I;

protected Double DLNNM_IFLAG;

protected Double DLOLD1;

protected Double DLOLD2;

protected Double DLOLD3;

protected Double DLOLD4;

protected Double DLOLD5;

protected Double DLONM;

protected Double DLWHY13;

protected Double DLWHY14;

protected Double DLWHY19;

protected Double DLWHY20;

protected Double DLWHY21;

protected Double DLWHY24;

protected Double DLWHY25;

protected Double DLWHY26;

protected Double DLWHY27;

protected Double DLWHY28;

protected Double DLWHY30;

protected Double DLWHY31;

protected Double DLWHY32;

protected Double DLWHY33;

protected Double DLWHY34;

protected Double DLWHY35;

protected Double DLWHY6;

protected Double DLWHY7;

protected Double DS12BEH;

protected Double DS12BEH2;

protected Double DS12BEH3;

protected Double DS12BEH4;

protected Double DS12BEH5;

protected Double DS12OWE;

protected Double DS12OWE2;

protected Double DS12OWE3;

protected Double DS12OWE4;

protected Double DS12OWE5;

protected Double DSNUM2;

protected Double DSNUM2_I;

protected Double DSNUM2_IFLAG;

protected Double DTLOWE;

protected Double DTLOWE2;

protected Double DTLOWE2_I;

protected Double DTLOWE2_IFLAG;

protected Double DTLOWE3;

protected Double DTLOWE3_I;

protected Double DTLOWE3_IFLAG;

protected Double DTLOWEB;

protected Double DTLOWEB2;

protected Double DTLOWEB3;

protected Double DTLOWE_I;

protected Double DTLOWE_IFLAG;

protected Double DTLTYPE;

protected Double DTLTYPE2;

protected Double DTLTYPE2_I;

protected Double DTLTYPE2_IFLAG;

protected Double DTLTYPE3;

protected Double DTLTYPE3_I;

protected Double DTLTYPE3_IFLAG;

protected Double DTLTYPE_I;

protected Double DTLTYPE_IFLAG;

protected Double DTTOWE;

protected Double DTTOWE10;

protected Double DTTOWE11;

protected Double DTTOWE12;

protected Double DTTOWE13;

protected Double DTTOWE14;

protected Double DTTOWE15;

protected Double DTTOWE2;

protected Double DTTOWE3;

protected Double DTTOWE4;

protected Double DTTOWE5;

protected Double DTTOWE6;

protected Double DTTOWE7;

protected Double DTTOWE8;

protected Double DTTOWE9;

protected Double DTTOWEB;

protected Double DTTOWEB10;

protected Double DTTOWEB11;

protected Double DTTOWEB12;

protected Double DTTOWEB13;

protected Double DTTOWEB14;

protected Double DTTOWEB15;

protected Double DTTOWEB2;

protected Double DTTOWEB3;

protected Double DTTOWEB4;

protected Double DTTOWEB5;

protected Double DTTOWEB6;

protected Double DTTOWEB7;

protected Double DTTOWEB8;

protected Double DTTOWEB9;

protected Double DVAGE4;

protected Double DVAGE5;

protected Double DVAGE6;

protected Double DVAGE9;

protected Double DVAGEW2BAND;

protected Double DVCOINV4;

protected Double DVDBINC4;

protected Double DVDBINC5;

protected Double DVDBINC6;

protected Double DVDBLUMP4;

protected Double DVDBLUMP5;

protected Double DVDBLUMP6;

protected Double DVDBOPEN2T;

protected Double DVDBOPENT;

protected Double DVNWFLN;

protected Double DVNWILN;

protected Double DVPENINC;

protected Double DVPENINC2;

protected Double DVPUBLPRIV;

protected Double DVSAME;

protected Double DVSPS;

protected Double DVWID;

protected Double ECHLCAR;

protected Double ECHLSUP;

protected Double EDAGE;

protected Double EFOOD;

protected Double EFUEL;

protected Double EINTRO;

protected Double ELARGE1;

protected Double ELARGE2;

protected Double ELARGE3;

protected Double ELARGE4;

protected Double ELARGE5;

protected Double ELARGE6;

protected Double ELARGE7;

protected Double ELARGE8;

protected Double ELGEAMB;

protected Double EMEALS;

protected Double EMPNO;

protected Double ES2000;

protected Double ESATYPE;

protected Double ETRANS;

protected Double EYE1;

protected Double EYE2;

protected Double EYE3;

protected Double EYE4;

protected Double EYE5;

protected Double EYE6;

protected Double EYE7;

protected Double EYE8;

protected Double FBFAED;

protected Double FBMOED;

protected Double FBSIBS;

protected Double FBSITU;

protected Double FBTEN;

protected Double FCISAWD;

protected Double FCISCE;

protected Double FCIWDAB;

protected Double FCIWNUM;

protected Double FNDCASH01;

protected Double FNDCASH02;

protected Double FNDCASH03;

protected Double FNDCASH04;

protected Double FNDCASH05;

protected Double FNDCASH06;

protected Double FNDCASH07;

protected Double FNDCASH08;

protected Double FNDCASH09;

protected Double FNDCASH10;

protected Double FNDCASH11;

protected Double FNDCASH12;

protected Double FNDCASH13;

protected Double FNDCASH14;

protected Double FNDCASH15;

protected Double FNDCASH16;

protected Double FSAVAB;

protected Double FSAVED;

protected Double FSHADA;

protected Double FSHADAB;

protected Double FSHADD;

protected Double FSTYPIN4;

protected Double FSTYPIN5;

protected Double FSTYPSH5;

protected Double FTHECST;

protected Double FTSTUD;

protected Double FWITHD;

protected Double GROSSPER;

protected Double GRSAMK;

protected Double GRSEESM;

protected Double GRSEESW;

protected Double GRSSEMJB;

protected Double GSTDNW;

protected Double HOUSBEN;

protected Double IGDS13;

protected Double IGDS14;

protected Double IGDS17;

protected Double IGDS18;

protected Double IGDS19;

protected Double IGDS20;

protected Double IGDS21;

protected Double IGDS7;

protected Double ILNPBAM;

protected Double ILNPBK;

protected Double ILNUSE01;

protected Double ILNUSE02;

protected Double ILNUSE03;

protected Double ILNUSE04;

protected Double ILNUSE05;

protected Double ILNUSE06;

protected Double ILNUSE07;

protected Double ILNUSE08;

protected Double ILNUSE09;

protected Double ILNUSE10;

protected Double ILNVAL;

protected Double ILNVALB;

protected Double ILOAN;

protected Double INCDROP;

protected Double INDFREQ;

protected Double ISADULT;

protected Double IWAT6;

protected Double LONGIT_CALWGT;

protected Double LVTDAY;

protected Double MARSTA;

protected Double MRECJB;

protected Double MTHECST;

protected Double NEWFCMX;

protected Double NEWGIFT;

protected Double NOFA;

protected Double NWFLNVAL1;

protected Double NWFLNVAL2;

protected Double NWFLNVAL3;

protected Double NWHP;

protected Double NWHPNO;

protected Double NWILNVAL1;

protected Double NWILNVAL2;

protected Double NWILNVAL3;

protected Double NWLN;

protected Double NWLNNO;

protected Double NWLNNO_I;

protected Double NWLNNO_IFLAG;

protected Double NWLN_I;

protected Double NWLN_IFLAG;

protected Double OEXPINC01;

protected Double OEXPINC02;

protected Double OEXPINC03;

protected Double OEXPINC04;

protected Double OEXPINC05;

protected Double OEXPINC06;

protected Double OEXPINC07;

protected Double OEXPINC08;

protected Double OEXPINC09;

protected Double OEXPINC10;

protected Double OEXPINC11;

protected Double OEXPINC12;

protected Double OEXPINC13;

protected Double OEXPINC14;

protected Double OEXPINC15;

protected Double OIMPRS1;

protected Double OIMPRS2;

protected Double OIMPRS3;

protected Double OIMPRS4;

protected Double OIMPRS5;

protected Double OIMPRS6;

protected Double OIMPRS7;

protected Double OIMPRS8;

protected Double OIMPRS9;

protected Double OINTROL;

protected Double OINTROM;

protected Double ONOSAVE1;

protected Double ONOSAVE2;

protected Double ONOSAVE3;

protected Double ONOSAVE4;

protected Double ONOSAVE5;

protected Double ONOSAVE6;

protected Double ONOSAVE7;

protected Double ONOSAVE8;

protected Double ONOSAVE9;

protected Double OPENSAV;

protected Double ORGNSED;

protected Double OSAFERE2;

protected Double OSAFERET;

protected Double OSAV2Y;

protected Double OSAVA;

protected Double OSAVB;

protected Double OSAVC;

protected Double OSAVEXT;

protected Double OSITCH;

protected Double OTHASCH;

protected Double OTHASVB;

protected Double OTHASVL;

protected Double OTRUST15;

protected Double OWAIT;

protected Double OWHYSAV01;

protected Double OWHYSAV02;

protected Double OWHYSAV03;

protected Double OWHYSAV04;

protected Double OWHYSAV05;

protected Double OWHYSAV06;

protected Double OWHYSAV07;

protected Double OWHYSAV08;

protected Double OWHYSAV09;

protected Double OWHYSAV10;

protected Double OWRSRS01;

protected Double OWRSRS02;

protected Double OWRSRS03;

protected Double OWRSRS04;

protected Double OWRSRS05;

protected Double OWRSRS06;

protected Double OWRSRS07;

protected Double OWRSRS08;

protected Double OWRSRS09;

protected Double OWRSRS10;

protected Double PADDFUT;

protected Double PADDFUT2;

protected Double PAGESTP;

protected Double PANYO;

protected Double PANYO_I;

protected Double PANYO_IFLAG;

protected Double PASTMN;

protected Double PASTMN2;

protected Double PASTYR;

protected Double PASTYR2;

protected Double PAVCAM;

protected Double PAVCAM2;

protected Double PAVCFG;

protected Double PAVCFG2;

protected Double PAVCFR;

protected Double PAVCFR2;

protected Double PAVCH;

protected Double PAVCH2;

protected Double PAVCIN;

protected Double PAVCIN2;

protected Double PAVCPR;

protected Double PAVCPR2;

protected Double PAVCUV;

protected Double PAVCUV2;

protected Double PAVCUV2_I;

protected Double PAVCUV2_IFLAG;

protected Double PAVCUV_I;

protected Double PAVCUV_IFLAG;

protected Double PAVCVB;

protected Double PAVCVB2;

protected Double PAVDOC;

protected Double PAVDOC2;

protected Double PAYINC7;

protected Double PBDOCS;

protected Double PBDOCS2;

protected Double PBFRAC;

protected Double PBFRAC2;

protected Double PBFRAC2_I;

protected Double PBFRAC2_IFLAG;

protected Double PBFRAC_I;

protected Double PBFRAC_IFLAG;

protected Double PBINCA;

protected Double PBINCA2;

protected Double PBINCF;

protected Double PBINCF2;

protected Double PBINCH;

protected Double PBINCH2;

protected Double PBLMVB;

protected Double PBLMVB2;

protected Double PBLUMV;

protected Double PBLUMV2;

protected Double PBLUMV2_I;

protected Double PBLUMV2_IFLAG;

protected Double PBLUMV_I;

protected Double PBLUMV_IFLAG;

protected Double PBQUAL;

protected Double PBQUAL2;

protected Double PBQUAL2_I;

protected Double PBQUAL2_IFLAG;

protected Double PBQUAL_I;

protected Double PBQUAL_IFLAG;

protected Double PBSTMN;

protected Double PBSTMN2;

protected Double PBSTYR;

protected Double PBSTYR2;

protected Double PCCFST1;

protected Double PCCFST1_I;

protected Double PCCFST1_IFLAG;

protected Double PCCFST2;

protected Double PCCFST2_I;

protected Double PCCFST2_IFLAG;

protected Double PCCFST3;

protected Double PCCFST3_I;

protected Double PCCFST3_IFLAG;

protected Double PCDOCS;

protected Double PCDOCS2;

protected Double PCNEW;

protected Double PCNUM;

protected Double PCONT;

protected Double PCONT_I;

protected Double PCONT_IFLAG;

protected Double PCSTMN;

protected Double PCSTMN2;

protected Double PCSTYR;

protected Double PCSTYR2;

protected Double PDBCAL;

protected Double PDBCAL2;

protected Double PDCVAL;

protected Double PDCVAL2;

protected Double PDCVAL2_I;

protected Double PDCVAL2_IFLAG;

protected Double PDCVAL_I;

protected Double PDCVAL_IFLAG;

protected Double PDCVB;

protected Double PDCVB2;

protected Double PERMJB;

protected Double PERNOWK;

protected Integer PERSONW2;

protected Double PESAME;

protected Double PESAME_I;

protected Double PESAME_IFLAG;

protected Double PEWYNO05;

protected Double PFACCU3;

protected Double PFACCU5;

protected Double PFACCU6;

protected Double PFANEH;

protected Double PFANEH2;

protected Double PFANEH3;

protected Double PFANEXM;

protected Double PFANEXY;

protected Double PFANGA;

protected Double PFANGA2;

protected Double PFANGA3;

protected Double PFANIF;

protected Double PFANIF2;

protected Double PFANIF3;

protected Double PFANJT;

protected Double PFANJT2;

protected Double PFANJT3;

protected Double PFANLM;

protected Double PFANLM2;

protected Double PFANN1;

protected Double PFANN11;

protected Double PFANN12;

protected Double PFANN2;

protected Double PFANN3;

protected Double PFANN6;

protected Double PFANN7;

protected Double PFANVB;

protected Double PFANVI;

protected Double PFANVI2;

protected Double PFANVI3;

protected Double PFBEG;

protected Double PFBEG2;

protected Double PFBEG3;

protected Double PFBEG4;

protected Double PFBEG5;

protected Double PFBEG6;

protected Double PFCASH;

protected Double PFCASH2;

protected Double PFCASH2_I;

protected Double PFCASH2_IFLAG;

protected Double PFCASH3;

protected Double PFCASH3_I;

protected Double PFCASH3_IFLAG;

protected Double PFCASH4;

protected Double PFCASH4_I;

protected Double PFCASH4_IFLAG;

protected Double PFCASH_I;

protected Double PFCASH_IFLAG;

protected Double PFCRET1;

protected Double PFCRET2;

protected Double PFCRET3;

protected Double PFCRET4;

protected Double PFCRET5;

protected Double PFCRET6;

protected Double PFCURV;

protected Double PFCURV2;

protected Double PFCURV2_I;

protected Double PFCURV2_IFLAG;

protected Double PFCURV3;

protected Double PFCURV3_I;

protected Double PFCURV3_IFLAG;

protected Double PFCURV4;

protected Double PFCURV4_I;

protected Double PFCURV4_IFLAG;

protected Double PFCURV5;

protected Double PFCURV5_I;

protected Double PFCURV5_IFLAG;

protected Double PFCURV6;

protected Double PFCURV6_I;

protected Double PFCURV6_IFLAG;

protected Double PFCURV_I;

protected Double PFCURV_IFLAG;

protected Double PFCUVB;

protected Double PFCUVB2;

protected Double PFCUVB3;

protected Double PFCUVB4;

protected Double PFCUVB5;

protected Double PFCUVB6;

protected Double PFDDV;

protected Double PFDDV2;

protected Double PFDDV2_I;

protected Double PFDDV2_IFLAG;

protected Double PFDDV3;

protected Double PFDDV3_I;

protected Double PFDDV3_IFLAG;

protected Double PFDDV4;

protected Double PFDDV4_I;

protected Double PFDDV4_IFLAG;

protected Double PFDDV5;

protected Double PFDDV6;

protected Double PFDDVB;

protected Double PFDDVB2;

protected Double PFDDVB3;

protected Double PFDDVB4;

protected Double PFDDVB5;

protected Double PFDDVB6;

protected Double PFDDV_I;

protected Double PFDDV_IFLAG;

protected Double PFDOCS;

protected Double PFDOCS2;

protected Double PFDOCS3;

protected Double PFDOCS4;

protected Double PFDOCS5;

protected Double PFDOCS6;

protected Double PFDRAW;

protected Double PFDRAW2_I;

protected Double PFDRAW2_IFLAG;

protected Double PFDRAW3;

protected Double PFDRAW3_I;

protected Double PFDRAW3_IFLAG;

protected Double PFDRAW4;

protected Double PFDRAW4_I;

protected Double PFDRAW4_IFLAG;

protected Double PFDRAW5;

protected Double PFDRAW6;

protected Double PFDRAW_I;

protected Double PFDRAW_IFLAG;

protected Double PFDRA___W2;

protected Double PFDRINC;

protected Double PFDRINC2;

protected Double PFDRINC3;

protected Double PFDRINC4;

protected Double PFDRINC5;

protected Double PFDRINC6;

protected Double PFDRINCB;

protected Double PFDRINCB2;

protected Double PFDRINCB3;

protected Double PFDRINCB4;

protected Double PFDRINCB5;

protected Double PFDRINCB6;

protected Double PFDRVB;

protected Double PFDRVB2;

protected Double PFDRVB3;

protected Double PFDRVB4;

protected Double PFDRVB5;

protected Double PFDRVB6;

protected Double PFDRVI;

protected Double PFDRVI2;

protected Double PFDRVI3;

protected Double PFDRVI4;

protected Double PFDRVI5;

protected Double PFDRVI6;

protected Double PFEN;

protected Double PFEND;

protected Double PFEND2;

protected Double PFEND3;

protected Double PFEND4;

protected Double PFEND5;

protected Double PFEND6;

protected Double PFENNUM;

protected Double PFFAAG;

protected Double PFFAAG2;

protected Double PFFAAG3;

protected Double PFFAAG4;

protected Double PFFAAG5;

protected Double PFFAAG6;

protected Double PFFAN11;

protected Double PFFAN16;

protected Double PFFAN2;

protected Double PFFAN6;

protected Double PFFAWH1;

protected Double PFFAWH13;

protected Double PFFAWH7;

protected Double PFINCA;

protected Double PFINCA2;

protected Double PFINCA2_I;

protected Double PFINCA2_IFLAG;

protected Double PFINCA3;

protected Double PFINCA3_I;

protected Double PFINCA3_IFLAG;

protected Double PFINCA4;

protected Double PFINCA4_I;

protected Double PFINCA4_IFLAG;

protected Double PFINCA5;

protected Double PFINCA5_I;

protected Double PFINCA5_IFLAG;

protected Double PFINCA6;

protected Double PFINCA6_I;

protected Double PFINCA6_IFLAG;

protected Double PFINCA_I;

protected Double PFINCA_IFLAG;

protected Double PFINCP;

protected Double PFINCP2;

protected Double PFINCP2_I;

protected Double PFINCP2_IFLAG;

protected Double PFINCP3;

protected Double PFINCP3_I;

protected Double PFINCP3_IFLAG;

protected Double PFINCP4;

protected Double PFINCP4_I;

protected Double PFINCP4_IFLAG;

protected Double PFINCP5;

protected Double PFINCP5_I;

protected Double PFINCP5_IFLAG;

protected Double PFINCP6;

protected Double PFINCP6_I;

protected Double PFINCP6_IFLAG;

protected Double PFINCP_I;

protected Double PFINCP_IFLAG;

protected Double PFLMUS;

protected Double PFLMUS2;

protected Double PFLMUS3;

protected Double PFLMUS4;

protected Double PFLMUS5;

protected Double PFLMUS6;

protected Double PFLMV;

protected Double PFLMV2;

protected Double PFLMV3;

protected Double PFLMV4;

protected Double PFLMV5;

protected Double PFLMV6;

protected Double PFLMVB;

protected Double PFLMVB2;

protected Double PFLMVB3;

protected Double PFLMVB4;

protected Double PFLMVB5;

protected Double PFLMVB6;

protected Double PFLUM;

protected Double PFLUM2;

protected Double PFLUM2_I;

protected Double PFLUM2_IFLAG;

protected Double PFLUM3;

protected Double PFLUM3_I;

protected Double PFLUM3_IFLAG;

protected Double PFLUM4;

protected Double PFLUM4_I;

protected Double PFLUM4_IFLAG;

protected Double PFLUM5;

protected Double PFLUM5_I;

protected Double PFLUM5_IFLAG;

protected Double PFLUM6;

protected Double PFLUM6_I;

protected Double PFLUM6_IFLAG;

protected Double PFLUMALL;

protected Double PFLUMALL2;

protected Double PFLUMALL2_I;

protected Double PFLUMALL2_IFLAG;

protected Double PFLUMALL3;

protected Double PFLUMALL3_I;

protected Double PFLUMALL3_IFLAG;

protected Double PFLUMALL4;

protected Double PFLUMALL4_I;

protected Double PFLUMALL4_IFLAG;

protected Double PFLUMALL_I;

protected Double PFLUMALL_IFLAG;

protected Double PFLUMV;

protected Double PFLUMV2;

protected Double PFLUMV2_I;

protected Double PFLUMV2_IFLAG;

protected Double PFLUMV3;

protected Double PFLUMV3_I;

protected Double PFLUMV3_IFLAG;

protected Double PFLUMV4;

protected Double PFLUMV4_I;

protected Double PFLUMV4_IFLAG;

protected Double PFLUMV5;

protected Double PFLUMV5_I;

protected Double PFLUMV5_IFLAG;

protected Double PFLUMV6;

protected Double PFLUMV6_I;

protected Double PFLUMV6_IFLAG;

protected Double PFLUMV_I;

protected Double PFLUMV_IFLAG;

protected Double PFLUM_I;

protected Double PFLUM_IFLAG;

protected Double PFLUVB;

protected Double PFLUVB2;

protected Double PFLUVB3;

protected Double PFLUVB4;

protected Double PFLUVB5;

protected Double PFLUVB6;

protected Double PFNEW;

protected Double PFNEWNO;

protected Double PFNEWNO_I;

protected Double PFNEWNO_IFLAG;

protected Double PFNEW_I;

protected Double PFNEW_IFLAG;

protected Double PFNUM2;

protected Double PFOCTY;

protected Double PFOCTY2;

protected Double PFOCTY2_I;

protected Double PFOCTY2_IFLAG;

protected Double PFOCTY3;

protected Double PFOCTY3_I;

protected Double PFOCTY3_IFLAG;

protected Double PFOCTY4;

protected Double PFOCTY4_I;

protected Double PFOCTY4_IFLAG;

protected Double PFOCTY5;

protected Double PFOCTY5_I;

protected Double PFOCTY5_IFLAG;

protected Double PFOCTY6;

protected Double PFOCTY6_I;

protected Double PFOCTY6_IFLAG;

protected Double PFOCTY_I;

protected Double PFOCTY_IFLAG;

protected Double PFPENVB;

protected Double PFPENVB2;

protected Double PFPENVB3;

protected Double PFPENVB4;

protected Double PFPENVB5;

protected Double PFPENVB6;

protected Double PFPENVI;

protected Double PFPENVI2;

protected Double PFPENVI3;

protected Double PFPENVI4;

protected Double PFPENVI5;

protected Double PFPENVI6;

protected Double PFREC;

protected Double PFREC2;

protected Double PFREC2_I;

protected Double PFREC2_IFLAG;

protected Double PFREC3;

protected Double PFREC3_I;

protected Double PFREC3_IFLAG;

protected Double PFREC4;

protected Double PFREC4_I;

protected Double PFREC4_IFLAG;

protected Double PFREC5;

protected Double PFREC5_I;

protected Double PFREC5_IFLAG;

protected Double PFREC6;

protected Double PFREC6_I;

protected Double PFREC6_IFLAG;

protected Double PFREC_I;

protected Double PFREC_IFLAG;

protected Double PFREM;

protected Double PFREM2;

protected Double PFREM2_I;

protected Double PFREM2_IFLAG;

protected Double PFREM3;

protected Double PFREM3_I;

protected Double PFREM3_IFLAG;

protected Double PFREM4;

protected Double PFREM4_I;

protected Double PFREM4_IFLAG;

protected Double PFREM5;

protected Double PFREM6;

protected Double PFREM_I;

protected Double PFREM_IFLAG;

protected Double PFSIPTY1;

protected Double PFSIPTY10;

protected Double PFSIPTY11;

protected Double PFSIPTY12;

protected Double PFSIPTY13;

protected Double PFSIPTY14;

protected Double PFSIPTY15;

protected Double PFSIPTY16;

protected Double PFSIPTY17;

protected Double PFSIPTY18;

protected Double PFSIPTY19;

protected Double PFSIPTY2;

protected Double PFSIPTY22;

protected Double PFSIPTY23;

protected Double PFSIPTY24;

protected Double PFSIPTY4;

protected Double PFSIPTY5;

protected Double PFSIPTY6;

protected Double PFSIPTY7;

protected Double PFSIPTY8;

protected Double PFSIPTY9;

protected Double PFSTMM;

protected Double PFSTMM2;

protected Double PFSTMM3;

protected Double PFSTMM4;

protected Double PFSTMM5;

protected Double PFSTMM6;

protected Double PFSTMY;

protected Double PFSTMY2;

protected Double PFSTMY3;

protected Double PFSTMY4;

protected Double PFSTMY5;

protected Double PFSTMY6;

protected Double PFTYP;

protected Double PFTYP2;

protected Double PFTYP2_I;

protected Double PFTYP2_IFLAG;

protected Double PFTYP3;

protected Double PFTYP3_I;

protected Double PFTYP3_IFLAG;

protected Double PFTYP4;

protected Double PFTYP4_I;

protected Double PFTYP4_IFLAG;

protected Double PFTYP5;

protected Double PFTYP5_I;

protected Double PFTYP5_IFLAG;

protected Double PFTYP6;

protected Double PFTYP6_I;

protected Double PFTYP6_IFLAG;

protected Double PFTYP_I;

protected Double PFTYP_IFLAG;

protected Double PIRREG;

protected Double PIRREG2;

protected Double PMORTC;

protected Double PMORTC2;

protected Double PMORTC3;

protected Double PNEWMEM;

protected Double PNOWK;

protected Double PNOWKLN;

protected Double PNUMOS;

protected Double POADD1;

protected Double POADD1_I;

protected Double POADD1_IFLAG;

protected Double POADD2;

protected Double POADD2_I;

protected Double POADD2_IFLAG;

protected Double POADD3;

protected Double POADD3_I;

protected Double POADD3_IFLAG;

protected Double POADD4;

protected Double POADD4_I;

protected Double POADD4_IFLAG;

protected Double POADD5;

protected Double POADD5_I;

protected Double POADD5_IFLAG;

protected Double POADD6;

protected Double POADD6_I;

protected Double POADD6_IFLAG;

protected Double POANEH;

protected Double POANEH2;

protected Double POANEXM;

protected Double POANEXY;

protected Double POANGA;

protected Double POANGA2;

protected Double POANIF;

protected Double POANIF2;

protected Double POANJT;

protected Double POANJT2;

protected Double POANLM;

protected Double POANLM2;

protected Double POANN1;

protected Double POANN2;

protected Double POANN3;

protected Double POANN4;

protected Double POANN5;

protected Double POANN6;

protected Double POANN7;

protected Double POANN8;

protected Double POANVB;

protected Double POANVB2;

protected Double POANVI;

protected Double POANVI2;

protected Double POCASH;

protected Double POCASH2;

protected Double POCNAM2;

protected Double POCNAM3;

protected Double POCNDRS1;

protected Double POCNDRS10;

protected Double POCNDRS11;

protected Double POCNDRS12;

protected Double POCNDRS2;

protected Double POCNDRS3;

protected Double POCNDRS4;

protected Double POCNDRS5;

protected Double POCNDRS6;

protected Double POCNDRS7;

protected Double POCNDRS8;

protected Double POCNDRS9;

protected Double POCNFG;

protected Double POCNFG2;

protected Double POCNFR;

protected Double POCNFR2;

protected Double POCNHOW;

protected Double POCNHO___W2;

protected Double POCNLRS1;

protected Double POCNLRS2;

protected Double POCNLRS3;

protected Double POCNLRS4;

protected Double POCNLRS5;

protected Double POCNLRS6;

protected Double POCNLRS7;

protected Double POCNLRS8;

protected Double POCNMSC2;

protected Double POCNPLN;

protected Double POCNPLN2;

protected Double POCNPR;

protected Double POCNPR2;

protected Double POCNVOL;

protected Double POCNVOL2;

protected Double POCONCH;

protected Double POCONCH2;

protected Double POCONH;

protected Double POCONH2;

protected Double POCTYP;

protected Double POCTYP2;

protected Double POCTYP2_I;

protected Double POCTYP2_IFLAG;

protected Double POCTYP_I;

protected Double POCTYP_IFLAG;

protected Double PODRINC;

protected Double PODRINC2;

protected Double PODRINCB;

protected Double PODRINCB2;

protected Double PODRVB;

protected Double PODRVB2;

protected Double PODRVI;

protected Double PODRVI2;

protected Double POEMAM;

protected Double POEMAM2;

protected Double POEMFG;

protected Double POEMFG2;

protected Double POEMFR;

protected Double POEMFR2;

protected Double POEMP;

protected Double POEMP2;

protected Double POEMPH;

protected Double POEMPH2;

protected Double POEMPR;

protected Double POEMPR2;

protected Double POFAAG;

protected Double POFAAG2;

protected Double POFAN1;

protected Double POFAN10;

protected Double POFAN11;

protected Double POFAN12;

protected Double POFAN2;

protected Double POFAN3;

protected Double POFAN4;

protected Double POFAN5;

protected Double POFAN6;

protected Double POFAN7;

protected Double POFAN8;

protected Double POFAN9;

protected Double POFAWH1;

protected Double POFAWH10;

protected Double POFAWH11;

protected Double POFAWH12;

protected Double POFAWH2;

protected Double POFAWH3;

protected Double POFAWH4;

protected Double POFAWH5;

protected Double POFAWH6;

protected Double POFAWH7;

protected Double POFAWH8;

protected Double POFAWH9;

protected Double POJOIN;

protected Double POJOIN2;

protected Double POLMUS1;

protected Double POLMUS10;

protected Double POLMUS11;

protected Double POLMUS12;

protected Double POLMUS2;

protected Double POLMUS3;

protected Double POLMUS4;

protected Double POLMUS5;

protected Double POLMUS6;

protected Double POLMUS7;

protected Double POLMUS8;

protected Double POLMUS9;

protected Double POLMV;

protected Double POLMV2;

protected Double POLMVB;

protected Double POLMVB2;

protected Double POLSYR;

protected Double POLSYR2;

protected Double POLUM;

protected Double POLUM2;

protected Double POMETH;

protected Double POMETH2;

protected Double POPENVB;

protected Double POPENVB2;

protected Double POPENVI;

protected Double POPENVI2;

protected Double POPYCH;

protected Double POPYCH2;

protected Double PORAGE2T;

protected Double PORAGET;

protected Double POYRAM;

protected Double POYRAM2;

protected Double PPACCU;

protected Double PPACCU2;

protected Double PPACCU3;

protected Double PPANEH;

protected Double PPANEH2;

protected Double PPANEH3;

protected Double PPANEXM;

protected Double PPANEXM2;

protected Double PPANEXM3;

protected Double PPANEXY;

protected Double PPANEXY2;

protected Double PPANEXY3;

protected Double PPANGA;

protected Double PPANGA2;

protected Double PPANGA3;

protected Double PPANIF;

protected Double PPANIF2;

protected Double PPANIF3;

protected Double PPANJT;

protected Double PPANJT2;

protected Double PPANJT3;

protected Double PPANLM;

protected Double PPANLM2;

protected Double PPANLM3;

protected Double PPANN1;

protected Double PPANN10;

protected Double PPANN11;

protected Double PPANN12;

protected Double PPANN2;

protected Double PPANN3;

protected Double PPANN4;

protected Double PPANN5;

protected Double PPANN6;

protected Double PPANN7;

protected Double PPANN8;

protected Double PPANN9;

protected Double PPANVB;

protected Double PPANVB2;

protected Double PPANVB3;

protected Double PPANVI;

protected Double PPANVI2;

protected Double PPANVI3;

protected Double PPCASH;

protected Double PPCASH2;

protected Double PPCASH3;

protected Double PPCNDRS1;

protected Double PPCNDRS17;

protected Double PPCNDRS2;

protected Double PPCNDRS3;

protected Double PPCNDRS9;

protected Double PPCNHOW;

protected Double PPCNHOW3;

protected Double PPCNHO___W2;

protected Double PPCNLRS1;

protected Double PPCNLRS2;

protected Double PPCNLRS3;

protected Double PPCNLRS5;

protected Double PPCNLRS9;

protected Double PPCNPLN;

protected Double PPCNPLN2;

protected Double PPCNPLN3;

protected Double PPCONCH;

protected Double PPCONCH2;

protected Double PPCONCH3;

protected Double PPDOCS;

protected Double PPDOCS2;

protected Double PPDOCS3;

protected Double PPDRINC;

protected Double PPDRINC2;

protected Double PPDRINC3;

protected Double PPDRINCB;

protected Double PPDRINCB2;

protected Double PPDRVB;

protected Double PPDRVB2;

protected Double PPDRVB3;

protected Double PPDRVI;

protected Double PPDRVI2;

protected Double PPDRVI3;

protected Double PPEIRA;

protected Double PPEIRA2;

protected Double PPEIRA3;

protected Double PPEIRF;

protected Double PPEIRF2;

protected Double PPEIRF3;

protected Double PPEIRH;

protected Double PPEIRH2;

protected Double PPEIRH3;

protected Double PPEMAM;

protected Double PPEMAM2;

protected Double PPEMAM3;

protected Double PPEMFR;

protected Double PPEMFR2;

protected Double PPEMFR3;

protected Double PPEMP;

protected Double PPEMP2;

protected Double PPEMP3;

protected Double PPEMPH;

protected Double PPEMPH2;

protected Double PPEMPH3;

protected Double PPEMPR;

protected Double PPEMPR2;

protected Double PPEMPR3;

protected Double PPEVRG;

protected Double PPEVRG2;

protected Double PPEVRG3;

protected Double PPFAAG;

protected Double PPFAAG2;

protected Double PPFAAG3;

protected Double PPFAN1;

protected Double PPFAN10;

protected Double PPFAN11;

protected Double PPFAN12;

protected Double PPFAN13;

protected Double PPFAN14;

protected Double PPFAN15;

protected Double PPFAN2;

protected Double PPFAN3;

protected Double PPFAN4;

protected Double PPFAN5;

protected Double PPFAN6;

protected Double PPFAN7;

protected Double PPFAN8;

protected Double PPFAN9;

protected Double PPFAWH1;

protected Double PPFAWH10;

protected Double PPFAWH11;

protected Double PPFAWH12;

protected Double PPFAWH13;

protected Double PPFAWH14;

protected Double PPFAWH15;

protected Double PPFAWH16;

protected Double PPFAWH17;

protected Double PPFAWH18;

protected Double PPFAWH19;

protected Double PPFAWH2;

protected Double PPFAWH20;

protected Double PPFAWH21;

protected Double PPFAWH3;

protected Double PPFAWH4;

protected Double PPFAWH5;

protected Double PPFAWH6;

protected Double PPFAWH7;

protected Double PPFAWH8;

protected Double PPFAWH9;

protected Double PPIRNO;

protected Double PPIRNO2;

protected Double PPIRNO3;

protected Double PPIRRA;

protected Double PPIRRA2;

protected Double PPIRRA3;

protected Double PPIRRF;

protected Double PPIRRF2;

protected Double PPIRRF3;

protected Double PPIRRH;

protected Double PPIRRH2;

protected Double PPIRRH3;

protected Double PPIRRY;

protected Double PPIRRY2;

protected Double PPIRRY3;

protected Double PPLASY;

protected Double PPLASY2;

protected Double PPLASY3;

protected Double PPLMUS;

protected Double PPLMUS2;

protected Double PPLMUS3;

protected Double PPLMV;

protected Double PPLMV2;

protected Double PPLMV3;

protected Double PPLMVB;

protected Double PPLMVB2;

protected Double PPLMVB3;

protected Double PPLSTA;

protected Double PPLSTA2;

protected Double PPLSTA3;

protected Double PPLSTP;

protected Double PPLSTP2;

protected Double PPLSTP3;

protected Double PPLUM;

protected Double PPLUM2;

protected Double PPLUM3;

protected Double PPNINS;

protected Double PPNINS2;

protected Double PPNINS3;

protected Double PPORG;

protected Double PPORG2;

protected Double PPORG3;

protected Double PPPAY;

protected Double PPPAY2;

protected Double PPPAY3;

protected Double PPRGAM;

protected Double PPRGAM2;

protected Double PPRGAM3;

protected Double PPRGFG;

protected Double PPRGFG2;

protected Double PPRGFG3;

protected Double PPRGFR;

protected Double PPRGFR2;

protected Double PPRGFR3;

protected Double PPRGH;

protected Double PPRGH2;

protected Double PPRGH3;

protected Double PPRGPE;

protected Double PPRGPE2;

protected Double PPRGPE3;

protected Double PPSIPP;

protected Double PPSIPP2;

protected Double PPSIPP3;

protected Double PPSTMN;

protected Double PPSTMN2;

protected Double PPSTMN3;

protected Double PPSTYR;

protected Double PPSTYR2;

protected Double PPSTYR3;

protected Double PPTYP;

protected Double PPTYP2;

protected Double PPTYP3;

protected Double PPVAL;

protected Double PPVAL2;

protected Double PPVAL2_I;

protected Double PPVAL2_IFLAG;

protected Double PPVAL3;

protected Double PPVAL3_I;

protected Double PPVAL3_IFLAG;

protected Double PPVALB;

protected Double PPVALB2;

protected Double PPVALB3;

protected Double PPVAL_I;

protected Double PPVAL_IFLAG;

protected Double PPYRST;

protected Double PPYRST2;

protected Double PPYRST3;

protected Double PPYSTP1;

protected Double PPYSTP15;

protected Double PPYSTP2;

protected Double PPYSTP3;

protected Double PPYSTP8;

protected Double PPYSTP9;

protected Double PRACCU2;

protected Double PRACCU3;

protected Double PRACCU5;

protected Double PRACCU6;

protected Double PREVPENS;

protected Double PRODTS01;

protected Double PRODTS02;

protected Double PRODTS03;

protected Double PRODTS04;

protected Double PRODTS05;

protected Double PRODTS06;

protected Double PRODTS07;

protected Double PRODTS08;

protected Double PRODTS09;

protected Double PRODTS10;

protected Double PRODTS11;

protected Double PRODTS12;

protected Double PRODTS201;

protected Double PRODTS202;

protected Double PRODTS203;

protected Double PRODTS204;

protected Double PRODTS205;

protected Double PRODTS206;

protected Double PRODTS207;

protected Double PRODTS208;

protected Double PRODTS209;

protected Double PRODTS210;

protected Double PROXPERS;

protected Double PROXYNUM;

protected Double PSPEXPA;

protected Double PSPEXPA_I;

protected Double PSPEXPA_IFLAG;

protected Double PSPEXPH;

protected Double PSPEXPH_I;

protected Double PSPEXPH_IFLAG;

protected Double PSPLUM;

protected Double PSPLUVAL;

protected Double PSPSE;

protected Double PSPSE_I;

protected Double PSPSE_IFLAG;

protected Double PSTYPE1;

protected Double PSTYPE10;

protected Double PSTYPE11;

protected Double PSTYPE12;

protected Double PSTYPE13;

protected Double PSTYPE14;

protected Double PSTYPE15;

protected Double PSTYPE16;

protected Double PSTYPE17;

protected Double PSTYPE18;

protected Double PSTYPE19;

protected Double PSTYPE2;

protected Double PSTYPE20;

protected Double PSTYPE3;

protected Double PSTYPE4;

protected Double PSTYPE5;

protected Double PSTYPE6;

protected Double PSTYPE7;

protected Double PSTYPE8;

protected Double PSTYPE9;

protected Double PWLUM;

protected Double PWLUVAL;

protected Double R01;

protected Double R02;

protected Double R03;

protected Double R04;

protected Double R05;

protected Double R06;

protected Double R07;

protected Double R08;

protected Double R09;

protected Double R10;

protected Double R11;

protected Double RNYDAY;

protected Double SAMEJOB1;

protected Double SAMEJOB2;

protected Double SAMEJOB3;

protected Double SAMEJOB4;

protected Double SAMEJOB5;

protected Double SAMEJOB6;

protected Double SAMEMP;

protected Double SAMJOB;

protected Double SEAMT;

protected Double SECTOR;

protected Double SECTR2;

protected Double SICCODE;

protected Double SJ12G;

protected Double SJ12N;

protected Double SJGRS;

protected Double SJNET;

protected Double SJSEG;

protected Double SMTPEN;

protected Double SOURC01;

protected Double SOURC02;

protected Double SOURC03;

protected Double SOURC04;

protected Double SOURC05;

protected Double SOURC06;

protected Double SOURC07;

protected Double SOURC08;

protected Double SOURC09;

protected Double SOURC103;

protected Double SOURC104;

protected Double SOURC105;

protected Double SOURC106;

protected Double SOURC107;

protected Double SOURC108;

protected Double SOURC109;

protected Double SOURC120;

protected Double SOURC121;

protected Double SOURC122;

protected Double SOURC123;

protected Double SOURC124;

protected Double SOURC125;

protected Double SOURC126;

protected Double SOURC137;

protected Double SOURC154;

protected Double SOURC155;

protected Double SOURC156;

protected Double SOURC172;

protected Double SOURC18;

protected Double SOURC19;

protected Double SOURC2;

protected Double SOURC20;

protected Double SOURC21;

protected Double SOURC22;

protected Double SOURC23;

protected Double SOURC24;

protected Double SOURC25;

protected Double SOURC26;

protected Double SOURC2P;

protected Double SOURC2P10;

protected Double SOURC2P11;

protected Double SOURC2P2;

protected Double SOURC2P3;

protected Double SOURC2P4;

protected Double SOURC2P5;

protected Double SOURC2P6;

protected Double SOURC2P7;

protected Double SOURC2P8;

protected Double SOURC2P9;

protected Double SOURC3;

protected Double SOURC35;

protected Double SOURC36;

protected Double SOURC37;

protected Double SOURC38;

protected Double SOURC39;

protected Double SOURC4;

protected Double SOURC40;

protected Double SOURC41;

protected Double SOURC5;

protected Double SOURC52;

protected Double SOURC53;

protected Double SOURC54;

protected Double SOURC55;

protected Double SOURC56;

protected Double SOURC57;

protected Double SOURC58;

protected Double SOURC6;

protected Double SOURC69;

protected Double SOURC7;

protected Double SOURC70;

protected Double SOURC71;

protected Double SOURC72;

protected Double SOURC73;

protected Double SOURC74;

protected Double SOURC75;

protected Double SOURC8;

protected Double SOURC86;

protected Double SOURC87;

protected Double SOURC88;

protected Double SOURC89;

protected Double SOURC9;

protected Double SOURC90;

protected Double SOURC91;

protected Double SOURC92;

protected Double SOURCP01;

protected Double SOURCP02;

protected Double SOURCP03;

protected Double SOURCP04;

protected Double SOURCP05;

protected Double SOURCP06;

protected Double SOURCP07;

protected Double SOURCP08;

protected Double SOURCP09;

protected Double SOURCP102;

protected Double SOURCP103;

protected Double SOURCP104;

protected Double SOURCP105;

protected Double SOURCP106;

protected Double SOURCP107;

protected Double SOURCP11;

protected Double SOURCP12;

protected Double SOURCP120;

protected Double SOURCP121;

protected Double SOURCP122;

protected Double SOURCP123;

protected Double SOURCP124;

protected Double SOURCP125;

protected Double SOURCP137;

protected Double SOURCP154;

protected Double SOURCP155;

protected Double SOURCP171;

protected Double SOURCP18;

protected Double SOURCP19;

protected Double SOURCP20;

protected Double SOURCP21;

protected Double SOURCP22;

protected Double SOURCP23;

protected Double SOURCP24;

protected Double SOURCP25;

protected Double SOURCP26;

protected Double SOURCP27;

protected Double SOURCP28;

protected Double SOURCP290;

protected Double SOURCP35;

protected Double SOURCP36;

protected Double SOURCP37;

protected Double SOURCP38;

protected Double SOURCP39;

protected Double SOURCP40;

protected Double SOURCP41;

protected Double SOURCP42;

protected Double SOURCP43;

protected Double SOURCP44;

protected Double SOURCP52;

protected Double SOURCP53;

protected Double SOURCP54;

protected Double SOURCP55;

protected Double SOURCP56;

protected Double SOURCP57;

protected Double SOURCP58;

protected Double SOURCP59;

protected Double SOURCP60;

protected Double SOURCP61;

protected Double SOURCP69;

protected Double SOURCP70;

protected Double SOURCP71;

protected Double SOURCP72;

protected Double SOURCP73;

protected Double SOURCP74;

protected Double SOURCP75;

protected Double SOURCP76;

protected Double SOURCP86;

protected Double SOURCP87;

protected Double SOURCP88;

protected Double SOURCP89;

protected Double SOURCP90;

protected Double SPENDM;

protected Double SSFAM1;

protected Double SSNOUNITS;

protected Double STATUS;

protected Double TACC;

protected Double TACC2;

protected Double TACC3;

protected Double TADDVB;

protected Double TADDVB2;

protected Double TADDVB3;

protected Double TADDVL;

protected Double TADDVL2;

protected Double TADDVL3;

protected Double TBCAP;

protected Double TBCAP2;

protected Double TBCAP3;

protected Double TBCAPY;

protected Double TBCAPY2;

protected Double TBCAPY3;

protected Double TBCKNO;

protected Double TBCKNO2;

protected Double TBCKNO3;

protected Double TBEN1;

protected Double TBEN10;

protected Double TBEN11;

protected Double TBEN12;

protected Double TBEN13;

protected Double TBEN14;

protected Double TBEN15;

protected Double TBEN16;

protected Double TBEN17;

protected Double TBEN18;

protected Double TBEN19;

protected Double TBEN2;

protected Double TBEN20;

protected Double TBEN21;

protected Double TBEN22;

protected Double TBEN23;

protected Double TBEN24;

protected Double TBEN3;

protected Double TBEN4;

protected Double TBEN5;

protected Double TBEN6;

protected Double TBEN7;

protected Double TBEN8;

protected Double TBEN9;

protected Double TBINC;

protected Double TBINC2;

protected Double TBINC3;

protected Double TBREC;

protected Double TBREC2;

protected Double TBREC3;

protected Double TBRECB;

protected Double TBRECB2;

protected Double TBRECB3;

protected Double TBVALB;

protected Double TBVALB2;

protected Double TBVALB3;

protected Double TCONT1;

protected Double TCONT2;

protected Double TDUP;

protected Double TDUP2;

protected Double TDUP3;

protected Double TDUPA;

protected Double TDUPA2;

protected Double TDUPA3;

protected Double TJNT1;

protected Double TJNT2;

protected Double TJNT3;

protected Double TJNT4;

protected Double TJNT5;

protected Double TJNT6;

protected Double TSNEW;

protected Double TSNO;

protected Double TSNO2;

protected Double TSNO3;

protected Double TSNUM2;

protected Double TVAL;

protected Double TVAL2;

protected Double TVAL3;

protected Double TVALB;

protected Double TVALB2;

protected Double TVALB3;

protected Double TWHO1;

protected Double TWHO10;

protected Double TWHO11;

protected Double TWHO12;

protected Double TWHO13;

protected Double TWHO14;

protected Double TWHO15;

protected Double TWHO16;

protected Double TWHO17;

protected Double TWHO18;

protected Double TWHO2;

protected Double TWHO3;

protected Double TWHO4;

protected Double TWHO5;

protected Double TWHO6;

protected Double TWHO7;

protected Double TWHO8;

protected Double TWHO9;

protected Double UBUYLET;

protected Double UBUYLET_I;

protected Double UBUYLET_IFLAG;

protected Double UBUYTOL;

protected Double UBUYTOL2;

protected Double UBUYTOL3;

protected Double UBUYTOL4;

protected Double UBUYTOL5;

protected Double UPNO;

protected Double VALPBLUM1;

protected Double VALPBLUM2;

protected Double WKBETW;

protected Double WKHRS;

protected Double WKHRSIR;

protected Double WPENTYPE;

protected Double XMARSTA;

protected Double XS_CALWGT;

protected final void initACCFRAC(String s) {
if (!s.trim().isEmpty()) {
ACCFRAC = new Double(s);
}
}

protected final void initACCFRAC2(String s) {
if (!s.trim().isEmpty()) {
ACCFRAC2 = new Double(s);
}
}

protected final void initASAF2T(String s) {
if (!s.trim().isEmpty()) {
ASAF2T = new Double(s);
}
}

protected final void initASAFT(String s) {
if (!s.trim().isEmpty()) {
ASAFT = new Double(s);
}
}

protected final void initBAMT19(String s) {
if (!s.trim().isEmpty()) {
BAMT19 = new Double(s);
}
}

protected final void initBAMTDK19(String s) {
if (!s.trim().isEmpty()) {
BAMTDK19 = new Double(s);
}
}

protected final void initBEN1Q4(String s) {
if (!s.trim().isEmpty()) {
BEN1Q4 = new Double(s);
}
}

protected final void initBENUS(String s) {
if (!s.trim().isEmpty()) {
BENUS = new Double(s);
}
}

protected final void initBFUND11(String s) {
if (!s.trim().isEmpty()) {
BFUND11 = new Double(s);
}
}

protected final void initBFUND12(String s) {
if (!s.trim().isEmpty()) {
BFUND12 = new Double(s);
}
}

protected final void initBFUND13(String s) {
if (!s.trim().isEmpty()) {
BFUND13 = new Double(s);
}
}

protected final void initBFUND14(String s) {
if (!s.trim().isEmpty()) {
BFUND14 = new Double(s);
}
}

protected final void initBFUND15(String s) {
if (!s.trim().isEmpty()) {
BFUND15 = new Double(s);
}
}

protected final void initBFUND16(String s) {
if (!s.trim().isEmpty()) {
BFUND16 = new Double(s);
}
}

protected final void initBFUND19(String s) {
if (!s.trim().isEmpty()) {
BFUND19 = new Double(s);
}
}

protected final void initBFUND20(String s) {
if (!s.trim().isEmpty()) {
BFUND20 = new Double(s);
}
}

protected final void initBFUND21(String s) {
if (!s.trim().isEmpty()) {
BFUND21 = new Double(s);
}
}

protected final void initBFUND22(String s) {
if (!s.trim().isEmpty()) {
BFUND22 = new Double(s);
}
}

protected final void initBFUND23(String s) {
if (!s.trim().isEmpty()) {
BFUND23 = new Double(s);
}
}

protected final void initBFUND24(String s) {
if (!s.trim().isEmpty()) {
BFUND24 = new Double(s);
}
}

protected final void initBFUND5(String s) {
if (!s.trim().isEmpty()) {
BFUND5 = new Double(s);
}
}

protected final void initBFUND6(String s) {
if (!s.trim().isEmpty()) {
BFUND6 = new Double(s);
}
}

protected final void initBFUND7(String s) {
if (!s.trim().isEmpty()) {
BFUND7 = new Double(s);
}
}

protected final void initBFUND8(String s) {
if (!s.trim().isEmpty()) {
BFUND8 = new Double(s);
}
}

protected final void initBPD19(String s) {
if (!s.trim().isEmpty()) {
BPD19 = new Double(s);
}
}

protected final void initBPRFLOSS2(String s) {
if (!s.trim().isEmpty()) {
BPRFLOSS2 = new Double(s);
}
}

protected final void initBPRFLOSS3(String s) {
if (!s.trim().isEmpty()) {
BPRFLOSS3 = new Double(s);
}
}

protected final void initBUAMT(String s) {
if (!s.trim().isEmpty()) {
BUAMT = new Double(s);
}
}

protected final void initBUPD(String s) {
if (!s.trim().isEmpty()) {
BUPD = new Double(s);
}
}

protected final void initBUYLDB1(String s) {
if (!s.trim().isEmpty()) {
BUYLDB1 = new Double(s);
}
}

protected final void initBUYLDB2(String s) {
if (!s.trim().isEmpty()) {
BUYLDB2 = new Double(s);
}
}

protected final void initBUYLDB3(String s) {
if (!s.trim().isEmpty()) {
BUYLDB3 = new Double(s);
}
}

protected final void initBUYLDEBT1(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT1 = new Double(s);
}
}

protected final void initBUYLDEBT1_I(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT1_I = new Double(s);
}
}

protected final void initBUYLDEBT1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT1_IFLAG = new Double(s);
}
}

protected final void initBUYLDEBT2(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT2 = new Double(s);
}
}

protected final void initBUYLDEBT2_I(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT2_I = new Double(s);
}
}

protected final void initBUYLDEBT2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT2_IFLAG = new Double(s);
}
}

protected final void initBUYLDEBT3(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT3 = new Double(s);
}
}

protected final void initBUYLDEBT3_I(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT3_I = new Double(s);
}
}

protected final void initBUYLDEBT3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLDEBT3_IFLAG = new Double(s);
}
}

protected final void initBUYLGDST(String s) {
if (!s.trim().isEmpty()) {
BUYLGDST = new Double(s);
}
}

protected final void initBUYLGDVAL1(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVAL1 = new Double(s);
}
}

protected final void initBUYLGDVAL2(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVAL2 = new Double(s);
}
}

protected final void initBUYLGDVAL3(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVAL3 = new Double(s);
}
}

protected final void initBUYLGDVB1(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB1 = new Double(s);
}
}

protected final void initBUYLGDVB1_I(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB1_I = new Double(s);
}
}

protected final void initBUYLGDVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB1_IFLAG = new Double(s);
}
}

protected final void initBUYLGDVB2(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB2 = new Double(s);
}
}

protected final void initBUYLGDVB2_I(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB2_I = new Double(s);
}
}

protected final void initBUYLGDVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB2_IFLAG = new Double(s);
}
}

protected final void initBUYLGDVB3(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB3 = new Double(s);
}
}

protected final void initBUYLGDVB3_I(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB3_I = new Double(s);
}
}

protected final void initBUYLGDVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLGDVB3_IFLAG = new Double(s);
}
}

protected final void initBUYLVAL1(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL1 = new Double(s);
}
}

protected final void initBUYLVAL1_I(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL1_I = new Double(s);
}
}

protected final void initBUYLVAL1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL1_IFLAG = new Double(s);
}
}

protected final void initBUYLVAL2(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL2 = new Double(s);
}
}

protected final void initBUYLVAL2_I(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL2_I = new Double(s);
}
}

protected final void initBUYLVAL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL2_IFLAG = new Double(s);
}
}

protected final void initBUYLVAL3(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL3 = new Double(s);
}
}

protected final void initBUYLVAL3_I(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL3_I = new Double(s);
}
}

protected final void initBUYLVAL3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
BUYLVAL3_IFLAG = new Double(s);
}
}

protected final void initBUYLVB1(String s) {
if (!s.trim().isEmpty()) {
BUYLVB1 = new Double(s);
}
}

protected final void initBUYLVB2(String s) {
if (!s.trim().isEmpty()) {
BUYLVB2 = new Double(s);
}
}

protected final void initBUYLVB3(String s) {
if (!s.trim().isEmpty()) {
BUYLVB3 = new Double(s);
}
}

protected final void initBVALB3(String s) {
if (!s.trim().isEmpty()) {
BVALB3 = new Double(s);
}
}

protected final void initBVALWH11(String s) {
if (!s.trim().isEmpty()) {
BVALWH11 = new Double(s);
}
}

protected final void initBVALWH12(String s) {
if (!s.trim().isEmpty()) {
BVALWH12 = new Double(s);
}
}

protected final void initBVALWH15(String s) {
if (!s.trim().isEmpty()) {
BVALWH15 = new Double(s);
}
}

protected final void initBVALWH16(String s) {
if (!s.trim().isEmpty()) {
BVALWH16 = new Double(s);
}
}

protected final void initBVALWH17(String s) {
if (!s.trim().isEmpty()) {
BVALWH17 = new Double(s);
}
}

protected final void initBVALWH18(String s) {
if (!s.trim().isEmpty()) {
BVALWH18 = new Double(s);
}
}

protected final void initBVALWH4(String s) {
if (!s.trim().isEmpty()) {
BVALWH4 = new Double(s);
}
}

protected final void initBVALWH5(String s) {
if (!s.trim().isEmpty()) {
BVALWH5 = new Double(s);
}
}

protected final void initBVALWH6(String s) {
if (!s.trim().isEmpty()) {
BVALWH6 = new Double(s);
}
}

protected final void initCAREDUR(String s) {
if (!s.trim().isEmpty()) {
CAREDUR = new Double(s);
}
}

protected final void initCAREHR(String s) {
if (!s.trim().isEmpty()) {
CAREHR = new Double(s);
}
}

protected final void initCAREPS(String s) {
if (!s.trim().isEmpty()) {
CAREPS = new Double(s);
}
}

protected final void initCASEW2(String s) {
if (!s.trim().isEmpty()) {
CASEW2 = new Integer(s);
}
}

protected final void initCHECK1(String s) {
if (!s.trim().isEmpty()) {
CHECK1 = new Double(s);
}
}

protected final void initCHECK2(String s) {
if (!s.trim().isEmpty()) {
CHECK2 = new Double(s);
}
}

protected final void initCHECKNDL(String s) {
if (!s.trim().isEmpty()) {
CHECKNDL = new Double(s);
}
}

protected final void initCHOIC(String s) {
if (!s.trim().isEmpty()) {
CHOIC = new Double(s);
}
}

protected final void initCHOIC10(String s) {
if (!s.trim().isEmpty()) {
CHOIC10 = new Double(s);
}
}

protected final void initCHOIC2(String s) {
if (!s.trim().isEmpty()) {
CHOIC2 = new Double(s);
}
}

protected final void initCHOIC3(String s) {
if (!s.trim().isEmpty()) {
CHOIC3 = new Double(s);
}
}

protected final void initCHOIC4(String s) {
if (!s.trim().isEmpty()) {
CHOIC4 = new Double(s);
}
}

protected final void initCHOIC5(String s) {
if (!s.trim().isEmpty()) {
CHOIC5 = new Double(s);
}
}

protected final void initCHOIC6(String s) {
if (!s.trim().isEmpty()) {
CHOIC6 = new Double(s);
}
}

protected final void initCHOIC7(String s) {
if (!s.trim().isEmpty()) {
CHOIC7 = new Double(s);
}
}

protected final void initCHOIC8(String s) {
if (!s.trim().isEmpty()) {
CHOIC8 = new Double(s);
}
}

protected final void initCHOIC9(String s) {
if (!s.trim().isEmpty()) {
CHOIC9 = new Double(s);
}
}

protected final void initCHOICP(String s) {
if (!s.trim().isEmpty()) {
CHOICP = new Double(s);
}
}

protected final void initCHOICP10(String s) {
if (!s.trim().isEmpty()) {
CHOICP10 = new Double(s);
}
}

protected final void initCHOICP11(String s) {
if (!s.trim().isEmpty()) {
CHOICP11 = new Double(s);
}
}

protected final void initCHOICP18(String s) {
if (!s.trim().isEmpty()) {
CHOICP18 = new Double(s);
}
}

protected final void initCHOICP19(String s) {
if (!s.trim().isEmpty()) {
CHOICP19 = new Double(s);
}
}

protected final void initCHOICP2(String s) {
if (!s.trim().isEmpty()) {
CHOICP2 = new Double(s);
}
}

protected final void initCHOICP3(String s) {
if (!s.trim().isEmpty()) {
CHOICP3 = new Double(s);
}
}

protected final void initCHOICP4(String s) {
if (!s.trim().isEmpty()) {
CHOICP4 = new Double(s);
}
}

protected final void initCHOICP5(String s) {
if (!s.trim().isEmpty()) {
CHOICP5 = new Double(s);
}
}

protected final void initCHOICP6(String s) {
if (!s.trim().isEmpty()) {
CHOICP6 = new Double(s);
}
}

protected final void initCHOICP7(String s) {
if (!s.trim().isEmpty()) {
CHOICP7 = new Double(s);
}
}

protected final void initCHOICP8(String s) {
if (!s.trim().isEmpty()) {
CHOICP8 = new Double(s);
}
}

protected final void initCHOICP9(String s) {
if (!s.trim().isEmpty()) {
CHOICP9 = new Double(s);
}
}

protected final void initCOMBAM(String s) {
if (!s.trim().isEmpty()) {
COMBAM = new Double(s);
}
}

protected final void initCOMBPD(String s) {
if (!s.trim().isEmpty()) {
COMBPD = new Double(s);
}
}

protected final void initCOMBWK(String s) {
if (!s.trim().isEmpty()) {
COMBWK = new Double(s);
}
}

protected final void initCOMMI(String s) {
if (!s.trim().isEmpty()) {
COMMI = new Double(s);
}
}

protected final void initCONTSUB(String s) {
if (!s.trim().isEmpty()) {
CONTSUB = new Double(s);
}
}

protected final void initCTBEN(String s) {
if (!s.trim().isEmpty()) {
CTBEN = new Double(s);
}
}

protected final void initCURSTAT(String s) {
if (!s.trim().isEmpty()) {
CURSTAT = new Double(s);
}
}

protected final void initCUTBACK(String s) {
if (!s.trim().isEmpty()) {
CUTBACK = new Double(s);
}
}

protected final void initDADVACT1(String s) {
if (!s.trim().isEmpty()) {
DADVACT1 = new Double(s);
}
}

protected final void initDADVACT2(String s) {
if (!s.trim().isEmpty()) {
DADVACT2 = new Double(s);
}
}

protected final void initDADVACT3(String s) {
if (!s.trim().isEmpty()) {
DADVACT3 = new Double(s);
}
}

protected final void initDADVMTH(String s) {
if (!s.trim().isEmpty()) {
DADVMTH = new Double(s);
}
}

protected final void initDBURDW1(String s) {
if (!s.trim().isEmpty()) {
DBURDW1 = new Double(s);
}
}

protected final void initDBURDW7(String s) {
if (!s.trim().isEmpty()) {
DBURDW7 = new Double(s);
}
}

protected final void initDBURD___W2(String s) {
if (!s.trim().isEmpty()) {
DBURD___W2 = new Double(s);
}
}

protected final void initDC12BEH(String s) {
if (!s.trim().isEmpty()) {
DC12BEH = new Double(s);
}
}

protected final void initDC12BEH2(String s) {
if (!s.trim().isEmpty()) {
DC12BEH2 = new Double(s);
}
}

protected final void initDC12BEH3(String s) {
if (!s.trim().isEmpty()) {
DC12BEH3 = new Double(s);
}
}

protected final void initDC12BEH4(String s) {
if (!s.trim().isEmpty()) {
DC12BEH4 = new Double(s);
}
}

protected final void initDC12BEH5(String s) {
if (!s.trim().isEmpty()) {
DC12BEH5 = new Double(s);
}
}

protected final void initDC12OWE(String s) {
if (!s.trim().isEmpty()) {
DC12OWE = new Double(s);
}
}

protected final void initDC12OWE2(String s) {
if (!s.trim().isEmpty()) {
DC12OWE2 = new Double(s);
}
}

protected final void initDC12OWE3(String s) {
if (!s.trim().isEmpty()) {
DC12OWE3 = new Double(s);
}
}

protected final void initDC12OWE4(String s) {
if (!s.trim().isEmpty()) {
DC12OWE4 = new Double(s);
}
}

protected final void initDC12OWE5(String s) {
if (!s.trim().isEmpty()) {
DC12OWE5 = new Double(s);
}
}

protected final void initDCNUM2(String s) {
if (!s.trim().isEmpty()) {
DCNUM2 = new Double(s);
}
}

protected final void initDCNUM2_I(String s) {
if (!s.trim().isEmpty()) {
DCNUM2_I = new Double(s);
}
}

protected final void initDCNUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCNUM2_IFLAG = new Double(s);
}
}

protected final void initDCOINV4(String s) {
if (!s.trim().isEmpty()) {
DCOINV4 = new Double(s);
}
}

protected final void initDCOINVB4(String s) {
if (!s.trim().isEmpty()) {
DCOINVB4 = new Double(s);
}
}

protected final void initDCOSHV10(String s) {
if (!s.trim().isEmpty()) {
DCOSHV10 = new Double(s);
}
}

protected final void initDCOSHV4(String s) {
if (!s.trim().isEmpty()) {
DCOSHV4 = new Double(s);
}
}

protected final void initDCOSHV5(String s) {
if (!s.trim().isEmpty()) {
DCOSHV5 = new Double(s);
}
}

protected final void initDCOSHV6(String s) {
if (!s.trim().isEmpty()) {
DCOSHV6 = new Double(s);
}
}

protected final void initDCOSHV7(String s) {
if (!s.trim().isEmpty()) {
DCOSHV7 = new Double(s);
}
}

protected final void initDCOSHV8(String s) {
if (!s.trim().isEmpty()) {
DCOSHV8 = new Double(s);
}
}

protected final void initDCOSHV9(String s) {
if (!s.trim().isEmpty()) {
DCOSHV9 = new Double(s);
}
}

protected final void initDCOSHVB3(String s) {
if (!s.trim().isEmpty()) {
DCOSHVB3 = new Double(s);
}
}

protected final void initDCVAL1(String s) {
if (!s.trim().isEmpty()) {
DCVAL1 = new Double(s);
}
}

protected final void initDCVAL2(String s) {
if (!s.trim().isEmpty()) {
DCVAL2 = new Double(s);
}
}

protected final void initDHBANY08(String s) {
if (!s.trim().isEmpty()) {
DHBANY08 = new Double(s);
}
}

protected final void initDHBANY08_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY08_I = new Double(s);
}
}

protected final void initDHBANY08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY08_IFLAG = new Double(s);
}
}

protected final void initDHBANY09(String s) {
if (!s.trim().isEmpty()) {
DHBANY09 = new Double(s);
}
}

protected final void initDHBANY09_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY09_I = new Double(s);
}
}

protected final void initDHBANY09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY09_IFLAG = new Double(s);
}
}

protected final void initDHBANY10(String s) {
if (!s.trim().isEmpty()) {
DHBANY10 = new Double(s);
}
}

protected final void initDHBANY10_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY10_I = new Double(s);
}
}

protected final void initDHBANY10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY10_IFLAG = new Double(s);
}
}

protected final void initDHBANY11(String s) {
if (!s.trim().isEmpty()) {
DHBANY11 = new Double(s);
}
}

protected final void initDHBANY11_I(String s) {
if (!s.trim().isEmpty()) {
DHBANY11_I = new Double(s);
}
}

protected final void initDHBANY11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHBANY11_IFLAG = new Double(s);
}
}

protected final void initDLIND(String s) {
if (!s.trim().isEmpty()) {
DLIND = new Double(s);
}
}

protected final void initDLNNM(String s) {
if (!s.trim().isEmpty()) {
DLNNM = new Double(s);
}
}

protected final void initDLNNM_I(String s) {
if (!s.trim().isEmpty()) {
DLNNM_I = new Double(s);
}
}

protected final void initDLNNM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DLNNM_IFLAG = new Double(s);
}
}

protected final void initDLOLD1(String s) {
if (!s.trim().isEmpty()) {
DLOLD1 = new Double(s);
}
}

protected final void initDLOLD2(String s) {
if (!s.trim().isEmpty()) {
DLOLD2 = new Double(s);
}
}

protected final void initDLOLD3(String s) {
if (!s.trim().isEmpty()) {
DLOLD3 = new Double(s);
}
}

protected final void initDLOLD4(String s) {
if (!s.trim().isEmpty()) {
DLOLD4 = new Double(s);
}
}

protected final void initDLOLD5(String s) {
if (!s.trim().isEmpty()) {
DLOLD5 = new Double(s);
}
}

protected final void initDLONM(String s) {
if (!s.trim().isEmpty()) {
DLONM = new Double(s);
}
}

protected final void initDLWHY13(String s) {
if (!s.trim().isEmpty()) {
DLWHY13 = new Double(s);
}
}

protected final void initDLWHY14(String s) {
if (!s.trim().isEmpty()) {
DLWHY14 = new Double(s);
}
}

protected final void initDLWHY19(String s) {
if (!s.trim().isEmpty()) {
DLWHY19 = new Double(s);
}
}

protected final void initDLWHY20(String s) {
if (!s.trim().isEmpty()) {
DLWHY20 = new Double(s);
}
}

protected final void initDLWHY21(String s) {
if (!s.trim().isEmpty()) {
DLWHY21 = new Double(s);
}
}

protected final void initDLWHY24(String s) {
if (!s.trim().isEmpty()) {
DLWHY24 = new Double(s);
}
}

protected final void initDLWHY25(String s) {
if (!s.trim().isEmpty()) {
DLWHY25 = new Double(s);
}
}

protected final void initDLWHY26(String s) {
if (!s.trim().isEmpty()) {
DLWHY26 = new Double(s);
}
}

protected final void initDLWHY27(String s) {
if (!s.trim().isEmpty()) {
DLWHY27 = new Double(s);
}
}

protected final void initDLWHY28(String s) {
if (!s.trim().isEmpty()) {
DLWHY28 = new Double(s);
}
}

protected final void initDLWHY30(String s) {
if (!s.trim().isEmpty()) {
DLWHY30 = new Double(s);
}
}

protected final void initDLWHY31(String s) {
if (!s.trim().isEmpty()) {
DLWHY31 = new Double(s);
}
}

protected final void initDLWHY32(String s) {
if (!s.trim().isEmpty()) {
DLWHY32 = new Double(s);
}
}

protected final void initDLWHY33(String s) {
if (!s.trim().isEmpty()) {
DLWHY33 = new Double(s);
}
}

protected final void initDLWHY34(String s) {
if (!s.trim().isEmpty()) {
DLWHY34 = new Double(s);
}
}

protected final void initDLWHY35(String s) {
if (!s.trim().isEmpty()) {
DLWHY35 = new Double(s);
}
}

protected final void initDLWHY6(String s) {
if (!s.trim().isEmpty()) {
DLWHY6 = new Double(s);
}
}

protected final void initDLWHY7(String s) {
if (!s.trim().isEmpty()) {
DLWHY7 = new Double(s);
}
}

protected final void initDS12BEH(String s) {
if (!s.trim().isEmpty()) {
DS12BEH = new Double(s);
}
}

protected final void initDS12BEH2(String s) {
if (!s.trim().isEmpty()) {
DS12BEH2 = new Double(s);
}
}

protected final void initDS12BEH3(String s) {
if (!s.trim().isEmpty()) {
DS12BEH3 = new Double(s);
}
}

protected final void initDS12BEH4(String s) {
if (!s.trim().isEmpty()) {
DS12BEH4 = new Double(s);
}
}

protected final void initDS12BEH5(String s) {
if (!s.trim().isEmpty()) {
DS12BEH5 = new Double(s);
}
}

protected final void initDS12OWE(String s) {
if (!s.trim().isEmpty()) {
DS12OWE = new Double(s);
}
}

protected final void initDS12OWE2(String s) {
if (!s.trim().isEmpty()) {
DS12OWE2 = new Double(s);
}
}

protected final void initDS12OWE3(String s) {
if (!s.trim().isEmpty()) {
DS12OWE3 = new Double(s);
}
}

protected final void initDS12OWE4(String s) {
if (!s.trim().isEmpty()) {
DS12OWE4 = new Double(s);
}
}

protected final void initDS12OWE5(String s) {
if (!s.trim().isEmpty()) {
DS12OWE5 = new Double(s);
}
}

protected final void initDSNUM2(String s) {
if (!s.trim().isEmpty()) {
DSNUM2 = new Double(s);
}
}

protected final void initDSNUM2_I(String s) {
if (!s.trim().isEmpty()) {
DSNUM2_I = new Double(s);
}
}

protected final void initDSNUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSNUM2_IFLAG = new Double(s);
}
}

protected final void initDTLOWE(String s) {
if (!s.trim().isEmpty()) {
DTLOWE = new Double(s);
}
}

protected final void initDTLOWE2(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2 = new Double(s);
}
}

protected final void initDTLOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2_I = new Double(s);
}
}

protected final void initDTLOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2_IFLAG = new Double(s);
}
}

protected final void initDTLOWE3(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3 = new Double(s);
}
}

protected final void initDTLOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3_I = new Double(s);
}
}

protected final void initDTLOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3_IFLAG = new Double(s);
}
}

protected final void initDTLOWEB(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB = new Double(s);
}
}

protected final void initDTLOWEB2(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB2 = new Double(s);
}
}

protected final void initDTLOWEB3(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB3 = new Double(s);
}
}

protected final void initDTLOWE_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE_I = new Double(s);
}
}

protected final void initDTLOWE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLOWE_IFLAG = new Double(s);
}
}

protected final void initDTLTYPE(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE = new Double(s);
}
}

protected final void initDTLTYPE2(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2 = new Double(s);
}
}

protected final void initDTLTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2_I = new Double(s);
}
}

protected final void initDTLTYPE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2_IFLAG = new Double(s);
}
}

protected final void initDTLTYPE3(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3 = new Double(s);
}
}

protected final void initDTLTYPE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3_I = new Double(s);
}
}

protected final void initDTLTYPE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3_IFLAG = new Double(s);
}
}

protected final void initDTLTYPE_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE_I = new Double(s);
}
}

protected final void initDTLTYPE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE_IFLAG = new Double(s);
}
}

protected final void initDTTOWE(String s) {
if (!s.trim().isEmpty()) {
DTTOWE = new Double(s);
}
}

protected final void initDTTOWE10(String s) {
if (!s.trim().isEmpty()) {
DTTOWE10 = new Double(s);
}
}

protected final void initDTTOWE11(String s) {
if (!s.trim().isEmpty()) {
DTTOWE11 = new Double(s);
}
}

protected final void initDTTOWE12(String s) {
if (!s.trim().isEmpty()) {
DTTOWE12 = new Double(s);
}
}

protected final void initDTTOWE13(String s) {
if (!s.trim().isEmpty()) {
DTTOWE13 = new Double(s);
}
}

protected final void initDTTOWE14(String s) {
if (!s.trim().isEmpty()) {
DTTOWE14 = new Double(s);
}
}

protected final void initDTTOWE15(String s) {
if (!s.trim().isEmpty()) {
DTTOWE15 = new Double(s);
}
}

protected final void initDTTOWE2(String s) {
if (!s.trim().isEmpty()) {
DTTOWE2 = new Double(s);
}
}

protected final void initDTTOWE3(String s) {
if (!s.trim().isEmpty()) {
DTTOWE3 = new Double(s);
}
}

protected final void initDTTOWE4(String s) {
if (!s.trim().isEmpty()) {
DTTOWE4 = new Double(s);
}
}

protected final void initDTTOWE5(String s) {
if (!s.trim().isEmpty()) {
DTTOWE5 = new Double(s);
}
}

protected final void initDTTOWE6(String s) {
if (!s.trim().isEmpty()) {
DTTOWE6 = new Double(s);
}
}

protected final void initDTTOWE7(String s) {
if (!s.trim().isEmpty()) {
DTTOWE7 = new Double(s);
}
}

protected final void initDTTOWE8(String s) {
if (!s.trim().isEmpty()) {
DTTOWE8 = new Double(s);
}
}

protected final void initDTTOWE9(String s) {
if (!s.trim().isEmpty()) {
DTTOWE9 = new Double(s);
}
}

protected final void initDTTOWEB(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB = new Double(s);
}
}

protected final void initDTTOWEB10(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB10 = new Double(s);
}
}

protected final void initDTTOWEB11(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB11 = new Double(s);
}
}

protected final void initDTTOWEB12(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB12 = new Double(s);
}
}

protected final void initDTTOWEB13(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB13 = new Double(s);
}
}

protected final void initDTTOWEB14(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB14 = new Double(s);
}
}

protected final void initDTTOWEB15(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB15 = new Double(s);
}
}

protected final void initDTTOWEB2(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB2 = new Double(s);
}
}

protected final void initDTTOWEB3(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB3 = new Double(s);
}
}

protected final void initDTTOWEB4(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB4 = new Double(s);
}
}

protected final void initDTTOWEB5(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB5 = new Double(s);
}
}

protected final void initDTTOWEB6(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB6 = new Double(s);
}
}

protected final void initDTTOWEB7(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB7 = new Double(s);
}
}

protected final void initDTTOWEB8(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB8 = new Double(s);
}
}

protected final void initDTTOWEB9(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB9 = new Double(s);
}
}

protected final void initDVAGE4(String s) {
if (!s.trim().isEmpty()) {
DVAGE4 = new Double(s);
}
}

protected final void initDVAGE5(String s) {
if (!s.trim().isEmpty()) {
DVAGE5 = new Double(s);
}
}

protected final void initDVAGE6(String s) {
if (!s.trim().isEmpty()) {
DVAGE6 = new Double(s);
}
}

protected final void initDVAGE9(String s) {
if (!s.trim().isEmpty()) {
DVAGE9 = new Double(s);
}
}

protected final void initDVAGEW2BAND(String s) {
if (!s.trim().isEmpty()) {
DVAGEW2BAND = new Double(s);
}
}

protected final void initDVCOINV4(String s) {
if (!s.trim().isEmpty()) {
DVCOINV4 = new Double(s);
}
}

protected final void initDVDBINC4(String s) {
if (!s.trim().isEmpty()) {
DVDBINC4 = new Double(s);
}
}

protected final void initDVDBINC5(String s) {
if (!s.trim().isEmpty()) {
DVDBINC5 = new Double(s);
}
}

protected final void initDVDBINC6(String s) {
if (!s.trim().isEmpty()) {
DVDBINC6 = new Double(s);
}
}

protected final void initDVDBLUMP4(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP4 = new Double(s);
}
}

protected final void initDVDBLUMP5(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP5 = new Double(s);
}
}

protected final void initDVDBLUMP6(String s) {
if (!s.trim().isEmpty()) {
DVDBLUMP6 = new Double(s);
}
}

protected final void initDVDBOPEN2T(String s) {
if (!s.trim().isEmpty()) {
DVDBOPEN2T = new Double(s);
}
}

protected final void initDVDBOPENT(String s) {
if (!s.trim().isEmpty()) {
DVDBOPENT = new Double(s);
}
}

protected final void initDVNWFLN(String s) {
if (!s.trim().isEmpty()) {
DVNWFLN = new Double(s);
}
}

protected final void initDVNWILN(String s) {
if (!s.trim().isEmpty()) {
DVNWILN = new Double(s);
}
}

protected final void initDVPENINC(String s) {
if (!s.trim().isEmpty()) {
DVPENINC = new Double(s);
}
}

protected final void initDVPENINC2(String s) {
if (!s.trim().isEmpty()) {
DVPENINC2 = new Double(s);
}
}

protected final void initDVPUBLPRIV(String s) {
if (!s.trim().isEmpty()) {
DVPUBLPRIV = new Double(s);
}
}

protected final void initDVSAME(String s) {
if (!s.trim().isEmpty()) {
DVSAME = new Double(s);
}
}

protected final void initDVSPS(String s) {
if (!s.trim().isEmpty()) {
DVSPS = new Double(s);
}
}

protected final void initDVWID(String s) {
if (!s.trim().isEmpty()) {
DVWID = new Double(s);
}
}

protected final void initECHLCAR(String s) {
if (!s.trim().isEmpty()) {
ECHLCAR = new Double(s);
}
}

protected final void initECHLSUP(String s) {
if (!s.trim().isEmpty()) {
ECHLSUP = new Double(s);
}
}

protected final void initEDAGE(String s) {
if (!s.trim().isEmpty()) {
EDAGE = new Double(s);
}
}

protected final void initEFOOD(String s) {
if (!s.trim().isEmpty()) {
EFOOD = new Double(s);
}
}

protected final void initEFUEL(String s) {
if (!s.trim().isEmpty()) {
EFUEL = new Double(s);
}
}

protected final void initEINTRO(String s) {
if (!s.trim().isEmpty()) {
EINTRO = new Double(s);
}
}

protected final void initELARGE1(String s) {
if (!s.trim().isEmpty()) {
ELARGE1 = new Double(s);
}
}

protected final void initELARGE2(String s) {
if (!s.trim().isEmpty()) {
ELARGE2 = new Double(s);
}
}

protected final void initELARGE3(String s) {
if (!s.trim().isEmpty()) {
ELARGE3 = new Double(s);
}
}

protected final void initELARGE4(String s) {
if (!s.trim().isEmpty()) {
ELARGE4 = new Double(s);
}
}

protected final void initELARGE5(String s) {
if (!s.trim().isEmpty()) {
ELARGE5 = new Double(s);
}
}

protected final void initELARGE6(String s) {
if (!s.trim().isEmpty()) {
ELARGE6 = new Double(s);
}
}

protected final void initELARGE7(String s) {
if (!s.trim().isEmpty()) {
ELARGE7 = new Double(s);
}
}

protected final void initELARGE8(String s) {
if (!s.trim().isEmpty()) {
ELARGE8 = new Double(s);
}
}

protected final void initELGEAMB(String s) {
if (!s.trim().isEmpty()) {
ELGEAMB = new Double(s);
}
}

protected final void initEMEALS(String s) {
if (!s.trim().isEmpty()) {
EMEALS = new Double(s);
}
}

protected final void initEMPNO(String s) {
if (!s.trim().isEmpty()) {
EMPNO = new Double(s);
}
}

protected final void initES2000(String s) {
if (!s.trim().isEmpty()) {
ES2000 = new Double(s);
}
}

protected final void initESATYPE(String s) {
if (!s.trim().isEmpty()) {
ESATYPE = new Double(s);
}
}

protected final void initETRANS(String s) {
if (!s.trim().isEmpty()) {
ETRANS = new Double(s);
}
}

protected final void initEYE1(String s) {
if (!s.trim().isEmpty()) {
EYE1 = new Double(s);
}
}

protected final void initEYE2(String s) {
if (!s.trim().isEmpty()) {
EYE2 = new Double(s);
}
}

protected final void initEYE3(String s) {
if (!s.trim().isEmpty()) {
EYE3 = new Double(s);
}
}

protected final void initEYE4(String s) {
if (!s.trim().isEmpty()) {
EYE4 = new Double(s);
}
}

protected final void initEYE5(String s) {
if (!s.trim().isEmpty()) {
EYE5 = new Double(s);
}
}

protected final void initEYE6(String s) {
if (!s.trim().isEmpty()) {
EYE6 = new Double(s);
}
}

protected final void initEYE7(String s) {
if (!s.trim().isEmpty()) {
EYE7 = new Double(s);
}
}

protected final void initEYE8(String s) {
if (!s.trim().isEmpty()) {
EYE8 = new Double(s);
}
}

protected final void initFBFAED(String s) {
if (!s.trim().isEmpty()) {
FBFAED = new Double(s);
}
}

protected final void initFBMOED(String s) {
if (!s.trim().isEmpty()) {
FBMOED = new Double(s);
}
}

protected final void initFBSIBS(String s) {
if (!s.trim().isEmpty()) {
FBSIBS = new Double(s);
}
}

protected final void initFBSITU(String s) {
if (!s.trim().isEmpty()) {
FBSITU = new Double(s);
}
}

protected final void initFBTEN(String s) {
if (!s.trim().isEmpty()) {
FBTEN = new Double(s);
}
}

protected final void initFCISAWD(String s) {
if (!s.trim().isEmpty()) {
FCISAWD = new Double(s);
}
}

protected final void initFCISCE(String s) {
if (!s.trim().isEmpty()) {
FCISCE = new Double(s);
}
}

protected final void initFCIWDAB(String s) {
if (!s.trim().isEmpty()) {
FCIWDAB = new Double(s);
}
}

protected final void initFCIWNUM(String s) {
if (!s.trim().isEmpty()) {
FCIWNUM = new Double(s);
}
}

protected final void initFNDCASH01(String s) {
if (!s.trim().isEmpty()) {
FNDCASH01 = new Double(s);
}
}

protected final void initFNDCASH02(String s) {
if (!s.trim().isEmpty()) {
FNDCASH02 = new Double(s);
}
}

protected final void initFNDCASH03(String s) {
if (!s.trim().isEmpty()) {
FNDCASH03 = new Double(s);
}
}

protected final void initFNDCASH04(String s) {
if (!s.trim().isEmpty()) {
FNDCASH04 = new Double(s);
}
}

protected final void initFNDCASH05(String s) {
if (!s.trim().isEmpty()) {
FNDCASH05 = new Double(s);
}
}

protected final void initFNDCASH06(String s) {
if (!s.trim().isEmpty()) {
FNDCASH06 = new Double(s);
}
}

protected final void initFNDCASH07(String s) {
if (!s.trim().isEmpty()) {
FNDCASH07 = new Double(s);
}
}

protected final void initFNDCASH08(String s) {
if (!s.trim().isEmpty()) {
FNDCASH08 = new Double(s);
}
}

protected final void initFNDCASH09(String s) {
if (!s.trim().isEmpty()) {
FNDCASH09 = new Double(s);
}
}

protected final void initFNDCASH10(String s) {
if (!s.trim().isEmpty()) {
FNDCASH10 = new Double(s);
}
}

protected final void initFNDCASH11(String s) {
if (!s.trim().isEmpty()) {
FNDCASH11 = new Double(s);
}
}

protected final void initFNDCASH12(String s) {
if (!s.trim().isEmpty()) {
FNDCASH12 = new Double(s);
}
}

protected final void initFNDCASH13(String s) {
if (!s.trim().isEmpty()) {
FNDCASH13 = new Double(s);
}
}

protected final void initFNDCASH14(String s) {
if (!s.trim().isEmpty()) {
FNDCASH14 = new Double(s);
}
}

protected final void initFNDCASH15(String s) {
if (!s.trim().isEmpty()) {
FNDCASH15 = new Double(s);
}
}

protected final void initFNDCASH16(String s) {
if (!s.trim().isEmpty()) {
FNDCASH16 = new Double(s);
}
}

protected final void initFSAVAB(String s) {
if (!s.trim().isEmpty()) {
FSAVAB = new Double(s);
}
}

protected final void initFSAVED(String s) {
if (!s.trim().isEmpty()) {
FSAVED = new Double(s);
}
}

protected final void initFSHADA(String s) {
if (!s.trim().isEmpty()) {
FSHADA = new Double(s);
}
}

protected final void initFSHADAB(String s) {
if (!s.trim().isEmpty()) {
FSHADAB = new Double(s);
}
}

protected final void initFSHADD(String s) {
if (!s.trim().isEmpty()) {
FSHADD = new Double(s);
}
}

protected final void initFSTYPIN4(String s) {
if (!s.trim().isEmpty()) {
FSTYPIN4 = new Double(s);
}
}

protected final void initFSTYPIN5(String s) {
if (!s.trim().isEmpty()) {
FSTYPIN5 = new Double(s);
}
}

protected final void initFSTYPSH5(String s) {
if (!s.trim().isEmpty()) {
FSTYPSH5 = new Double(s);
}
}

protected final void initFTHECST(String s) {
if (!s.trim().isEmpty()) {
FTHECST = new Double(s);
}
}

protected final void initFTSTUD(String s) {
if (!s.trim().isEmpty()) {
FTSTUD = new Double(s);
}
}

protected final void initFWITHD(String s) {
if (!s.trim().isEmpty()) {
FWITHD = new Double(s);
}
}

protected final void initGROSSPER(String s) {
if (!s.trim().isEmpty()) {
GROSSPER = new Double(s);
}
}

protected final void initGRSAMK(String s) {
if (!s.trim().isEmpty()) {
GRSAMK = new Double(s);
}
}

protected final void initGRSEESM(String s) {
if (!s.trim().isEmpty()) {
GRSEESM = new Double(s);
}
}

protected final void initGRSEESW(String s) {
if (!s.trim().isEmpty()) {
GRSEESW = new Double(s);
}
}

protected final void initGRSSEMJB(String s) {
if (!s.trim().isEmpty()) {
GRSSEMJB = new Double(s);
}
}

protected final void initGSTDNW(String s) {
if (!s.trim().isEmpty()) {
GSTDNW = new Double(s);
}
}

protected final void initHOUSBEN(String s) {
if (!s.trim().isEmpty()) {
HOUSBEN = new Double(s);
}
}

protected final void initIGDS13(String s) {
if (!s.trim().isEmpty()) {
IGDS13 = new Double(s);
}
}

protected final void initIGDS14(String s) {
if (!s.trim().isEmpty()) {
IGDS14 = new Double(s);
}
}

protected final void initIGDS17(String s) {
if (!s.trim().isEmpty()) {
IGDS17 = new Double(s);
}
}

protected final void initIGDS18(String s) {
if (!s.trim().isEmpty()) {
IGDS18 = new Double(s);
}
}

protected final void initIGDS19(String s) {
if (!s.trim().isEmpty()) {
IGDS19 = new Double(s);
}
}

protected final void initIGDS20(String s) {
if (!s.trim().isEmpty()) {
IGDS20 = new Double(s);
}
}

protected final void initIGDS21(String s) {
if (!s.trim().isEmpty()) {
IGDS21 = new Double(s);
}
}

protected final void initIGDS7(String s) {
if (!s.trim().isEmpty()) {
IGDS7 = new Double(s);
}
}

protected final void initILNPBAM(String s) {
if (!s.trim().isEmpty()) {
ILNPBAM = new Double(s);
}
}

protected final void initILNPBK(String s) {
if (!s.trim().isEmpty()) {
ILNPBK = new Double(s);
}
}

protected final void initILNUSE01(String s) {
if (!s.trim().isEmpty()) {
ILNUSE01 = new Double(s);
}
}

protected final void initILNUSE02(String s) {
if (!s.trim().isEmpty()) {
ILNUSE02 = new Double(s);
}
}

protected final void initILNUSE03(String s) {
if (!s.trim().isEmpty()) {
ILNUSE03 = new Double(s);
}
}

protected final void initILNUSE04(String s) {
if (!s.trim().isEmpty()) {
ILNUSE04 = new Double(s);
}
}

protected final void initILNUSE05(String s) {
if (!s.trim().isEmpty()) {
ILNUSE05 = new Double(s);
}
}

protected final void initILNUSE06(String s) {
if (!s.trim().isEmpty()) {
ILNUSE06 = new Double(s);
}
}

protected final void initILNUSE07(String s) {
if (!s.trim().isEmpty()) {
ILNUSE07 = new Double(s);
}
}

protected final void initILNUSE08(String s) {
if (!s.trim().isEmpty()) {
ILNUSE08 = new Double(s);
}
}

protected final void initILNUSE09(String s) {
if (!s.trim().isEmpty()) {
ILNUSE09 = new Double(s);
}
}

protected final void initILNUSE10(String s) {
if (!s.trim().isEmpty()) {
ILNUSE10 = new Double(s);
}
}

protected final void initILNVAL(String s) {
if (!s.trim().isEmpty()) {
ILNVAL = new Double(s);
}
}

protected final void initILNVALB(String s) {
if (!s.trim().isEmpty()) {
ILNVALB = new Double(s);
}
}

protected final void initILOAN(String s) {
if (!s.trim().isEmpty()) {
ILOAN = new Double(s);
}
}

protected final void initINCDROP(String s) {
if (!s.trim().isEmpty()) {
INCDROP = new Double(s);
}
}

protected final void initINDFREQ(String s) {
if (!s.trim().isEmpty()) {
INDFREQ = new Double(s);
}
}

protected final void initISADULT(String s) {
if (!s.trim().isEmpty()) {
ISADULT = new Double(s);
}
}

protected final void initIWAT6(String s) {
if (!s.trim().isEmpty()) {
IWAT6 = new Double(s);
}
}

protected final void initLONGIT_CALWGT(String s) {
if (!s.trim().isEmpty()) {
LONGIT_CALWGT = new Double(s);
}
}

protected final void initLVTDAY(String s) {
if (!s.trim().isEmpty()) {
LVTDAY = new Double(s);
}
}

protected final void initMARSTA(String s) {
if (!s.trim().isEmpty()) {
MARSTA = new Double(s);
}
}

protected final void initMRECJB(String s) {
if (!s.trim().isEmpty()) {
MRECJB = new Double(s);
}
}

protected final void initMTHECST(String s) {
if (!s.trim().isEmpty()) {
MTHECST = new Double(s);
}
}

protected final void initNEWFCMX(String s) {
if (!s.trim().isEmpty()) {
NEWFCMX = new Double(s);
}
}

protected final void initNEWGIFT(String s) {
if (!s.trim().isEmpty()) {
NEWGIFT = new Double(s);
}
}

protected final void initNOFA(String s) {
if (!s.trim().isEmpty()) {
NOFA = new Double(s);
}
}

protected final void initNWFLNVAL1(String s) {
if (!s.trim().isEmpty()) {
NWFLNVAL1 = new Double(s);
}
}

protected final void initNWFLNVAL2(String s) {
if (!s.trim().isEmpty()) {
NWFLNVAL2 = new Double(s);
}
}

protected final void initNWFLNVAL3(String s) {
if (!s.trim().isEmpty()) {
NWFLNVAL3 = new Double(s);
}
}

protected final void initNWHP(String s) {
if (!s.trim().isEmpty()) {
NWHP = new Double(s);
}
}

protected final void initNWHPNO(String s) {
if (!s.trim().isEmpty()) {
NWHPNO = new Double(s);
}
}

protected final void initNWILNVAL1(String s) {
if (!s.trim().isEmpty()) {
NWILNVAL1 = new Double(s);
}
}

protected final void initNWILNVAL2(String s) {
if (!s.trim().isEmpty()) {
NWILNVAL2 = new Double(s);
}
}

protected final void initNWILNVAL3(String s) {
if (!s.trim().isEmpty()) {
NWILNVAL3 = new Double(s);
}
}

protected final void initNWLN(String s) {
if (!s.trim().isEmpty()) {
NWLN = new Double(s);
}
}

protected final void initNWLNNO(String s) {
if (!s.trim().isEmpty()) {
NWLNNO = new Double(s);
}
}

protected final void initNWLNNO_I(String s) {
if (!s.trim().isEmpty()) {
NWLNNO_I = new Double(s);
}
}

protected final void initNWLNNO_IFLAG(String s) {
if (!s.trim().isEmpty()) {
NWLNNO_IFLAG = new Double(s);
}
}

protected final void initNWLN_I(String s) {
if (!s.trim().isEmpty()) {
NWLN_I = new Double(s);
}
}

protected final void initNWLN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
NWLN_IFLAG = new Double(s);
}
}

protected final void initOEXPINC01(String s) {
if (!s.trim().isEmpty()) {
OEXPINC01 = new Double(s);
}
}

protected final void initOEXPINC02(String s) {
if (!s.trim().isEmpty()) {
OEXPINC02 = new Double(s);
}
}

protected final void initOEXPINC03(String s) {
if (!s.trim().isEmpty()) {
OEXPINC03 = new Double(s);
}
}

protected final void initOEXPINC04(String s) {
if (!s.trim().isEmpty()) {
OEXPINC04 = new Double(s);
}
}

protected final void initOEXPINC05(String s) {
if (!s.trim().isEmpty()) {
OEXPINC05 = new Double(s);
}
}

protected final void initOEXPINC06(String s) {
if (!s.trim().isEmpty()) {
OEXPINC06 = new Double(s);
}
}

protected final void initOEXPINC07(String s) {
if (!s.trim().isEmpty()) {
OEXPINC07 = new Double(s);
}
}

protected final void initOEXPINC08(String s) {
if (!s.trim().isEmpty()) {
OEXPINC08 = new Double(s);
}
}

protected final void initOEXPINC09(String s) {
if (!s.trim().isEmpty()) {
OEXPINC09 = new Double(s);
}
}

protected final void initOEXPINC10(String s) {
if (!s.trim().isEmpty()) {
OEXPINC10 = new Double(s);
}
}

protected final void initOEXPINC11(String s) {
if (!s.trim().isEmpty()) {
OEXPINC11 = new Double(s);
}
}

protected final void initOEXPINC12(String s) {
if (!s.trim().isEmpty()) {
OEXPINC12 = new Double(s);
}
}

protected final void initOEXPINC13(String s) {
if (!s.trim().isEmpty()) {
OEXPINC13 = new Double(s);
}
}

protected final void initOEXPINC14(String s) {
if (!s.trim().isEmpty()) {
OEXPINC14 = new Double(s);
}
}

protected final void initOEXPINC15(String s) {
if (!s.trim().isEmpty()) {
OEXPINC15 = new Double(s);
}
}

protected final void initOIMPRS1(String s) {
if (!s.trim().isEmpty()) {
OIMPRS1 = new Double(s);
}
}

protected final void initOIMPRS2(String s) {
if (!s.trim().isEmpty()) {
OIMPRS2 = new Double(s);
}
}

protected final void initOIMPRS3(String s) {
if (!s.trim().isEmpty()) {
OIMPRS3 = new Double(s);
}
}

protected final void initOIMPRS4(String s) {
if (!s.trim().isEmpty()) {
OIMPRS4 = new Double(s);
}
}

protected final void initOIMPRS5(String s) {
if (!s.trim().isEmpty()) {
OIMPRS5 = new Double(s);
}
}

protected final void initOIMPRS6(String s) {
if (!s.trim().isEmpty()) {
OIMPRS6 = new Double(s);
}
}

protected final void initOIMPRS7(String s) {
if (!s.trim().isEmpty()) {
OIMPRS7 = new Double(s);
}
}

protected final void initOIMPRS8(String s) {
if (!s.trim().isEmpty()) {
OIMPRS8 = new Double(s);
}
}

protected final void initOIMPRS9(String s) {
if (!s.trim().isEmpty()) {
OIMPRS9 = new Double(s);
}
}

protected final void initOINTROL(String s) {
if (!s.trim().isEmpty()) {
OINTROL = new Double(s);
}
}

protected final void initOINTROM(String s) {
if (!s.trim().isEmpty()) {
OINTROM = new Double(s);
}
}

protected final void initONOSAVE1(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE1 = new Double(s);
}
}

protected final void initONOSAVE2(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE2 = new Double(s);
}
}

protected final void initONOSAVE3(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE3 = new Double(s);
}
}

protected final void initONOSAVE4(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE4 = new Double(s);
}
}

protected final void initONOSAVE5(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE5 = new Double(s);
}
}

protected final void initONOSAVE6(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE6 = new Double(s);
}
}

protected final void initONOSAVE7(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE7 = new Double(s);
}
}

protected final void initONOSAVE8(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE8 = new Double(s);
}
}

protected final void initONOSAVE9(String s) {
if (!s.trim().isEmpty()) {
ONOSAVE9 = new Double(s);
}
}

protected final void initOPENSAV(String s) {
if (!s.trim().isEmpty()) {
OPENSAV = new Double(s);
}
}

protected final void initORGNSED(String s) {
if (!s.trim().isEmpty()) {
ORGNSED = new Double(s);
}
}

protected final void initOSAFERE2(String s) {
if (!s.trim().isEmpty()) {
OSAFERE2 = new Double(s);
}
}

protected final void initOSAFERET(String s) {
if (!s.trim().isEmpty()) {
OSAFERET = new Double(s);
}
}

protected final void initOSAV2Y(String s) {
if (!s.trim().isEmpty()) {
OSAV2Y = new Double(s);
}
}

protected final void initOSAVA(String s) {
if (!s.trim().isEmpty()) {
OSAVA = new Double(s);
}
}

protected final void initOSAVB(String s) {
if (!s.trim().isEmpty()) {
OSAVB = new Double(s);
}
}

protected final void initOSAVC(String s) {
if (!s.trim().isEmpty()) {
OSAVC = new Double(s);
}
}

protected final void initOSAVEXT(String s) {
if (!s.trim().isEmpty()) {
OSAVEXT = new Double(s);
}
}

protected final void initOSITCH(String s) {
if (!s.trim().isEmpty()) {
OSITCH = new Double(s);
}
}

protected final void initOTHASCH(String s) {
if (!s.trim().isEmpty()) {
OTHASCH = new Double(s);
}
}

protected final void initOTHASVB(String s) {
if (!s.trim().isEmpty()) {
OTHASVB = new Double(s);
}
}

protected final void initOTHASVL(String s) {
if (!s.trim().isEmpty()) {
OTHASVL = new Double(s);
}
}

protected final void initOTRUST15(String s) {
if (!s.trim().isEmpty()) {
OTRUST15 = new Double(s);
}
}

protected final void initOWAIT(String s) {
if (!s.trim().isEmpty()) {
OWAIT = new Double(s);
}
}

protected final void initOWHYSAV01(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV01 = new Double(s);
}
}

protected final void initOWHYSAV02(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV02 = new Double(s);
}
}

protected final void initOWHYSAV03(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV03 = new Double(s);
}
}

protected final void initOWHYSAV04(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV04 = new Double(s);
}
}

protected final void initOWHYSAV05(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV05 = new Double(s);
}
}

protected final void initOWHYSAV06(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV06 = new Double(s);
}
}

protected final void initOWHYSAV07(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV07 = new Double(s);
}
}

protected final void initOWHYSAV08(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV08 = new Double(s);
}
}

protected final void initOWHYSAV09(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV09 = new Double(s);
}
}

protected final void initOWHYSAV10(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV10 = new Double(s);
}
}

protected final void initOWRSRS01(String s) {
if (!s.trim().isEmpty()) {
OWRSRS01 = new Double(s);
}
}

protected final void initOWRSRS02(String s) {
if (!s.trim().isEmpty()) {
OWRSRS02 = new Double(s);
}
}

protected final void initOWRSRS03(String s) {
if (!s.trim().isEmpty()) {
OWRSRS03 = new Double(s);
}
}

protected final void initOWRSRS04(String s) {
if (!s.trim().isEmpty()) {
OWRSRS04 = new Double(s);
}
}

protected final void initOWRSRS05(String s) {
if (!s.trim().isEmpty()) {
OWRSRS05 = new Double(s);
}
}

protected final void initOWRSRS06(String s) {
if (!s.trim().isEmpty()) {
OWRSRS06 = new Double(s);
}
}

protected final void initOWRSRS07(String s) {
if (!s.trim().isEmpty()) {
OWRSRS07 = new Double(s);
}
}

protected final void initOWRSRS08(String s) {
if (!s.trim().isEmpty()) {
OWRSRS08 = new Double(s);
}
}

protected final void initOWRSRS09(String s) {
if (!s.trim().isEmpty()) {
OWRSRS09 = new Double(s);
}
}

protected final void initOWRSRS10(String s) {
if (!s.trim().isEmpty()) {
OWRSRS10 = new Double(s);
}
}

protected final void initPADDFUT(String s) {
if (!s.trim().isEmpty()) {
PADDFUT = new Double(s);
}
}

protected final void initPADDFUT2(String s) {
if (!s.trim().isEmpty()) {
PADDFUT2 = new Double(s);
}
}

protected final void initPAGESTP(String s) {
if (!s.trim().isEmpty()) {
PAGESTP = new Double(s);
}
}

protected final void initPANYO(String s) {
if (!s.trim().isEmpty()) {
PANYO = new Double(s);
}
}

protected final void initPANYO_I(String s) {
if (!s.trim().isEmpty()) {
PANYO_I = new Double(s);
}
}

protected final void initPANYO_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PANYO_IFLAG = new Double(s);
}
}

protected final void initPASTMN(String s) {
if (!s.trim().isEmpty()) {
PASTMN = new Double(s);
}
}

protected final void initPASTMN2(String s) {
if (!s.trim().isEmpty()) {
PASTMN2 = new Double(s);
}
}

protected final void initPASTYR(String s) {
if (!s.trim().isEmpty()) {
PASTYR = new Double(s);
}
}

protected final void initPASTYR2(String s) {
if (!s.trim().isEmpty()) {
PASTYR2 = new Double(s);
}
}

protected final void initPAVCAM(String s) {
if (!s.trim().isEmpty()) {
PAVCAM = new Double(s);
}
}

protected final void initPAVCAM2(String s) {
if (!s.trim().isEmpty()) {
PAVCAM2 = new Double(s);
}
}

protected final void initPAVCFG(String s) {
if (!s.trim().isEmpty()) {
PAVCFG = new Double(s);
}
}

protected final void initPAVCFG2(String s) {
if (!s.trim().isEmpty()) {
PAVCFG2 = new Double(s);
}
}

protected final void initPAVCFR(String s) {
if (!s.trim().isEmpty()) {
PAVCFR = new Double(s);
}
}

protected final void initPAVCFR2(String s) {
if (!s.trim().isEmpty()) {
PAVCFR2 = new Double(s);
}
}

protected final void initPAVCH(String s) {
if (!s.trim().isEmpty()) {
PAVCH = new Double(s);
}
}

protected final void initPAVCH2(String s) {
if (!s.trim().isEmpty()) {
PAVCH2 = new Double(s);
}
}

protected final void initPAVCIN(String s) {
if (!s.trim().isEmpty()) {
PAVCIN = new Double(s);
}
}

protected final void initPAVCIN2(String s) {
if (!s.trim().isEmpty()) {
PAVCIN2 = new Double(s);
}
}

protected final void initPAVCPR(String s) {
if (!s.trim().isEmpty()) {
PAVCPR = new Double(s);
}
}

protected final void initPAVCPR2(String s) {
if (!s.trim().isEmpty()) {
PAVCPR2 = new Double(s);
}
}

protected final void initPAVCUV(String s) {
if (!s.trim().isEmpty()) {
PAVCUV = new Double(s);
}
}

protected final void initPAVCUV2(String s) {
if (!s.trim().isEmpty()) {
PAVCUV2 = new Double(s);
}
}

protected final void initPAVCUV2_I(String s) {
if (!s.trim().isEmpty()) {
PAVCUV2_I = new Double(s);
}
}

protected final void initPAVCUV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PAVCUV2_IFLAG = new Double(s);
}
}

protected final void initPAVCUV_I(String s) {
if (!s.trim().isEmpty()) {
PAVCUV_I = new Double(s);
}
}

protected final void initPAVCUV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PAVCUV_IFLAG = new Double(s);
}
}

protected final void initPAVCVB(String s) {
if (!s.trim().isEmpty()) {
PAVCVB = new Double(s);
}
}

protected final void initPAVCVB2(String s) {
if (!s.trim().isEmpty()) {
PAVCVB2 = new Double(s);
}
}

protected final void initPAVDOC(String s) {
if (!s.trim().isEmpty()) {
PAVDOC = new Double(s);
}
}

protected final void initPAVDOC2(String s) {
if (!s.trim().isEmpty()) {
PAVDOC2 = new Double(s);
}
}

protected final void initPAYINC7(String s) {
if (!s.trim().isEmpty()) {
PAYINC7 = new Double(s);
}
}

protected final void initPBDOCS(String s) {
if (!s.trim().isEmpty()) {
PBDOCS = new Double(s);
}
}

protected final void initPBDOCS2(String s) {
if (!s.trim().isEmpty()) {
PBDOCS2 = new Double(s);
}
}

protected final void initPBFRAC(String s) {
if (!s.trim().isEmpty()) {
PBFRAC = new Double(s);
}
}

protected final void initPBFRAC2(String s) {
if (!s.trim().isEmpty()) {
PBFRAC2 = new Double(s);
}
}

protected final void initPBFRAC2_I(String s) {
if (!s.trim().isEmpty()) {
PBFRAC2_I = new Double(s);
}
}

protected final void initPBFRAC2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBFRAC2_IFLAG = new Double(s);
}
}

protected final void initPBFRAC_I(String s) {
if (!s.trim().isEmpty()) {
PBFRAC_I = new Double(s);
}
}

protected final void initPBFRAC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBFRAC_IFLAG = new Double(s);
}
}

protected final void initPBINCA(String s) {
if (!s.trim().isEmpty()) {
PBINCA = new Double(s);
}
}

protected final void initPBINCA2(String s) {
if (!s.trim().isEmpty()) {
PBINCA2 = new Double(s);
}
}

protected final void initPBINCF(String s) {
if (!s.trim().isEmpty()) {
PBINCF = new Double(s);
}
}

protected final void initPBINCF2(String s) {
if (!s.trim().isEmpty()) {
PBINCF2 = new Double(s);
}
}

protected final void initPBINCH(String s) {
if (!s.trim().isEmpty()) {
PBINCH = new Double(s);
}
}

protected final void initPBINCH2(String s) {
if (!s.trim().isEmpty()) {
PBINCH2 = new Double(s);
}
}

protected final void initPBLMVB(String s) {
if (!s.trim().isEmpty()) {
PBLMVB = new Double(s);
}
}

protected final void initPBLMVB2(String s) {
if (!s.trim().isEmpty()) {
PBLMVB2 = new Double(s);
}
}

protected final void initPBLUMV(String s) {
if (!s.trim().isEmpty()) {
PBLUMV = new Double(s);
}
}

protected final void initPBLUMV2(String s) {
if (!s.trim().isEmpty()) {
PBLUMV2 = new Double(s);
}
}

protected final void initPBLUMV2_I(String s) {
if (!s.trim().isEmpty()) {
PBLUMV2_I = new Double(s);
}
}

protected final void initPBLUMV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBLUMV2_IFLAG = new Double(s);
}
}

protected final void initPBLUMV_I(String s) {
if (!s.trim().isEmpty()) {
PBLUMV_I = new Double(s);
}
}

protected final void initPBLUMV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBLUMV_IFLAG = new Double(s);
}
}

protected final void initPBQUAL(String s) {
if (!s.trim().isEmpty()) {
PBQUAL = new Double(s);
}
}

protected final void initPBQUAL2(String s) {
if (!s.trim().isEmpty()) {
PBQUAL2 = new Double(s);
}
}

protected final void initPBQUAL2_I(String s) {
if (!s.trim().isEmpty()) {
PBQUAL2_I = new Double(s);
}
}

protected final void initPBQUAL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBQUAL2_IFLAG = new Double(s);
}
}

protected final void initPBQUAL_I(String s) {
if (!s.trim().isEmpty()) {
PBQUAL_I = new Double(s);
}
}

protected final void initPBQUAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PBQUAL_IFLAG = new Double(s);
}
}

protected final void initPBSTMN(String s) {
if (!s.trim().isEmpty()) {
PBSTMN = new Double(s);
}
}

protected final void initPBSTMN2(String s) {
if (!s.trim().isEmpty()) {
PBSTMN2 = new Double(s);
}
}

protected final void initPBSTYR(String s) {
if (!s.trim().isEmpty()) {
PBSTYR = new Double(s);
}
}

protected final void initPBSTYR2(String s) {
if (!s.trim().isEmpty()) {
PBSTYR2 = new Double(s);
}
}

protected final void initPCCFST1(String s) {
if (!s.trim().isEmpty()) {
PCCFST1 = new Double(s);
}
}

protected final void initPCCFST1_I(String s) {
if (!s.trim().isEmpty()) {
PCCFST1_I = new Double(s);
}
}

protected final void initPCCFST1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PCCFST1_IFLAG = new Double(s);
}
}

protected final void initPCCFST2(String s) {
if (!s.trim().isEmpty()) {
PCCFST2 = new Double(s);
}
}

protected final void initPCCFST2_I(String s) {
if (!s.trim().isEmpty()) {
PCCFST2_I = new Double(s);
}
}

protected final void initPCCFST2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PCCFST2_IFLAG = new Double(s);
}
}

protected final void initPCCFST3(String s) {
if (!s.trim().isEmpty()) {
PCCFST3 = new Double(s);
}
}

protected final void initPCCFST3_I(String s) {
if (!s.trim().isEmpty()) {
PCCFST3_I = new Double(s);
}
}

protected final void initPCCFST3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PCCFST3_IFLAG = new Double(s);
}
}

protected final void initPCDOCS(String s) {
if (!s.trim().isEmpty()) {
PCDOCS = new Double(s);
}
}

protected final void initPCDOCS2(String s) {
if (!s.trim().isEmpty()) {
PCDOCS2 = new Double(s);
}
}

protected final void initPCNEW(String s) {
if (!s.trim().isEmpty()) {
PCNEW = new Double(s);
}
}

protected final void initPCNUM(String s) {
if (!s.trim().isEmpty()) {
PCNUM = new Double(s);
}
}

protected final void initPCONT(String s) {
if (!s.trim().isEmpty()) {
PCONT = new Double(s);
}
}

protected final void initPCONT_I(String s) {
if (!s.trim().isEmpty()) {
PCONT_I = new Double(s);
}
}

protected final void initPCONT_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PCONT_IFLAG = new Double(s);
}
}

protected final void initPCSTMN(String s) {
if (!s.trim().isEmpty()) {
PCSTMN = new Double(s);
}
}

protected final void initPCSTMN2(String s) {
if (!s.trim().isEmpty()) {
PCSTMN2 = new Double(s);
}
}

protected final void initPCSTYR(String s) {
if (!s.trim().isEmpty()) {
PCSTYR = new Double(s);
}
}

protected final void initPCSTYR2(String s) {
if (!s.trim().isEmpty()) {
PCSTYR2 = new Double(s);
}
}

protected final void initPDBCAL(String s) {
if (!s.trim().isEmpty()) {
PDBCAL = new Double(s);
}
}

protected final void initPDBCAL2(String s) {
if (!s.trim().isEmpty()) {
PDBCAL2 = new Double(s);
}
}

protected final void initPDCVAL(String s) {
if (!s.trim().isEmpty()) {
PDCVAL = new Double(s);
}
}

protected final void initPDCVAL2(String s) {
if (!s.trim().isEmpty()) {
PDCVAL2 = new Double(s);
}
}

protected final void initPDCVAL2_I(String s) {
if (!s.trim().isEmpty()) {
PDCVAL2_I = new Double(s);
}
}

protected final void initPDCVAL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PDCVAL2_IFLAG = new Double(s);
}
}

protected final void initPDCVAL_I(String s) {
if (!s.trim().isEmpty()) {
PDCVAL_I = new Double(s);
}
}

protected final void initPDCVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PDCVAL_IFLAG = new Double(s);
}
}

protected final void initPDCVB(String s) {
if (!s.trim().isEmpty()) {
PDCVB = new Double(s);
}
}

protected final void initPDCVB2(String s) {
if (!s.trim().isEmpty()) {
PDCVB2 = new Double(s);
}
}

protected final void initPERMJB(String s) {
if (!s.trim().isEmpty()) {
PERMJB = new Double(s);
}
}

protected final void initPERNOWK(String s) {
if (!s.trim().isEmpty()) {
PERNOWK = new Double(s);
}
}

protected final void initPERSONW2(String s) {
if (!s.trim().isEmpty()) {
PERSONW2 = new Integer(s);
}
}

protected final void initPESAME(String s) {
if (!s.trim().isEmpty()) {
PESAME = new Double(s);
}
}

protected final void initPESAME_I(String s) {
if (!s.trim().isEmpty()) {
PESAME_I = new Double(s);
}
}

protected final void initPESAME_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PESAME_IFLAG = new Double(s);
}
}

protected final void initPEWYNO05(String s) {
if (!s.trim().isEmpty()) {
PEWYNO05 = new Double(s);
}
}

protected final void initPFACCU3(String s) {
if (!s.trim().isEmpty()) {
PFACCU3 = new Double(s);
}
}

protected final void initPFACCU5(String s) {
if (!s.trim().isEmpty()) {
PFACCU5 = new Double(s);
}
}

protected final void initPFACCU6(String s) {
if (!s.trim().isEmpty()) {
PFACCU6 = new Double(s);
}
}

protected final void initPFANEH(String s) {
if (!s.trim().isEmpty()) {
PFANEH = new Double(s);
}
}

protected final void initPFANEH2(String s) {
if (!s.trim().isEmpty()) {
PFANEH2 = new Double(s);
}
}

protected final void initPFANEH3(String s) {
if (!s.trim().isEmpty()) {
PFANEH3 = new Double(s);
}
}

protected final void initPFANEXM(String s) {
if (!s.trim().isEmpty()) {
PFANEXM = new Double(s);
}
}

protected final void initPFANEXY(String s) {
if (!s.trim().isEmpty()) {
PFANEXY = new Double(s);
}
}

protected final void initPFANGA(String s) {
if (!s.trim().isEmpty()) {
PFANGA = new Double(s);
}
}

protected final void initPFANGA2(String s) {
if (!s.trim().isEmpty()) {
PFANGA2 = new Double(s);
}
}

protected final void initPFANGA3(String s) {
if (!s.trim().isEmpty()) {
PFANGA3 = new Double(s);
}
}

protected final void initPFANIF(String s) {
if (!s.trim().isEmpty()) {
PFANIF = new Double(s);
}
}

protected final void initPFANIF2(String s) {
if (!s.trim().isEmpty()) {
PFANIF2 = new Double(s);
}
}

protected final void initPFANIF3(String s) {
if (!s.trim().isEmpty()) {
PFANIF3 = new Double(s);
}
}

protected final void initPFANJT(String s) {
if (!s.trim().isEmpty()) {
PFANJT = new Double(s);
}
}

protected final void initPFANJT2(String s) {
if (!s.trim().isEmpty()) {
PFANJT2 = new Double(s);
}
}

protected final void initPFANJT3(String s) {
if (!s.trim().isEmpty()) {
PFANJT3 = new Double(s);
}
}

protected final void initPFANLM(String s) {
if (!s.trim().isEmpty()) {
PFANLM = new Double(s);
}
}

protected final void initPFANLM2(String s) {
if (!s.trim().isEmpty()) {
PFANLM2 = new Double(s);
}
}

protected final void initPFANN1(String s) {
if (!s.trim().isEmpty()) {
PFANN1 = new Double(s);
}
}

protected final void initPFANN11(String s) {
if (!s.trim().isEmpty()) {
PFANN11 = new Double(s);
}
}

protected final void initPFANN12(String s) {
if (!s.trim().isEmpty()) {
PFANN12 = new Double(s);
}
}

protected final void initPFANN2(String s) {
if (!s.trim().isEmpty()) {
PFANN2 = new Double(s);
}
}

protected final void initPFANN3(String s) {
if (!s.trim().isEmpty()) {
PFANN3 = new Double(s);
}
}

protected final void initPFANN6(String s) {
if (!s.trim().isEmpty()) {
PFANN6 = new Double(s);
}
}

protected final void initPFANN7(String s) {
if (!s.trim().isEmpty()) {
PFANN7 = new Double(s);
}
}

protected final void initPFANVB(String s) {
if (!s.trim().isEmpty()) {
PFANVB = new Double(s);
}
}

protected final void initPFANVI(String s) {
if (!s.trim().isEmpty()) {
PFANVI = new Double(s);
}
}

protected final void initPFANVI2(String s) {
if (!s.trim().isEmpty()) {
PFANVI2 = new Double(s);
}
}

protected final void initPFANVI3(String s) {
if (!s.trim().isEmpty()) {
PFANVI3 = new Double(s);
}
}

protected final void initPFBEG(String s) {
if (!s.trim().isEmpty()) {
PFBEG = new Double(s);
}
}

protected final void initPFBEG2(String s) {
if (!s.trim().isEmpty()) {
PFBEG2 = new Double(s);
}
}

protected final void initPFBEG3(String s) {
if (!s.trim().isEmpty()) {
PFBEG3 = new Double(s);
}
}

protected final void initPFBEG4(String s) {
if (!s.trim().isEmpty()) {
PFBEG4 = new Double(s);
}
}

protected final void initPFBEG5(String s) {
if (!s.trim().isEmpty()) {
PFBEG5 = new Double(s);
}
}

protected final void initPFBEG6(String s) {
if (!s.trim().isEmpty()) {
PFBEG6 = new Double(s);
}
}

protected final void initPFCASH(String s) {
if (!s.trim().isEmpty()) {
PFCASH = new Double(s);
}
}

protected final void initPFCASH2(String s) {
if (!s.trim().isEmpty()) {
PFCASH2 = new Double(s);
}
}

protected final void initPFCASH2_I(String s) {
if (!s.trim().isEmpty()) {
PFCASH2_I = new Double(s);
}
}

protected final void initPFCASH2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCASH2_IFLAG = new Double(s);
}
}

protected final void initPFCASH3(String s) {
if (!s.trim().isEmpty()) {
PFCASH3 = new Double(s);
}
}

protected final void initPFCASH3_I(String s) {
if (!s.trim().isEmpty()) {
PFCASH3_I = new Double(s);
}
}

protected final void initPFCASH3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCASH3_IFLAG = new Double(s);
}
}

protected final void initPFCASH4(String s) {
if (!s.trim().isEmpty()) {
PFCASH4 = new Double(s);
}
}

protected final void initPFCASH4_I(String s) {
if (!s.trim().isEmpty()) {
PFCASH4_I = new Double(s);
}
}

protected final void initPFCASH4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCASH4_IFLAG = new Double(s);
}
}

protected final void initPFCASH_I(String s) {
if (!s.trim().isEmpty()) {
PFCASH_I = new Double(s);
}
}

protected final void initPFCASH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCASH_IFLAG = new Double(s);
}
}

protected final void initPFCRET1(String s) {
if (!s.trim().isEmpty()) {
PFCRET1 = new Double(s);
}
}

protected final void initPFCRET2(String s) {
if (!s.trim().isEmpty()) {
PFCRET2 = new Double(s);
}
}

protected final void initPFCRET3(String s) {
if (!s.trim().isEmpty()) {
PFCRET3 = new Double(s);
}
}

protected final void initPFCRET4(String s) {
if (!s.trim().isEmpty()) {
PFCRET4 = new Double(s);
}
}

protected final void initPFCRET5(String s) {
if (!s.trim().isEmpty()) {
PFCRET5 = new Double(s);
}
}

protected final void initPFCRET6(String s) {
if (!s.trim().isEmpty()) {
PFCRET6 = new Double(s);
}
}

protected final void initPFCURV(String s) {
if (!s.trim().isEmpty()) {
PFCURV = new Double(s);
}
}

protected final void initPFCURV2(String s) {
if (!s.trim().isEmpty()) {
PFCURV2 = new Double(s);
}
}

protected final void initPFCURV2_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV2_I = new Double(s);
}
}

protected final void initPFCURV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV2_IFLAG = new Double(s);
}
}

protected final void initPFCURV3(String s) {
if (!s.trim().isEmpty()) {
PFCURV3 = new Double(s);
}
}

protected final void initPFCURV3_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV3_I = new Double(s);
}
}

protected final void initPFCURV3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV3_IFLAG = new Double(s);
}
}

protected final void initPFCURV4(String s) {
if (!s.trim().isEmpty()) {
PFCURV4 = new Double(s);
}
}

protected final void initPFCURV4_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV4_I = new Double(s);
}
}

protected final void initPFCURV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV4_IFLAG = new Double(s);
}
}

protected final void initPFCURV5(String s) {
if (!s.trim().isEmpty()) {
PFCURV5 = new Double(s);
}
}

protected final void initPFCURV5_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV5_I = new Double(s);
}
}

protected final void initPFCURV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV5_IFLAG = new Double(s);
}
}

protected final void initPFCURV6(String s) {
if (!s.trim().isEmpty()) {
PFCURV6 = new Double(s);
}
}

protected final void initPFCURV6_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV6_I = new Double(s);
}
}

protected final void initPFCURV6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV6_IFLAG = new Double(s);
}
}

protected final void initPFCURV_I(String s) {
if (!s.trim().isEmpty()) {
PFCURV_I = new Double(s);
}
}

protected final void initPFCURV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFCURV_IFLAG = new Double(s);
}
}

protected final void initPFCUVB(String s) {
if (!s.trim().isEmpty()) {
PFCUVB = new Double(s);
}
}

protected final void initPFCUVB2(String s) {
if (!s.trim().isEmpty()) {
PFCUVB2 = new Double(s);
}
}

protected final void initPFCUVB3(String s) {
if (!s.trim().isEmpty()) {
PFCUVB3 = new Double(s);
}
}

protected final void initPFCUVB4(String s) {
if (!s.trim().isEmpty()) {
PFCUVB4 = new Double(s);
}
}

protected final void initPFCUVB5(String s) {
if (!s.trim().isEmpty()) {
PFCUVB5 = new Double(s);
}
}

protected final void initPFCUVB6(String s) {
if (!s.trim().isEmpty()) {
PFCUVB6 = new Double(s);
}
}

protected final void initPFDDV(String s) {
if (!s.trim().isEmpty()) {
PFDDV = new Double(s);
}
}

protected final void initPFDDV2(String s) {
if (!s.trim().isEmpty()) {
PFDDV2 = new Double(s);
}
}

protected final void initPFDDV2_I(String s) {
if (!s.trim().isEmpty()) {
PFDDV2_I = new Double(s);
}
}

protected final void initPFDDV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDDV2_IFLAG = new Double(s);
}
}

protected final void initPFDDV3(String s) {
if (!s.trim().isEmpty()) {
PFDDV3 = new Double(s);
}
}

protected final void initPFDDV3_I(String s) {
if (!s.trim().isEmpty()) {
PFDDV3_I = new Double(s);
}
}

protected final void initPFDDV3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDDV3_IFLAG = new Double(s);
}
}

protected final void initPFDDV4(String s) {
if (!s.trim().isEmpty()) {
PFDDV4 = new Double(s);
}
}

protected final void initPFDDV4_I(String s) {
if (!s.trim().isEmpty()) {
PFDDV4_I = new Double(s);
}
}

protected final void initPFDDV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDDV4_IFLAG = new Double(s);
}
}

protected final void initPFDDV5(String s) {
if (!s.trim().isEmpty()) {
PFDDV5 = new Double(s);
}
}

protected final void initPFDDV6(String s) {
if (!s.trim().isEmpty()) {
PFDDV6 = new Double(s);
}
}

protected final void initPFDDVB(String s) {
if (!s.trim().isEmpty()) {
PFDDVB = new Double(s);
}
}

protected final void initPFDDVB2(String s) {
if (!s.trim().isEmpty()) {
PFDDVB2 = new Double(s);
}
}

protected final void initPFDDVB3(String s) {
if (!s.trim().isEmpty()) {
PFDDVB3 = new Double(s);
}
}

protected final void initPFDDVB4(String s) {
if (!s.trim().isEmpty()) {
PFDDVB4 = new Double(s);
}
}

protected final void initPFDDVB5(String s) {
if (!s.trim().isEmpty()) {
PFDDVB5 = new Double(s);
}
}

protected final void initPFDDVB6(String s) {
if (!s.trim().isEmpty()) {
PFDDVB6 = new Double(s);
}
}

protected final void initPFDDV_I(String s) {
if (!s.trim().isEmpty()) {
PFDDV_I = new Double(s);
}
}

protected final void initPFDDV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDDV_IFLAG = new Double(s);
}
}

protected final void initPFDOCS(String s) {
if (!s.trim().isEmpty()) {
PFDOCS = new Double(s);
}
}

protected final void initPFDOCS2(String s) {
if (!s.trim().isEmpty()) {
PFDOCS2 = new Double(s);
}
}

protected final void initPFDOCS3(String s) {
if (!s.trim().isEmpty()) {
PFDOCS3 = new Double(s);
}
}

protected final void initPFDOCS4(String s) {
if (!s.trim().isEmpty()) {
PFDOCS4 = new Double(s);
}
}

protected final void initPFDOCS5(String s) {
if (!s.trim().isEmpty()) {
PFDOCS5 = new Double(s);
}
}

protected final void initPFDOCS6(String s) {
if (!s.trim().isEmpty()) {
PFDOCS6 = new Double(s);
}
}

protected final void initPFDRAW(String s) {
if (!s.trim().isEmpty()) {
PFDRAW = new Double(s);
}
}

protected final void initPFDRAW2_I(String s) {
if (!s.trim().isEmpty()) {
PFDRAW2_I = new Double(s);
}
}

protected final void initPFDRAW2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDRAW2_IFLAG = new Double(s);
}
}

protected final void initPFDRAW3(String s) {
if (!s.trim().isEmpty()) {
PFDRAW3 = new Double(s);
}
}

protected final void initPFDRAW3_I(String s) {
if (!s.trim().isEmpty()) {
PFDRAW3_I = new Double(s);
}
}

protected final void initPFDRAW3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDRAW3_IFLAG = new Double(s);
}
}

protected final void initPFDRAW4(String s) {
if (!s.trim().isEmpty()) {
PFDRAW4 = new Double(s);
}
}

protected final void initPFDRAW4_I(String s) {
if (!s.trim().isEmpty()) {
PFDRAW4_I = new Double(s);
}
}

protected final void initPFDRAW4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDRAW4_IFLAG = new Double(s);
}
}

protected final void initPFDRAW5(String s) {
if (!s.trim().isEmpty()) {
PFDRAW5 = new Double(s);
}
}

protected final void initPFDRAW6(String s) {
if (!s.trim().isEmpty()) {
PFDRAW6 = new Double(s);
}
}

protected final void initPFDRAW_I(String s) {
if (!s.trim().isEmpty()) {
PFDRAW_I = new Double(s);
}
}

protected final void initPFDRAW_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFDRAW_IFLAG = new Double(s);
}
}

protected final void initPFDRA___W2(String s) {
if (!s.trim().isEmpty()) {
PFDRA___W2 = new Double(s);
}
}

protected final void initPFDRINC(String s) {
if (!s.trim().isEmpty()) {
PFDRINC = new Double(s);
}
}

protected final void initPFDRINC2(String s) {
if (!s.trim().isEmpty()) {
PFDRINC2 = new Double(s);
}
}

protected final void initPFDRINC3(String s) {
if (!s.trim().isEmpty()) {
PFDRINC3 = new Double(s);
}
}

protected final void initPFDRINC4(String s) {
if (!s.trim().isEmpty()) {
PFDRINC4 = new Double(s);
}
}

protected final void initPFDRINC5(String s) {
if (!s.trim().isEmpty()) {
PFDRINC5 = new Double(s);
}
}

protected final void initPFDRINC6(String s) {
if (!s.trim().isEmpty()) {
PFDRINC6 = new Double(s);
}
}

protected final void initPFDRINCB(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB = new Double(s);
}
}

protected final void initPFDRINCB2(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB2 = new Double(s);
}
}

protected final void initPFDRINCB3(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB3 = new Double(s);
}
}

protected final void initPFDRINCB4(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB4 = new Double(s);
}
}

protected final void initPFDRINCB5(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB5 = new Double(s);
}
}

protected final void initPFDRINCB6(String s) {
if (!s.trim().isEmpty()) {
PFDRINCB6 = new Double(s);
}
}

protected final void initPFDRVB(String s) {
if (!s.trim().isEmpty()) {
PFDRVB = new Double(s);
}
}

protected final void initPFDRVB2(String s) {
if (!s.trim().isEmpty()) {
PFDRVB2 = new Double(s);
}
}

protected final void initPFDRVB3(String s) {
if (!s.trim().isEmpty()) {
PFDRVB3 = new Double(s);
}
}

protected final void initPFDRVB4(String s) {
if (!s.trim().isEmpty()) {
PFDRVB4 = new Double(s);
}
}

protected final void initPFDRVB5(String s) {
if (!s.trim().isEmpty()) {
PFDRVB5 = new Double(s);
}
}

protected final void initPFDRVB6(String s) {
if (!s.trim().isEmpty()) {
PFDRVB6 = new Double(s);
}
}

protected final void initPFDRVI(String s) {
if (!s.trim().isEmpty()) {
PFDRVI = new Double(s);
}
}

protected final void initPFDRVI2(String s) {
if (!s.trim().isEmpty()) {
PFDRVI2 = new Double(s);
}
}

protected final void initPFDRVI3(String s) {
if (!s.trim().isEmpty()) {
PFDRVI3 = new Double(s);
}
}

protected final void initPFDRVI4(String s) {
if (!s.trim().isEmpty()) {
PFDRVI4 = new Double(s);
}
}

protected final void initPFDRVI5(String s) {
if (!s.trim().isEmpty()) {
PFDRVI5 = new Double(s);
}
}

protected final void initPFDRVI6(String s) {
if (!s.trim().isEmpty()) {
PFDRVI6 = new Double(s);
}
}

protected final void initPFEN(String s) {
if (!s.trim().isEmpty()) {
PFEN = new Double(s);
}
}

protected final void initPFEND(String s) {
if (!s.trim().isEmpty()) {
PFEND = new Double(s);
}
}

protected final void initPFEND2(String s) {
if (!s.trim().isEmpty()) {
PFEND2 = new Double(s);
}
}

protected final void initPFEND3(String s) {
if (!s.trim().isEmpty()) {
PFEND3 = new Double(s);
}
}

protected final void initPFEND4(String s) {
if (!s.trim().isEmpty()) {
PFEND4 = new Double(s);
}
}

protected final void initPFEND5(String s) {
if (!s.trim().isEmpty()) {
PFEND5 = new Double(s);
}
}

protected final void initPFEND6(String s) {
if (!s.trim().isEmpty()) {
PFEND6 = new Double(s);
}
}

protected final void initPFENNUM(String s) {
if (!s.trim().isEmpty()) {
PFENNUM = new Double(s);
}
}

protected final void initPFFAAG(String s) {
if (!s.trim().isEmpty()) {
PFFAAG = new Double(s);
}
}

protected final void initPFFAAG2(String s) {
if (!s.trim().isEmpty()) {
PFFAAG2 = new Double(s);
}
}

protected final void initPFFAAG3(String s) {
if (!s.trim().isEmpty()) {
PFFAAG3 = new Double(s);
}
}

protected final void initPFFAAG4(String s) {
if (!s.trim().isEmpty()) {
PFFAAG4 = new Double(s);
}
}

protected final void initPFFAAG5(String s) {
if (!s.trim().isEmpty()) {
PFFAAG5 = new Double(s);
}
}

protected final void initPFFAAG6(String s) {
if (!s.trim().isEmpty()) {
PFFAAG6 = new Double(s);
}
}

protected final void initPFFAN11(String s) {
if (!s.trim().isEmpty()) {
PFFAN11 = new Double(s);
}
}

protected final void initPFFAN16(String s) {
if (!s.trim().isEmpty()) {
PFFAN16 = new Double(s);
}
}

protected final void initPFFAN2(String s) {
if (!s.trim().isEmpty()) {
PFFAN2 = new Double(s);
}
}

protected final void initPFFAN6(String s) {
if (!s.trim().isEmpty()) {
PFFAN6 = new Double(s);
}
}

protected final void initPFFAWH1(String s) {
if (!s.trim().isEmpty()) {
PFFAWH1 = new Double(s);
}
}

protected final void initPFFAWH13(String s) {
if (!s.trim().isEmpty()) {
PFFAWH13 = new Double(s);
}
}

protected final void initPFFAWH7(String s) {
if (!s.trim().isEmpty()) {
PFFAWH7 = new Double(s);
}
}

protected final void initPFINCA(String s) {
if (!s.trim().isEmpty()) {
PFINCA = new Double(s);
}
}

protected final void initPFINCA2(String s) {
if (!s.trim().isEmpty()) {
PFINCA2 = new Double(s);
}
}

protected final void initPFINCA2_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA2_I = new Double(s);
}
}

protected final void initPFINCA2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA2_IFLAG = new Double(s);
}
}

protected final void initPFINCA3(String s) {
if (!s.trim().isEmpty()) {
PFINCA3 = new Double(s);
}
}

protected final void initPFINCA3_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA3_I = new Double(s);
}
}

protected final void initPFINCA3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA3_IFLAG = new Double(s);
}
}

protected final void initPFINCA4(String s) {
if (!s.trim().isEmpty()) {
PFINCA4 = new Double(s);
}
}

protected final void initPFINCA4_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA4_I = new Double(s);
}
}

protected final void initPFINCA4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA4_IFLAG = new Double(s);
}
}

protected final void initPFINCA5(String s) {
if (!s.trim().isEmpty()) {
PFINCA5 = new Double(s);
}
}

protected final void initPFINCA5_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA5_I = new Double(s);
}
}

protected final void initPFINCA5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA5_IFLAG = new Double(s);
}
}

protected final void initPFINCA6(String s) {
if (!s.trim().isEmpty()) {
PFINCA6 = new Double(s);
}
}

protected final void initPFINCA6_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA6_I = new Double(s);
}
}

protected final void initPFINCA6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA6_IFLAG = new Double(s);
}
}

protected final void initPFINCA_I(String s) {
if (!s.trim().isEmpty()) {
PFINCA_I = new Double(s);
}
}

protected final void initPFINCA_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCA_IFLAG = new Double(s);
}
}

protected final void initPFINCP(String s) {
if (!s.trim().isEmpty()) {
PFINCP = new Double(s);
}
}

protected final void initPFINCP2(String s) {
if (!s.trim().isEmpty()) {
PFINCP2 = new Double(s);
}
}

protected final void initPFINCP2_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP2_I = new Double(s);
}
}

protected final void initPFINCP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP2_IFLAG = new Double(s);
}
}

protected final void initPFINCP3(String s) {
if (!s.trim().isEmpty()) {
PFINCP3 = new Double(s);
}
}

protected final void initPFINCP3_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP3_I = new Double(s);
}
}

protected final void initPFINCP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP3_IFLAG = new Double(s);
}
}

protected final void initPFINCP4(String s) {
if (!s.trim().isEmpty()) {
PFINCP4 = new Double(s);
}
}

protected final void initPFINCP4_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP4_I = new Double(s);
}
}

protected final void initPFINCP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP4_IFLAG = new Double(s);
}
}

protected final void initPFINCP5(String s) {
if (!s.trim().isEmpty()) {
PFINCP5 = new Double(s);
}
}

protected final void initPFINCP5_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP5_I = new Double(s);
}
}

protected final void initPFINCP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP5_IFLAG = new Double(s);
}
}

protected final void initPFINCP6(String s) {
if (!s.trim().isEmpty()) {
PFINCP6 = new Double(s);
}
}

protected final void initPFINCP6_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP6_I = new Double(s);
}
}

protected final void initPFINCP6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP6_IFLAG = new Double(s);
}
}

protected final void initPFINCP_I(String s) {
if (!s.trim().isEmpty()) {
PFINCP_I = new Double(s);
}
}

protected final void initPFINCP_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFINCP_IFLAG = new Double(s);
}
}

protected final void initPFLMUS(String s) {
if (!s.trim().isEmpty()) {
PFLMUS = new Double(s);
}
}

protected final void initPFLMUS2(String s) {
if (!s.trim().isEmpty()) {
PFLMUS2 = new Double(s);
}
}

protected final void initPFLMUS3(String s) {
if (!s.trim().isEmpty()) {
PFLMUS3 = new Double(s);
}
}

protected final void initPFLMUS4(String s) {
if (!s.trim().isEmpty()) {
PFLMUS4 = new Double(s);
}
}

protected final void initPFLMUS5(String s) {
if (!s.trim().isEmpty()) {
PFLMUS5 = new Double(s);
}
}

protected final void initPFLMUS6(String s) {
if (!s.trim().isEmpty()) {
PFLMUS6 = new Double(s);
}
}

protected final void initPFLMV(String s) {
if (!s.trim().isEmpty()) {
PFLMV = new Double(s);
}
}

protected final void initPFLMV2(String s) {
if (!s.trim().isEmpty()) {
PFLMV2 = new Double(s);
}
}

protected final void initPFLMV3(String s) {
if (!s.trim().isEmpty()) {
PFLMV3 = new Double(s);
}
}

protected final void initPFLMV4(String s) {
if (!s.trim().isEmpty()) {
PFLMV4 = new Double(s);
}
}

protected final void initPFLMV5(String s) {
if (!s.trim().isEmpty()) {
PFLMV5 = new Double(s);
}
}

protected final void initPFLMV6(String s) {
if (!s.trim().isEmpty()) {
PFLMV6 = new Double(s);
}
}

protected final void initPFLMVB(String s) {
if (!s.trim().isEmpty()) {
PFLMVB = new Double(s);
}
}

protected final void initPFLMVB2(String s) {
if (!s.trim().isEmpty()) {
PFLMVB2 = new Double(s);
}
}

protected final void initPFLMVB3(String s) {
if (!s.trim().isEmpty()) {
PFLMVB3 = new Double(s);
}
}

protected final void initPFLMVB4(String s) {
if (!s.trim().isEmpty()) {
PFLMVB4 = new Double(s);
}
}

protected final void initPFLMVB5(String s) {
if (!s.trim().isEmpty()) {
PFLMVB5 = new Double(s);
}
}

protected final void initPFLMVB6(String s) {
if (!s.trim().isEmpty()) {
PFLMVB6 = new Double(s);
}
}

protected final void initPFLUM(String s) {
if (!s.trim().isEmpty()) {
PFLUM = new Double(s);
}
}

protected final void initPFLUM2(String s) {
if (!s.trim().isEmpty()) {
PFLUM2 = new Double(s);
}
}

protected final void initPFLUM2_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM2_I = new Double(s);
}
}

protected final void initPFLUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM2_IFLAG = new Double(s);
}
}

protected final void initPFLUM3(String s) {
if (!s.trim().isEmpty()) {
PFLUM3 = new Double(s);
}
}

protected final void initPFLUM3_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM3_I = new Double(s);
}
}

protected final void initPFLUM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM3_IFLAG = new Double(s);
}
}

protected final void initPFLUM4(String s) {
if (!s.trim().isEmpty()) {
PFLUM4 = new Double(s);
}
}

protected final void initPFLUM4_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM4_I = new Double(s);
}
}

protected final void initPFLUM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM4_IFLAG = new Double(s);
}
}

protected final void initPFLUM5(String s) {
if (!s.trim().isEmpty()) {
PFLUM5 = new Double(s);
}
}

protected final void initPFLUM5_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM5_I = new Double(s);
}
}

protected final void initPFLUM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM5_IFLAG = new Double(s);
}
}

protected final void initPFLUM6(String s) {
if (!s.trim().isEmpty()) {
PFLUM6 = new Double(s);
}
}

protected final void initPFLUM6_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM6_I = new Double(s);
}
}

protected final void initPFLUM6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM6_IFLAG = new Double(s);
}
}

protected final void initPFLUMALL(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL = new Double(s);
}
}

protected final void initPFLUMALL2(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL2 = new Double(s);
}
}

protected final void initPFLUMALL2_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL2_I = new Double(s);
}
}

protected final void initPFLUMALL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL2_IFLAG = new Double(s);
}
}

protected final void initPFLUMALL3(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL3 = new Double(s);
}
}

protected final void initPFLUMALL3_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL3_I = new Double(s);
}
}

protected final void initPFLUMALL3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL3_IFLAG = new Double(s);
}
}

protected final void initPFLUMALL4(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL4 = new Double(s);
}
}

protected final void initPFLUMALL4_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL4_I = new Double(s);
}
}

protected final void initPFLUMALL4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL4_IFLAG = new Double(s);
}
}

protected final void initPFLUMALL_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL_I = new Double(s);
}
}

protected final void initPFLUMALL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMALL_IFLAG = new Double(s);
}
}

protected final void initPFLUMV(String s) {
if (!s.trim().isEmpty()) {
PFLUMV = new Double(s);
}
}

protected final void initPFLUMV2(String s) {
if (!s.trim().isEmpty()) {
PFLUMV2 = new Double(s);
}
}

protected final void initPFLUMV2_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV2_I = new Double(s);
}
}

protected final void initPFLUMV2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV2_IFLAG = new Double(s);
}
}

protected final void initPFLUMV3(String s) {
if (!s.trim().isEmpty()) {
PFLUMV3 = new Double(s);
}
}

protected final void initPFLUMV3_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV3_I = new Double(s);
}
}

protected final void initPFLUMV3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV3_IFLAG = new Double(s);
}
}

protected final void initPFLUMV4(String s) {
if (!s.trim().isEmpty()) {
PFLUMV4 = new Double(s);
}
}

protected final void initPFLUMV4_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV4_I = new Double(s);
}
}

protected final void initPFLUMV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV4_IFLAG = new Double(s);
}
}

protected final void initPFLUMV5(String s) {
if (!s.trim().isEmpty()) {
PFLUMV5 = new Double(s);
}
}

protected final void initPFLUMV5_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV5_I = new Double(s);
}
}

protected final void initPFLUMV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV5_IFLAG = new Double(s);
}
}

protected final void initPFLUMV6(String s) {
if (!s.trim().isEmpty()) {
PFLUMV6 = new Double(s);
}
}

protected final void initPFLUMV6_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV6_I = new Double(s);
}
}

protected final void initPFLUMV6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV6_IFLAG = new Double(s);
}
}

protected final void initPFLUMV_I(String s) {
if (!s.trim().isEmpty()) {
PFLUMV_I = new Double(s);
}
}

protected final void initPFLUMV_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUMV_IFLAG = new Double(s);
}
}

protected final void initPFLUM_I(String s) {
if (!s.trim().isEmpty()) {
PFLUM_I = new Double(s);
}
}

protected final void initPFLUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFLUM_IFLAG = new Double(s);
}
}

protected final void initPFLUVB(String s) {
if (!s.trim().isEmpty()) {
PFLUVB = new Double(s);
}
}

protected final void initPFLUVB2(String s) {
if (!s.trim().isEmpty()) {
PFLUVB2 = new Double(s);
}
}

protected final void initPFLUVB3(String s) {
if (!s.trim().isEmpty()) {
PFLUVB3 = new Double(s);
}
}

protected final void initPFLUVB4(String s) {
if (!s.trim().isEmpty()) {
PFLUVB4 = new Double(s);
}
}

protected final void initPFLUVB5(String s) {
if (!s.trim().isEmpty()) {
PFLUVB5 = new Double(s);
}
}

protected final void initPFLUVB6(String s) {
if (!s.trim().isEmpty()) {
PFLUVB6 = new Double(s);
}
}

protected final void initPFNEW(String s) {
if (!s.trim().isEmpty()) {
PFNEW = new Double(s);
}
}

protected final void initPFNEWNO(String s) {
if (!s.trim().isEmpty()) {
PFNEWNO = new Double(s);
}
}

protected final void initPFNEWNO_I(String s) {
if (!s.trim().isEmpty()) {
PFNEWNO_I = new Double(s);
}
}

protected final void initPFNEWNO_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFNEWNO_IFLAG = new Double(s);
}
}

protected final void initPFNEW_I(String s) {
if (!s.trim().isEmpty()) {
PFNEW_I = new Double(s);
}
}

protected final void initPFNEW_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFNEW_IFLAG = new Double(s);
}
}

protected final void initPFNUM2(String s) {
if (!s.trim().isEmpty()) {
PFNUM2 = new Double(s);
}
}

protected final void initPFOCTY(String s) {
if (!s.trim().isEmpty()) {
PFOCTY = new Double(s);
}
}

protected final void initPFOCTY2(String s) {
if (!s.trim().isEmpty()) {
PFOCTY2 = new Double(s);
}
}

protected final void initPFOCTY2_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY2_I = new Double(s);
}
}

protected final void initPFOCTY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY2_IFLAG = new Double(s);
}
}

protected final void initPFOCTY3(String s) {
if (!s.trim().isEmpty()) {
PFOCTY3 = new Double(s);
}
}

protected final void initPFOCTY3_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY3_I = new Double(s);
}
}

protected final void initPFOCTY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY3_IFLAG = new Double(s);
}
}

protected final void initPFOCTY4(String s) {
if (!s.trim().isEmpty()) {
PFOCTY4 = new Double(s);
}
}

protected final void initPFOCTY4_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY4_I = new Double(s);
}
}

protected final void initPFOCTY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY4_IFLAG = new Double(s);
}
}

protected final void initPFOCTY5(String s) {
if (!s.trim().isEmpty()) {
PFOCTY5 = new Double(s);
}
}

protected final void initPFOCTY5_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY5_I = new Double(s);
}
}

protected final void initPFOCTY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY5_IFLAG = new Double(s);
}
}

protected final void initPFOCTY6(String s) {
if (!s.trim().isEmpty()) {
PFOCTY6 = new Double(s);
}
}

protected final void initPFOCTY6_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY6_I = new Double(s);
}
}

protected final void initPFOCTY6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY6_IFLAG = new Double(s);
}
}

protected final void initPFOCTY_I(String s) {
if (!s.trim().isEmpty()) {
PFOCTY_I = new Double(s);
}
}

protected final void initPFOCTY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFOCTY_IFLAG = new Double(s);
}
}

protected final void initPFPENVB(String s) {
if (!s.trim().isEmpty()) {
PFPENVB = new Double(s);
}
}

protected final void initPFPENVB2(String s) {
if (!s.trim().isEmpty()) {
PFPENVB2 = new Double(s);
}
}

protected final void initPFPENVB3(String s) {
if (!s.trim().isEmpty()) {
PFPENVB3 = new Double(s);
}
}

protected final void initPFPENVB4(String s) {
if (!s.trim().isEmpty()) {
PFPENVB4 = new Double(s);
}
}

protected final void initPFPENVB5(String s) {
if (!s.trim().isEmpty()) {
PFPENVB5 = new Double(s);
}
}

protected final void initPFPENVB6(String s) {
if (!s.trim().isEmpty()) {
PFPENVB6 = new Double(s);
}
}

protected final void initPFPENVI(String s) {
if (!s.trim().isEmpty()) {
PFPENVI = new Double(s);
}
}

protected final void initPFPENVI2(String s) {
if (!s.trim().isEmpty()) {
PFPENVI2 = new Double(s);
}
}

protected final void initPFPENVI3(String s) {
if (!s.trim().isEmpty()) {
PFPENVI3 = new Double(s);
}
}

protected final void initPFPENVI4(String s) {
if (!s.trim().isEmpty()) {
PFPENVI4 = new Double(s);
}
}

protected final void initPFPENVI5(String s) {
if (!s.trim().isEmpty()) {
PFPENVI5 = new Double(s);
}
}

protected final void initPFPENVI6(String s) {
if (!s.trim().isEmpty()) {
PFPENVI6 = new Double(s);
}
}

protected final void initPFREC(String s) {
if (!s.trim().isEmpty()) {
PFREC = new Double(s);
}
}

protected final void initPFREC2(String s) {
if (!s.trim().isEmpty()) {
PFREC2 = new Double(s);
}
}

protected final void initPFREC2_I(String s) {
if (!s.trim().isEmpty()) {
PFREC2_I = new Double(s);
}
}

protected final void initPFREC2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC2_IFLAG = new Double(s);
}
}

protected final void initPFREC3(String s) {
if (!s.trim().isEmpty()) {
PFREC3 = new Double(s);
}
}

protected final void initPFREC3_I(String s) {
if (!s.trim().isEmpty()) {
PFREC3_I = new Double(s);
}
}

protected final void initPFREC3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC3_IFLAG = new Double(s);
}
}

protected final void initPFREC4(String s) {
if (!s.trim().isEmpty()) {
PFREC4 = new Double(s);
}
}

protected final void initPFREC4_I(String s) {
if (!s.trim().isEmpty()) {
PFREC4_I = new Double(s);
}
}

protected final void initPFREC4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC4_IFLAG = new Double(s);
}
}

protected final void initPFREC5(String s) {
if (!s.trim().isEmpty()) {
PFREC5 = new Double(s);
}
}

protected final void initPFREC5_I(String s) {
if (!s.trim().isEmpty()) {
PFREC5_I = new Double(s);
}
}

protected final void initPFREC5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC5_IFLAG = new Double(s);
}
}

protected final void initPFREC6(String s) {
if (!s.trim().isEmpty()) {
PFREC6 = new Double(s);
}
}

protected final void initPFREC6_I(String s) {
if (!s.trim().isEmpty()) {
PFREC6_I = new Double(s);
}
}

protected final void initPFREC6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC6_IFLAG = new Double(s);
}
}

protected final void initPFREC_I(String s) {
if (!s.trim().isEmpty()) {
PFREC_I = new Double(s);
}
}

protected final void initPFREC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREC_IFLAG = new Double(s);
}
}

protected final void initPFREM(String s) {
if (!s.trim().isEmpty()) {
PFREM = new Double(s);
}
}

protected final void initPFREM2(String s) {
if (!s.trim().isEmpty()) {
PFREM2 = new Double(s);
}
}

protected final void initPFREM2_I(String s) {
if (!s.trim().isEmpty()) {
PFREM2_I = new Double(s);
}
}

protected final void initPFREM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREM2_IFLAG = new Double(s);
}
}

protected final void initPFREM3(String s) {
if (!s.trim().isEmpty()) {
PFREM3 = new Double(s);
}
}

protected final void initPFREM3_I(String s) {
if (!s.trim().isEmpty()) {
PFREM3_I = new Double(s);
}
}

protected final void initPFREM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREM3_IFLAG = new Double(s);
}
}

protected final void initPFREM4(String s) {
if (!s.trim().isEmpty()) {
PFREM4 = new Double(s);
}
}

protected final void initPFREM4_I(String s) {
if (!s.trim().isEmpty()) {
PFREM4_I = new Double(s);
}
}

protected final void initPFREM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREM4_IFLAG = new Double(s);
}
}

protected final void initPFREM5(String s) {
if (!s.trim().isEmpty()) {
PFREM5 = new Double(s);
}
}

protected final void initPFREM6(String s) {
if (!s.trim().isEmpty()) {
PFREM6 = new Double(s);
}
}

protected final void initPFREM_I(String s) {
if (!s.trim().isEmpty()) {
PFREM_I = new Double(s);
}
}

protected final void initPFREM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFREM_IFLAG = new Double(s);
}
}

protected final void initPFSIPTY1(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY1 = new Double(s);
}
}

protected final void initPFSIPTY10(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY10 = new Double(s);
}
}

protected final void initPFSIPTY11(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY11 = new Double(s);
}
}

protected final void initPFSIPTY12(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY12 = new Double(s);
}
}

protected final void initPFSIPTY13(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY13 = new Double(s);
}
}

protected final void initPFSIPTY14(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY14 = new Double(s);
}
}

protected final void initPFSIPTY15(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY15 = new Double(s);
}
}

protected final void initPFSIPTY16(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY16 = new Double(s);
}
}

protected final void initPFSIPTY17(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY17 = new Double(s);
}
}

protected final void initPFSIPTY18(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY18 = new Double(s);
}
}

protected final void initPFSIPTY19(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY19 = new Double(s);
}
}

protected final void initPFSIPTY2(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY2 = new Double(s);
}
}

protected final void initPFSIPTY22(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY22 = new Double(s);
}
}

protected final void initPFSIPTY23(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY23 = new Double(s);
}
}

protected final void initPFSIPTY24(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY24 = new Double(s);
}
}

protected final void initPFSIPTY4(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY4 = new Double(s);
}
}

protected final void initPFSIPTY5(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY5 = new Double(s);
}
}

protected final void initPFSIPTY6(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY6 = new Double(s);
}
}

protected final void initPFSIPTY7(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY7 = new Double(s);
}
}

protected final void initPFSIPTY8(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY8 = new Double(s);
}
}

protected final void initPFSIPTY9(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY9 = new Double(s);
}
}

protected final void initPFSTMM(String s) {
if (!s.trim().isEmpty()) {
PFSTMM = new Double(s);
}
}

protected final void initPFSTMM2(String s) {
if (!s.trim().isEmpty()) {
PFSTMM2 = new Double(s);
}
}

protected final void initPFSTMM3(String s) {
if (!s.trim().isEmpty()) {
PFSTMM3 = new Double(s);
}
}

protected final void initPFSTMM4(String s) {
if (!s.trim().isEmpty()) {
PFSTMM4 = new Double(s);
}
}

protected final void initPFSTMM5(String s) {
if (!s.trim().isEmpty()) {
PFSTMM5 = new Double(s);
}
}

protected final void initPFSTMM6(String s) {
if (!s.trim().isEmpty()) {
PFSTMM6 = new Double(s);
}
}

protected final void initPFSTMY(String s) {
if (!s.trim().isEmpty()) {
PFSTMY = new Double(s);
}
}

protected final void initPFSTMY2(String s) {
if (!s.trim().isEmpty()) {
PFSTMY2 = new Double(s);
}
}

protected final void initPFSTMY3(String s) {
if (!s.trim().isEmpty()) {
PFSTMY3 = new Double(s);
}
}

protected final void initPFSTMY4(String s) {
if (!s.trim().isEmpty()) {
PFSTMY4 = new Double(s);
}
}

protected final void initPFSTMY5(String s) {
if (!s.trim().isEmpty()) {
PFSTMY5 = new Double(s);
}
}

protected final void initPFSTMY6(String s) {
if (!s.trim().isEmpty()) {
PFSTMY6 = new Double(s);
}
}

protected final void initPFTYP(String s) {
if (!s.trim().isEmpty()) {
PFTYP = new Double(s);
}
}

protected final void initPFTYP2(String s) {
if (!s.trim().isEmpty()) {
PFTYP2 = new Double(s);
}
}

protected final void initPFTYP2_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP2_I = new Double(s);
}
}

protected final void initPFTYP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP2_IFLAG = new Double(s);
}
}

protected final void initPFTYP3(String s) {
if (!s.trim().isEmpty()) {
PFTYP3 = new Double(s);
}
}

protected final void initPFTYP3_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP3_I = new Double(s);
}
}

protected final void initPFTYP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP3_IFLAG = new Double(s);
}
}

protected final void initPFTYP4(String s) {
if (!s.trim().isEmpty()) {
PFTYP4 = new Double(s);
}
}

protected final void initPFTYP4_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP4_I = new Double(s);
}
}

protected final void initPFTYP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP4_IFLAG = new Double(s);
}
}

protected final void initPFTYP5(String s) {
if (!s.trim().isEmpty()) {
PFTYP5 = new Double(s);
}
}

protected final void initPFTYP5_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP5_I = new Double(s);
}
}

protected final void initPFTYP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP5_IFLAG = new Double(s);
}
}

protected final void initPFTYP6(String s) {
if (!s.trim().isEmpty()) {
PFTYP6 = new Double(s);
}
}

protected final void initPFTYP6_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP6_I = new Double(s);
}
}

protected final void initPFTYP6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP6_IFLAG = new Double(s);
}
}

protected final void initPFTYP_I(String s) {
if (!s.trim().isEmpty()) {
PFTYP_I = new Double(s);
}
}

protected final void initPFTYP_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PFTYP_IFLAG = new Double(s);
}
}

protected final void initPIRREG(String s) {
if (!s.trim().isEmpty()) {
PIRREG = new Double(s);
}
}

protected final void initPIRREG2(String s) {
if (!s.trim().isEmpty()) {
PIRREG2 = new Double(s);
}
}

protected final void initPMORTC(String s) {
if (!s.trim().isEmpty()) {
PMORTC = new Double(s);
}
}

protected final void initPMORTC2(String s) {
if (!s.trim().isEmpty()) {
PMORTC2 = new Double(s);
}
}

protected final void initPMORTC3(String s) {
if (!s.trim().isEmpty()) {
PMORTC3 = new Double(s);
}
}

protected final void initPNEWMEM(String s) {
if (!s.trim().isEmpty()) {
PNEWMEM = new Double(s);
}
}

protected final void initPNOWK(String s) {
if (!s.trim().isEmpty()) {
PNOWK = new Double(s);
}
}

protected final void initPNOWKLN(String s) {
if (!s.trim().isEmpty()) {
PNOWKLN = new Double(s);
}
}

protected final void initPNUMOS(String s) {
if (!s.trim().isEmpty()) {
PNUMOS = new Double(s);
}
}

protected final void initPOADD1(String s) {
if (!s.trim().isEmpty()) {
POADD1 = new Double(s);
}
}

protected final void initPOADD1_I(String s) {
if (!s.trim().isEmpty()) {
POADD1_I = new Double(s);
}
}

protected final void initPOADD1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD1_IFLAG = new Double(s);
}
}

protected final void initPOADD2(String s) {
if (!s.trim().isEmpty()) {
POADD2 = new Double(s);
}
}

protected final void initPOADD2_I(String s) {
if (!s.trim().isEmpty()) {
POADD2_I = new Double(s);
}
}

protected final void initPOADD2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD2_IFLAG = new Double(s);
}
}

protected final void initPOADD3(String s) {
if (!s.trim().isEmpty()) {
POADD3 = new Double(s);
}
}

protected final void initPOADD3_I(String s) {
if (!s.trim().isEmpty()) {
POADD3_I = new Double(s);
}
}

protected final void initPOADD3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD3_IFLAG = new Double(s);
}
}

protected final void initPOADD4(String s) {
if (!s.trim().isEmpty()) {
POADD4 = new Double(s);
}
}

protected final void initPOADD4_I(String s) {
if (!s.trim().isEmpty()) {
POADD4_I = new Double(s);
}
}

protected final void initPOADD4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD4_IFLAG = new Double(s);
}
}

protected final void initPOADD5(String s) {
if (!s.trim().isEmpty()) {
POADD5 = new Double(s);
}
}

protected final void initPOADD5_I(String s) {
if (!s.trim().isEmpty()) {
POADD5_I = new Double(s);
}
}

protected final void initPOADD5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD5_IFLAG = new Double(s);
}
}

protected final void initPOADD6(String s) {
if (!s.trim().isEmpty()) {
POADD6 = new Double(s);
}
}

protected final void initPOADD6_I(String s) {
if (!s.trim().isEmpty()) {
POADD6_I = new Double(s);
}
}

protected final void initPOADD6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POADD6_IFLAG = new Double(s);
}
}

protected final void initPOANEH(String s) {
if (!s.trim().isEmpty()) {
POANEH = new Double(s);
}
}

protected final void initPOANEH2(String s) {
if (!s.trim().isEmpty()) {
POANEH2 = new Double(s);
}
}

protected final void initPOANEXM(String s) {
if (!s.trim().isEmpty()) {
POANEXM = new Double(s);
}
}

protected final void initPOANEXY(String s) {
if (!s.trim().isEmpty()) {
POANEXY = new Double(s);
}
}

protected final void initPOANGA(String s) {
if (!s.trim().isEmpty()) {
POANGA = new Double(s);
}
}

protected final void initPOANGA2(String s) {
if (!s.trim().isEmpty()) {
POANGA2 = new Double(s);
}
}

protected final void initPOANIF(String s) {
if (!s.trim().isEmpty()) {
POANIF = new Double(s);
}
}

protected final void initPOANIF2(String s) {
if (!s.trim().isEmpty()) {
POANIF2 = new Double(s);
}
}

protected final void initPOANJT(String s) {
if (!s.trim().isEmpty()) {
POANJT = new Double(s);
}
}

protected final void initPOANJT2(String s) {
if (!s.trim().isEmpty()) {
POANJT2 = new Double(s);
}
}

protected final void initPOANLM(String s) {
if (!s.trim().isEmpty()) {
POANLM = new Double(s);
}
}

protected final void initPOANLM2(String s) {
if (!s.trim().isEmpty()) {
POANLM2 = new Double(s);
}
}

protected final void initPOANN1(String s) {
if (!s.trim().isEmpty()) {
POANN1 = new Double(s);
}
}

protected final void initPOANN2(String s) {
if (!s.trim().isEmpty()) {
POANN2 = new Double(s);
}
}

protected final void initPOANN3(String s) {
if (!s.trim().isEmpty()) {
POANN3 = new Double(s);
}
}

protected final void initPOANN4(String s) {
if (!s.trim().isEmpty()) {
POANN4 = new Double(s);
}
}

protected final void initPOANN5(String s) {
if (!s.trim().isEmpty()) {
POANN5 = new Double(s);
}
}

protected final void initPOANN6(String s) {
if (!s.trim().isEmpty()) {
POANN6 = new Double(s);
}
}

protected final void initPOANN7(String s) {
if (!s.trim().isEmpty()) {
POANN7 = new Double(s);
}
}

protected final void initPOANN8(String s) {
if (!s.trim().isEmpty()) {
POANN8 = new Double(s);
}
}

protected final void initPOANVB(String s) {
if (!s.trim().isEmpty()) {
POANVB = new Double(s);
}
}

protected final void initPOANVB2(String s) {
if (!s.trim().isEmpty()) {
POANVB2 = new Double(s);
}
}

protected final void initPOANVI(String s) {
if (!s.trim().isEmpty()) {
POANVI = new Double(s);
}
}

protected final void initPOANVI2(String s) {
if (!s.trim().isEmpty()) {
POANVI2 = new Double(s);
}
}

protected final void initPOCASH(String s) {
if (!s.trim().isEmpty()) {
POCASH = new Double(s);
}
}

protected final void initPOCASH2(String s) {
if (!s.trim().isEmpty()) {
POCASH2 = new Double(s);
}
}

protected final void initPOCNAM2(String s) {
if (!s.trim().isEmpty()) {
POCNAM2 = new Double(s);
}
}

protected final void initPOCNAM3(String s) {
if (!s.trim().isEmpty()) {
POCNAM3 = new Double(s);
}
}

protected final void initPOCNDRS1(String s) {
if (!s.trim().isEmpty()) {
POCNDRS1 = new Double(s);
}
}

protected final void initPOCNDRS10(String s) {
if (!s.trim().isEmpty()) {
POCNDRS10 = new Double(s);
}
}

protected final void initPOCNDRS11(String s) {
if (!s.trim().isEmpty()) {
POCNDRS11 = new Double(s);
}
}

protected final void initPOCNDRS12(String s) {
if (!s.trim().isEmpty()) {
POCNDRS12 = new Double(s);
}
}

protected final void initPOCNDRS2(String s) {
if (!s.trim().isEmpty()) {
POCNDRS2 = new Double(s);
}
}

protected final void initPOCNDRS3(String s) {
if (!s.trim().isEmpty()) {
POCNDRS3 = new Double(s);
}
}

protected final void initPOCNDRS4(String s) {
if (!s.trim().isEmpty()) {
POCNDRS4 = new Double(s);
}
}

protected final void initPOCNDRS5(String s) {
if (!s.trim().isEmpty()) {
POCNDRS5 = new Double(s);
}
}

protected final void initPOCNDRS6(String s) {
if (!s.trim().isEmpty()) {
POCNDRS6 = new Double(s);
}
}

protected final void initPOCNDRS7(String s) {
if (!s.trim().isEmpty()) {
POCNDRS7 = new Double(s);
}
}

protected final void initPOCNDRS8(String s) {
if (!s.trim().isEmpty()) {
POCNDRS8 = new Double(s);
}
}

protected final void initPOCNDRS9(String s) {
if (!s.trim().isEmpty()) {
POCNDRS9 = new Double(s);
}
}

protected final void initPOCNFG(String s) {
if (!s.trim().isEmpty()) {
POCNFG = new Double(s);
}
}

protected final void initPOCNFG2(String s) {
if (!s.trim().isEmpty()) {
POCNFG2 = new Double(s);
}
}

protected final void initPOCNFR(String s) {
if (!s.trim().isEmpty()) {
POCNFR = new Double(s);
}
}

protected final void initPOCNFR2(String s) {
if (!s.trim().isEmpty()) {
POCNFR2 = new Double(s);
}
}

protected final void initPOCNHOW(String s) {
if (!s.trim().isEmpty()) {
POCNHOW = new Double(s);
}
}

protected final void initPOCNHO___W2(String s) {
if (!s.trim().isEmpty()) {
POCNHO___W2 = new Double(s);
}
}

protected final void initPOCNLRS1(String s) {
if (!s.trim().isEmpty()) {
POCNLRS1 = new Double(s);
}
}

protected final void initPOCNLRS2(String s) {
if (!s.trim().isEmpty()) {
POCNLRS2 = new Double(s);
}
}

protected final void initPOCNLRS3(String s) {
if (!s.trim().isEmpty()) {
POCNLRS3 = new Double(s);
}
}

protected final void initPOCNLRS4(String s) {
if (!s.trim().isEmpty()) {
POCNLRS4 = new Double(s);
}
}

protected final void initPOCNLRS5(String s) {
if (!s.trim().isEmpty()) {
POCNLRS5 = new Double(s);
}
}

protected final void initPOCNLRS6(String s) {
if (!s.trim().isEmpty()) {
POCNLRS6 = new Double(s);
}
}

protected final void initPOCNLRS7(String s) {
if (!s.trim().isEmpty()) {
POCNLRS7 = new Double(s);
}
}

protected final void initPOCNLRS8(String s) {
if (!s.trim().isEmpty()) {
POCNLRS8 = new Double(s);
}
}

protected final void initPOCNMSC2(String s) {
if (!s.trim().isEmpty()) {
POCNMSC2 = new Double(s);
}
}

protected final void initPOCNPLN(String s) {
if (!s.trim().isEmpty()) {
POCNPLN = new Double(s);
}
}

protected final void initPOCNPLN2(String s) {
if (!s.trim().isEmpty()) {
POCNPLN2 = new Double(s);
}
}

protected final void initPOCNPR(String s) {
if (!s.trim().isEmpty()) {
POCNPR = new Double(s);
}
}

protected final void initPOCNPR2(String s) {
if (!s.trim().isEmpty()) {
POCNPR2 = new Double(s);
}
}

protected final void initPOCNVOL(String s) {
if (!s.trim().isEmpty()) {
POCNVOL = new Double(s);
}
}

protected final void initPOCNVOL2(String s) {
if (!s.trim().isEmpty()) {
POCNVOL2 = new Double(s);
}
}

protected final void initPOCONCH(String s) {
if (!s.trim().isEmpty()) {
POCONCH = new Double(s);
}
}

protected final void initPOCONCH2(String s) {
if (!s.trim().isEmpty()) {
POCONCH2 = new Double(s);
}
}

protected final void initPOCONH(String s) {
if (!s.trim().isEmpty()) {
POCONH = new Double(s);
}
}

protected final void initPOCONH2(String s) {
if (!s.trim().isEmpty()) {
POCONH2 = new Double(s);
}
}

protected final void initPOCTYP(String s) {
if (!s.trim().isEmpty()) {
POCTYP = new Double(s);
}
}

protected final void initPOCTYP2(String s) {
if (!s.trim().isEmpty()) {
POCTYP2 = new Double(s);
}
}

protected final void initPOCTYP2_I(String s) {
if (!s.trim().isEmpty()) {
POCTYP2_I = new Double(s);
}
}

protected final void initPOCTYP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POCTYP2_IFLAG = new Double(s);
}
}

protected final void initPOCTYP_I(String s) {
if (!s.trim().isEmpty()) {
POCTYP_I = new Double(s);
}
}

protected final void initPOCTYP_IFLAG(String s) {
if (!s.trim().isEmpty()) {
POCTYP_IFLAG = new Double(s);
}
}

protected final void initPODRINC(String s) {
if (!s.trim().isEmpty()) {
PODRINC = new Double(s);
}
}

protected final void initPODRINC2(String s) {
if (!s.trim().isEmpty()) {
PODRINC2 = new Double(s);
}
}

protected final void initPODRINCB(String s) {
if (!s.trim().isEmpty()) {
PODRINCB = new Double(s);
}
}

protected final void initPODRINCB2(String s) {
if (!s.trim().isEmpty()) {
PODRINCB2 = new Double(s);
}
}

protected final void initPODRVB(String s) {
if (!s.trim().isEmpty()) {
PODRVB = new Double(s);
}
}

protected final void initPODRVB2(String s) {
if (!s.trim().isEmpty()) {
PODRVB2 = new Double(s);
}
}

protected final void initPODRVI(String s) {
if (!s.trim().isEmpty()) {
PODRVI = new Double(s);
}
}

protected final void initPODRVI2(String s) {
if (!s.trim().isEmpty()) {
PODRVI2 = new Double(s);
}
}

protected final void initPOEMAM(String s) {
if (!s.trim().isEmpty()) {
POEMAM = new Double(s);
}
}

protected final void initPOEMAM2(String s) {
if (!s.trim().isEmpty()) {
POEMAM2 = new Double(s);
}
}

protected final void initPOEMFG(String s) {
if (!s.trim().isEmpty()) {
POEMFG = new Double(s);
}
}

protected final void initPOEMFG2(String s) {
if (!s.trim().isEmpty()) {
POEMFG2 = new Double(s);
}
}

protected final void initPOEMFR(String s) {
if (!s.trim().isEmpty()) {
POEMFR = new Double(s);
}
}

protected final void initPOEMFR2(String s) {
if (!s.trim().isEmpty()) {
POEMFR2 = new Double(s);
}
}

protected final void initPOEMP(String s) {
if (!s.trim().isEmpty()) {
POEMP = new Double(s);
}
}

protected final void initPOEMP2(String s) {
if (!s.trim().isEmpty()) {
POEMP2 = new Double(s);
}
}

protected final void initPOEMPH(String s) {
if (!s.trim().isEmpty()) {
POEMPH = new Double(s);
}
}

protected final void initPOEMPH2(String s) {
if (!s.trim().isEmpty()) {
POEMPH2 = new Double(s);
}
}

protected final void initPOEMPR(String s) {
if (!s.trim().isEmpty()) {
POEMPR = new Double(s);
}
}

protected final void initPOEMPR2(String s) {
if (!s.trim().isEmpty()) {
POEMPR2 = new Double(s);
}
}

protected final void initPOFAAG(String s) {
if (!s.trim().isEmpty()) {
POFAAG = new Double(s);
}
}

protected final void initPOFAAG2(String s) {
if (!s.trim().isEmpty()) {
POFAAG2 = new Double(s);
}
}

protected final void initPOFAN1(String s) {
if (!s.trim().isEmpty()) {
POFAN1 = new Double(s);
}
}

protected final void initPOFAN10(String s) {
if (!s.trim().isEmpty()) {
POFAN10 = new Double(s);
}
}

protected final void initPOFAN11(String s) {
if (!s.trim().isEmpty()) {
POFAN11 = new Double(s);
}
}

protected final void initPOFAN12(String s) {
if (!s.trim().isEmpty()) {
POFAN12 = new Double(s);
}
}

protected final void initPOFAN2(String s) {
if (!s.trim().isEmpty()) {
POFAN2 = new Double(s);
}
}

protected final void initPOFAN3(String s) {
if (!s.trim().isEmpty()) {
POFAN3 = new Double(s);
}
}

protected final void initPOFAN4(String s) {
if (!s.trim().isEmpty()) {
POFAN4 = new Double(s);
}
}

protected final void initPOFAN5(String s) {
if (!s.trim().isEmpty()) {
POFAN5 = new Double(s);
}
}

protected final void initPOFAN6(String s) {
if (!s.trim().isEmpty()) {
POFAN6 = new Double(s);
}
}

protected final void initPOFAN7(String s) {
if (!s.trim().isEmpty()) {
POFAN7 = new Double(s);
}
}

protected final void initPOFAN8(String s) {
if (!s.trim().isEmpty()) {
POFAN8 = new Double(s);
}
}

protected final void initPOFAN9(String s) {
if (!s.trim().isEmpty()) {
POFAN9 = new Double(s);
}
}

protected final void initPOFAWH1(String s) {
if (!s.trim().isEmpty()) {
POFAWH1 = new Double(s);
}
}

protected final void initPOFAWH10(String s) {
if (!s.trim().isEmpty()) {
POFAWH10 = new Double(s);
}
}

protected final void initPOFAWH11(String s) {
if (!s.trim().isEmpty()) {
POFAWH11 = new Double(s);
}
}

protected final void initPOFAWH12(String s) {
if (!s.trim().isEmpty()) {
POFAWH12 = new Double(s);
}
}

protected final void initPOFAWH2(String s) {
if (!s.trim().isEmpty()) {
POFAWH2 = new Double(s);
}
}

protected final void initPOFAWH3(String s) {
if (!s.trim().isEmpty()) {
POFAWH3 = new Double(s);
}
}

protected final void initPOFAWH4(String s) {
if (!s.trim().isEmpty()) {
POFAWH4 = new Double(s);
}
}

protected final void initPOFAWH5(String s) {
if (!s.trim().isEmpty()) {
POFAWH5 = new Double(s);
}
}

protected final void initPOFAWH6(String s) {
if (!s.trim().isEmpty()) {
POFAWH6 = new Double(s);
}
}

protected final void initPOFAWH7(String s) {
if (!s.trim().isEmpty()) {
POFAWH7 = new Double(s);
}
}

protected final void initPOFAWH8(String s) {
if (!s.trim().isEmpty()) {
POFAWH8 = new Double(s);
}
}

protected final void initPOFAWH9(String s) {
if (!s.trim().isEmpty()) {
POFAWH9 = new Double(s);
}
}

protected final void initPOJOIN(String s) {
if (!s.trim().isEmpty()) {
POJOIN = new Double(s);
}
}

protected final void initPOJOIN2(String s) {
if (!s.trim().isEmpty()) {
POJOIN2 = new Double(s);
}
}

protected final void initPOLMUS1(String s) {
if (!s.trim().isEmpty()) {
POLMUS1 = new Double(s);
}
}

protected final void initPOLMUS10(String s) {
if (!s.trim().isEmpty()) {
POLMUS10 = new Double(s);
}
}

protected final void initPOLMUS11(String s) {
if (!s.trim().isEmpty()) {
POLMUS11 = new Double(s);
}
}

protected final void initPOLMUS12(String s) {
if (!s.trim().isEmpty()) {
POLMUS12 = new Double(s);
}
}

protected final void initPOLMUS2(String s) {
if (!s.trim().isEmpty()) {
POLMUS2 = new Double(s);
}
}

protected final void initPOLMUS3(String s) {
if (!s.trim().isEmpty()) {
POLMUS3 = new Double(s);
}
}

protected final void initPOLMUS4(String s) {
if (!s.trim().isEmpty()) {
POLMUS4 = new Double(s);
}
}

protected final void initPOLMUS5(String s) {
if (!s.trim().isEmpty()) {
POLMUS5 = new Double(s);
}
}

protected final void initPOLMUS6(String s) {
if (!s.trim().isEmpty()) {
POLMUS6 = new Double(s);
}
}

protected final void initPOLMUS7(String s) {
if (!s.trim().isEmpty()) {
POLMUS7 = new Double(s);
}
}

protected final void initPOLMUS8(String s) {
if (!s.trim().isEmpty()) {
POLMUS8 = new Double(s);
}
}

protected final void initPOLMUS9(String s) {
if (!s.trim().isEmpty()) {
POLMUS9 = new Double(s);
}
}

protected final void initPOLMV(String s) {
if (!s.trim().isEmpty()) {
POLMV = new Double(s);
}
}

protected final void initPOLMV2(String s) {
if (!s.trim().isEmpty()) {
POLMV2 = new Double(s);
}
}

protected final void initPOLMVB(String s) {
if (!s.trim().isEmpty()) {
POLMVB = new Double(s);
}
}

protected final void initPOLMVB2(String s) {
if (!s.trim().isEmpty()) {
POLMVB2 = new Double(s);
}
}

protected final void initPOLSYR(String s) {
if (!s.trim().isEmpty()) {
POLSYR = new Double(s);
}
}

protected final void initPOLSYR2(String s) {
if (!s.trim().isEmpty()) {
POLSYR2 = new Double(s);
}
}

protected final void initPOLUM(String s) {
if (!s.trim().isEmpty()) {
POLUM = new Double(s);
}
}

protected final void initPOLUM2(String s) {
if (!s.trim().isEmpty()) {
POLUM2 = new Double(s);
}
}

protected final void initPOMETH(String s) {
if (!s.trim().isEmpty()) {
POMETH = new Double(s);
}
}

protected final void initPOMETH2(String s) {
if (!s.trim().isEmpty()) {
POMETH2 = new Double(s);
}
}

protected final void initPOPENVB(String s) {
if (!s.trim().isEmpty()) {
POPENVB = new Double(s);
}
}

protected final void initPOPENVB2(String s) {
if (!s.trim().isEmpty()) {
POPENVB2 = new Double(s);
}
}

protected final void initPOPENVI(String s) {
if (!s.trim().isEmpty()) {
POPENVI = new Double(s);
}
}

protected final void initPOPENVI2(String s) {
if (!s.trim().isEmpty()) {
POPENVI2 = new Double(s);
}
}

protected final void initPOPYCH(String s) {
if (!s.trim().isEmpty()) {
POPYCH = new Double(s);
}
}

protected final void initPOPYCH2(String s) {
if (!s.trim().isEmpty()) {
POPYCH2 = new Double(s);
}
}

protected final void initPORAGE2T(String s) {
if (!s.trim().isEmpty()) {
PORAGE2T = new Double(s);
}
}

protected final void initPORAGET(String s) {
if (!s.trim().isEmpty()) {
PORAGET = new Double(s);
}
}

protected final void initPOYRAM(String s) {
if (!s.trim().isEmpty()) {
POYRAM = new Double(s);
}
}

protected final void initPOYRAM2(String s) {
if (!s.trim().isEmpty()) {
POYRAM2 = new Double(s);
}
}

protected final void initPPACCU(String s) {
if (!s.trim().isEmpty()) {
PPACCU = new Double(s);
}
}

protected final void initPPACCU2(String s) {
if (!s.trim().isEmpty()) {
PPACCU2 = new Double(s);
}
}

protected final void initPPACCU3(String s) {
if (!s.trim().isEmpty()) {
PPACCU3 = new Double(s);
}
}

protected final void initPPANEH(String s) {
if (!s.trim().isEmpty()) {
PPANEH = new Double(s);
}
}

protected final void initPPANEH2(String s) {
if (!s.trim().isEmpty()) {
PPANEH2 = new Double(s);
}
}

protected final void initPPANEH3(String s) {
if (!s.trim().isEmpty()) {
PPANEH3 = new Double(s);
}
}

protected final void initPPANEXM(String s) {
if (!s.trim().isEmpty()) {
PPANEXM = new Double(s);
}
}

protected final void initPPANEXM2(String s) {
if (!s.trim().isEmpty()) {
PPANEXM2 = new Double(s);
}
}

protected final void initPPANEXM3(String s) {
if (!s.trim().isEmpty()) {
PPANEXM3 = new Double(s);
}
}

protected final void initPPANEXY(String s) {
if (!s.trim().isEmpty()) {
PPANEXY = new Double(s);
}
}

protected final void initPPANEXY2(String s) {
if (!s.trim().isEmpty()) {
PPANEXY2 = new Double(s);
}
}

protected final void initPPANEXY3(String s) {
if (!s.trim().isEmpty()) {
PPANEXY3 = new Double(s);
}
}

protected final void initPPANGA(String s) {
if (!s.trim().isEmpty()) {
PPANGA = new Double(s);
}
}

protected final void initPPANGA2(String s) {
if (!s.trim().isEmpty()) {
PPANGA2 = new Double(s);
}
}

protected final void initPPANGA3(String s) {
if (!s.trim().isEmpty()) {
PPANGA3 = new Double(s);
}
}

protected final void initPPANIF(String s) {
if (!s.trim().isEmpty()) {
PPANIF = new Double(s);
}
}

protected final void initPPANIF2(String s) {
if (!s.trim().isEmpty()) {
PPANIF2 = new Double(s);
}
}

protected final void initPPANIF3(String s) {
if (!s.trim().isEmpty()) {
PPANIF3 = new Double(s);
}
}

protected final void initPPANJT(String s) {
if (!s.trim().isEmpty()) {
PPANJT = new Double(s);
}
}

protected final void initPPANJT2(String s) {
if (!s.trim().isEmpty()) {
PPANJT2 = new Double(s);
}
}

protected final void initPPANJT3(String s) {
if (!s.trim().isEmpty()) {
PPANJT3 = new Double(s);
}
}

protected final void initPPANLM(String s) {
if (!s.trim().isEmpty()) {
PPANLM = new Double(s);
}
}

protected final void initPPANLM2(String s) {
if (!s.trim().isEmpty()) {
PPANLM2 = new Double(s);
}
}

protected final void initPPANLM3(String s) {
if (!s.trim().isEmpty()) {
PPANLM3 = new Double(s);
}
}

protected final void initPPANN1(String s) {
if (!s.trim().isEmpty()) {
PPANN1 = new Double(s);
}
}

protected final void initPPANN10(String s) {
if (!s.trim().isEmpty()) {
PPANN10 = new Double(s);
}
}

protected final void initPPANN11(String s) {
if (!s.trim().isEmpty()) {
PPANN11 = new Double(s);
}
}

protected final void initPPANN12(String s) {
if (!s.trim().isEmpty()) {
PPANN12 = new Double(s);
}
}

protected final void initPPANN2(String s) {
if (!s.trim().isEmpty()) {
PPANN2 = new Double(s);
}
}

protected final void initPPANN3(String s) {
if (!s.trim().isEmpty()) {
PPANN3 = new Double(s);
}
}

protected final void initPPANN4(String s) {
if (!s.trim().isEmpty()) {
PPANN4 = new Double(s);
}
}

protected final void initPPANN5(String s) {
if (!s.trim().isEmpty()) {
PPANN5 = new Double(s);
}
}

protected final void initPPANN6(String s) {
if (!s.trim().isEmpty()) {
PPANN6 = new Double(s);
}
}

protected final void initPPANN7(String s) {
if (!s.trim().isEmpty()) {
PPANN7 = new Double(s);
}
}

protected final void initPPANN8(String s) {
if (!s.trim().isEmpty()) {
PPANN8 = new Double(s);
}
}

protected final void initPPANN9(String s) {
if (!s.trim().isEmpty()) {
PPANN9 = new Double(s);
}
}

protected final void initPPANVB(String s) {
if (!s.trim().isEmpty()) {
PPANVB = new Double(s);
}
}

protected final void initPPANVB2(String s) {
if (!s.trim().isEmpty()) {
PPANVB2 = new Double(s);
}
}

protected final void initPPANVB3(String s) {
if (!s.trim().isEmpty()) {
PPANVB3 = new Double(s);
}
}

protected final void initPPANVI(String s) {
if (!s.trim().isEmpty()) {
PPANVI = new Double(s);
}
}

protected final void initPPANVI2(String s) {
if (!s.trim().isEmpty()) {
PPANVI2 = new Double(s);
}
}

protected final void initPPANVI3(String s) {
if (!s.trim().isEmpty()) {
PPANVI3 = new Double(s);
}
}

protected final void initPPCASH(String s) {
if (!s.trim().isEmpty()) {
PPCASH = new Double(s);
}
}

protected final void initPPCASH2(String s) {
if (!s.trim().isEmpty()) {
PPCASH2 = new Double(s);
}
}

protected final void initPPCASH3(String s) {
if (!s.trim().isEmpty()) {
PPCASH3 = new Double(s);
}
}

protected final void initPPCNDRS1(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS1 = new Double(s);
}
}

protected final void initPPCNDRS17(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS17 = new Double(s);
}
}

protected final void initPPCNDRS2(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS2 = new Double(s);
}
}

protected final void initPPCNDRS3(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS3 = new Double(s);
}
}

protected final void initPPCNDRS9(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS9 = new Double(s);
}
}

protected final void initPPCNHOW(String s) {
if (!s.trim().isEmpty()) {
PPCNHOW = new Double(s);
}
}

protected final void initPPCNHOW3(String s) {
if (!s.trim().isEmpty()) {
PPCNHOW3 = new Double(s);
}
}

protected final void initPPCNHO___W2(String s) {
if (!s.trim().isEmpty()) {
PPCNHO___W2 = new Double(s);
}
}

protected final void initPPCNLRS1(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS1 = new Double(s);
}
}

protected final void initPPCNLRS2(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS2 = new Double(s);
}
}

protected final void initPPCNLRS3(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS3 = new Double(s);
}
}

protected final void initPPCNLRS5(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS5 = new Double(s);
}
}

protected final void initPPCNLRS9(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS9 = new Double(s);
}
}

protected final void initPPCNPLN(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN = new Double(s);
}
}

protected final void initPPCNPLN2(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN2 = new Double(s);
}
}

protected final void initPPCNPLN3(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN3 = new Double(s);
}
}

protected final void initPPCONCH(String s) {
if (!s.trim().isEmpty()) {
PPCONCH = new Double(s);
}
}

protected final void initPPCONCH2(String s) {
if (!s.trim().isEmpty()) {
PPCONCH2 = new Double(s);
}
}

protected final void initPPCONCH3(String s) {
if (!s.trim().isEmpty()) {
PPCONCH3 = new Double(s);
}
}

protected final void initPPDOCS(String s) {
if (!s.trim().isEmpty()) {
PPDOCS = new Double(s);
}
}

protected final void initPPDOCS2(String s) {
if (!s.trim().isEmpty()) {
PPDOCS2 = new Double(s);
}
}

protected final void initPPDOCS3(String s) {
if (!s.trim().isEmpty()) {
PPDOCS3 = new Double(s);
}
}

protected final void initPPDRINC(String s) {
if (!s.trim().isEmpty()) {
PPDRINC = new Double(s);
}
}

protected final void initPPDRINC2(String s) {
if (!s.trim().isEmpty()) {
PPDRINC2 = new Double(s);
}
}

protected final void initPPDRINC3(String s) {
if (!s.trim().isEmpty()) {
PPDRINC3 = new Double(s);
}
}

protected final void initPPDRINCB(String s) {
if (!s.trim().isEmpty()) {
PPDRINCB = new Double(s);
}
}

protected final void initPPDRINCB2(String s) {
if (!s.trim().isEmpty()) {
PPDRINCB2 = new Double(s);
}
}

protected final void initPPDRVB(String s) {
if (!s.trim().isEmpty()) {
PPDRVB = new Double(s);
}
}

protected final void initPPDRVB2(String s) {
if (!s.trim().isEmpty()) {
PPDRVB2 = new Double(s);
}
}

protected final void initPPDRVB3(String s) {
if (!s.trim().isEmpty()) {
PPDRVB3 = new Double(s);
}
}

protected final void initPPDRVI(String s) {
if (!s.trim().isEmpty()) {
PPDRVI = new Double(s);
}
}

protected final void initPPDRVI2(String s) {
if (!s.trim().isEmpty()) {
PPDRVI2 = new Double(s);
}
}

protected final void initPPDRVI3(String s) {
if (!s.trim().isEmpty()) {
PPDRVI3 = new Double(s);
}
}

protected final void initPPEIRA(String s) {
if (!s.trim().isEmpty()) {
PPEIRA = new Double(s);
}
}

protected final void initPPEIRA2(String s) {
if (!s.trim().isEmpty()) {
PPEIRA2 = new Double(s);
}
}

protected final void initPPEIRA3(String s) {
if (!s.trim().isEmpty()) {
PPEIRA3 = new Double(s);
}
}

protected final void initPPEIRF(String s) {
if (!s.trim().isEmpty()) {
PPEIRF = new Double(s);
}
}

protected final void initPPEIRF2(String s) {
if (!s.trim().isEmpty()) {
PPEIRF2 = new Double(s);
}
}

protected final void initPPEIRF3(String s) {
if (!s.trim().isEmpty()) {
PPEIRF3 = new Double(s);
}
}

protected final void initPPEIRH(String s) {
if (!s.trim().isEmpty()) {
PPEIRH = new Double(s);
}
}

protected final void initPPEIRH2(String s) {
if (!s.trim().isEmpty()) {
PPEIRH2 = new Double(s);
}
}

protected final void initPPEIRH3(String s) {
if (!s.trim().isEmpty()) {
PPEIRH3 = new Double(s);
}
}

protected final void initPPEMAM(String s) {
if (!s.trim().isEmpty()) {
PPEMAM = new Double(s);
}
}

protected final void initPPEMAM2(String s) {
if (!s.trim().isEmpty()) {
PPEMAM2 = new Double(s);
}
}

protected final void initPPEMAM3(String s) {
if (!s.trim().isEmpty()) {
PPEMAM3 = new Double(s);
}
}

protected final void initPPEMFR(String s) {
if (!s.trim().isEmpty()) {
PPEMFR = new Double(s);
}
}

protected final void initPPEMFR2(String s) {
if (!s.trim().isEmpty()) {
PPEMFR2 = new Double(s);
}
}

protected final void initPPEMFR3(String s) {
if (!s.trim().isEmpty()) {
PPEMFR3 = new Double(s);
}
}

protected final void initPPEMP(String s) {
if (!s.trim().isEmpty()) {
PPEMP = new Double(s);
}
}

protected final void initPPEMP2(String s) {
if (!s.trim().isEmpty()) {
PPEMP2 = new Double(s);
}
}

protected final void initPPEMP3(String s) {
if (!s.trim().isEmpty()) {
PPEMP3 = new Double(s);
}
}

protected final void initPPEMPH(String s) {
if (!s.trim().isEmpty()) {
PPEMPH = new Double(s);
}
}

protected final void initPPEMPH2(String s) {
if (!s.trim().isEmpty()) {
PPEMPH2 = new Double(s);
}
}

protected final void initPPEMPH3(String s) {
if (!s.trim().isEmpty()) {
PPEMPH3 = new Double(s);
}
}

protected final void initPPEMPR(String s) {
if (!s.trim().isEmpty()) {
PPEMPR = new Double(s);
}
}

protected final void initPPEMPR2(String s) {
if (!s.trim().isEmpty()) {
PPEMPR2 = new Double(s);
}
}

protected final void initPPEMPR3(String s) {
if (!s.trim().isEmpty()) {
PPEMPR3 = new Double(s);
}
}

protected final void initPPEVRG(String s) {
if (!s.trim().isEmpty()) {
PPEVRG = new Double(s);
}
}

protected final void initPPEVRG2(String s) {
if (!s.trim().isEmpty()) {
PPEVRG2 = new Double(s);
}
}

protected final void initPPEVRG3(String s) {
if (!s.trim().isEmpty()) {
PPEVRG3 = new Double(s);
}
}

protected final void initPPFAAG(String s) {
if (!s.trim().isEmpty()) {
PPFAAG = new Double(s);
}
}

protected final void initPPFAAG2(String s) {
if (!s.trim().isEmpty()) {
PPFAAG2 = new Double(s);
}
}

protected final void initPPFAAG3(String s) {
if (!s.trim().isEmpty()) {
PPFAAG3 = new Double(s);
}
}

protected final void initPPFAN1(String s) {
if (!s.trim().isEmpty()) {
PPFAN1 = new Double(s);
}
}

protected final void initPPFAN10(String s) {
if (!s.trim().isEmpty()) {
PPFAN10 = new Double(s);
}
}

protected final void initPPFAN11(String s) {
if (!s.trim().isEmpty()) {
PPFAN11 = new Double(s);
}
}

protected final void initPPFAN12(String s) {
if (!s.trim().isEmpty()) {
PPFAN12 = new Double(s);
}
}

protected final void initPPFAN13(String s) {
if (!s.trim().isEmpty()) {
PPFAN13 = new Double(s);
}
}

protected final void initPPFAN14(String s) {
if (!s.trim().isEmpty()) {
PPFAN14 = new Double(s);
}
}

protected final void initPPFAN15(String s) {
if (!s.trim().isEmpty()) {
PPFAN15 = new Double(s);
}
}

protected final void initPPFAN2(String s) {
if (!s.trim().isEmpty()) {
PPFAN2 = new Double(s);
}
}

protected final void initPPFAN3(String s) {
if (!s.trim().isEmpty()) {
PPFAN3 = new Double(s);
}
}

protected final void initPPFAN4(String s) {
if (!s.trim().isEmpty()) {
PPFAN4 = new Double(s);
}
}

protected final void initPPFAN5(String s) {
if (!s.trim().isEmpty()) {
PPFAN5 = new Double(s);
}
}

protected final void initPPFAN6(String s) {
if (!s.trim().isEmpty()) {
PPFAN6 = new Double(s);
}
}

protected final void initPPFAN7(String s) {
if (!s.trim().isEmpty()) {
PPFAN7 = new Double(s);
}
}

protected final void initPPFAN8(String s) {
if (!s.trim().isEmpty()) {
PPFAN8 = new Double(s);
}
}

protected final void initPPFAN9(String s) {
if (!s.trim().isEmpty()) {
PPFAN9 = new Double(s);
}
}

protected final void initPPFAWH1(String s) {
if (!s.trim().isEmpty()) {
PPFAWH1 = new Double(s);
}
}

protected final void initPPFAWH10(String s) {
if (!s.trim().isEmpty()) {
PPFAWH10 = new Double(s);
}
}

protected final void initPPFAWH11(String s) {
if (!s.trim().isEmpty()) {
PPFAWH11 = new Double(s);
}
}

protected final void initPPFAWH12(String s) {
if (!s.trim().isEmpty()) {
PPFAWH12 = new Double(s);
}
}

protected final void initPPFAWH13(String s) {
if (!s.trim().isEmpty()) {
PPFAWH13 = new Double(s);
}
}

protected final void initPPFAWH14(String s) {
if (!s.trim().isEmpty()) {
PPFAWH14 = new Double(s);
}
}

protected final void initPPFAWH15(String s) {
if (!s.trim().isEmpty()) {
PPFAWH15 = new Double(s);
}
}

protected final void initPPFAWH16(String s) {
if (!s.trim().isEmpty()) {
PPFAWH16 = new Double(s);
}
}

protected final void initPPFAWH17(String s) {
if (!s.trim().isEmpty()) {
PPFAWH17 = new Double(s);
}
}

protected final void initPPFAWH18(String s) {
if (!s.trim().isEmpty()) {
PPFAWH18 = new Double(s);
}
}

protected final void initPPFAWH19(String s) {
if (!s.trim().isEmpty()) {
PPFAWH19 = new Double(s);
}
}

protected final void initPPFAWH2(String s) {
if (!s.trim().isEmpty()) {
PPFAWH2 = new Double(s);
}
}

protected final void initPPFAWH20(String s) {
if (!s.trim().isEmpty()) {
PPFAWH20 = new Double(s);
}
}

protected final void initPPFAWH21(String s) {
if (!s.trim().isEmpty()) {
PPFAWH21 = new Double(s);
}
}

protected final void initPPFAWH3(String s) {
if (!s.trim().isEmpty()) {
PPFAWH3 = new Double(s);
}
}

protected final void initPPFAWH4(String s) {
if (!s.trim().isEmpty()) {
PPFAWH4 = new Double(s);
}
}

protected final void initPPFAWH5(String s) {
if (!s.trim().isEmpty()) {
PPFAWH5 = new Double(s);
}
}

protected final void initPPFAWH6(String s) {
if (!s.trim().isEmpty()) {
PPFAWH6 = new Double(s);
}
}

protected final void initPPFAWH7(String s) {
if (!s.trim().isEmpty()) {
PPFAWH7 = new Double(s);
}
}

protected final void initPPFAWH8(String s) {
if (!s.trim().isEmpty()) {
PPFAWH8 = new Double(s);
}
}

protected final void initPPFAWH9(String s) {
if (!s.trim().isEmpty()) {
PPFAWH9 = new Double(s);
}
}

protected final void initPPIRNO(String s) {
if (!s.trim().isEmpty()) {
PPIRNO = new Double(s);
}
}

protected final void initPPIRNO2(String s) {
if (!s.trim().isEmpty()) {
PPIRNO2 = new Double(s);
}
}

protected final void initPPIRNO3(String s) {
if (!s.trim().isEmpty()) {
PPIRNO3 = new Double(s);
}
}

protected final void initPPIRRA(String s) {
if (!s.trim().isEmpty()) {
PPIRRA = new Double(s);
}
}

protected final void initPPIRRA2(String s) {
if (!s.trim().isEmpty()) {
PPIRRA2 = new Double(s);
}
}

protected final void initPPIRRA3(String s) {
if (!s.trim().isEmpty()) {
PPIRRA3 = new Double(s);
}
}

protected final void initPPIRRF(String s) {
if (!s.trim().isEmpty()) {
PPIRRF = new Double(s);
}
}

protected final void initPPIRRF2(String s) {
if (!s.trim().isEmpty()) {
PPIRRF2 = new Double(s);
}
}

protected final void initPPIRRF3(String s) {
if (!s.trim().isEmpty()) {
PPIRRF3 = new Double(s);
}
}

protected final void initPPIRRH(String s) {
if (!s.trim().isEmpty()) {
PPIRRH = new Double(s);
}
}

protected final void initPPIRRH2(String s) {
if (!s.trim().isEmpty()) {
PPIRRH2 = new Double(s);
}
}

protected final void initPPIRRH3(String s) {
if (!s.trim().isEmpty()) {
PPIRRH3 = new Double(s);
}
}

protected final void initPPIRRY(String s) {
if (!s.trim().isEmpty()) {
PPIRRY = new Double(s);
}
}

protected final void initPPIRRY2(String s) {
if (!s.trim().isEmpty()) {
PPIRRY2 = new Double(s);
}
}

protected final void initPPIRRY3(String s) {
if (!s.trim().isEmpty()) {
PPIRRY3 = new Double(s);
}
}

protected final void initPPLASY(String s) {
if (!s.trim().isEmpty()) {
PPLASY = new Double(s);
}
}

protected final void initPPLASY2(String s) {
if (!s.trim().isEmpty()) {
PPLASY2 = new Double(s);
}
}

protected final void initPPLASY3(String s) {
if (!s.trim().isEmpty()) {
PPLASY3 = new Double(s);
}
}

protected final void initPPLMUS(String s) {
if (!s.trim().isEmpty()) {
PPLMUS = new Double(s);
}
}

protected final void initPPLMUS2(String s) {
if (!s.trim().isEmpty()) {
PPLMUS2 = new Double(s);
}
}

protected final void initPPLMUS3(String s) {
if (!s.trim().isEmpty()) {
PPLMUS3 = new Double(s);
}
}

protected final void initPPLMV(String s) {
if (!s.trim().isEmpty()) {
PPLMV = new Double(s);
}
}

protected final void initPPLMV2(String s) {
if (!s.trim().isEmpty()) {
PPLMV2 = new Double(s);
}
}

protected final void initPPLMV3(String s) {
if (!s.trim().isEmpty()) {
PPLMV3 = new Double(s);
}
}

protected final void initPPLMVB(String s) {
if (!s.trim().isEmpty()) {
PPLMVB = new Double(s);
}
}

protected final void initPPLMVB2(String s) {
if (!s.trim().isEmpty()) {
PPLMVB2 = new Double(s);
}
}

protected final void initPPLMVB3(String s) {
if (!s.trim().isEmpty()) {
PPLMVB3 = new Double(s);
}
}

protected final void initPPLSTA(String s) {
if (!s.trim().isEmpty()) {
PPLSTA = new Double(s);
}
}

protected final void initPPLSTA2(String s) {
if (!s.trim().isEmpty()) {
PPLSTA2 = new Double(s);
}
}

protected final void initPPLSTA3(String s) {
if (!s.trim().isEmpty()) {
PPLSTA3 = new Double(s);
}
}

protected final void initPPLSTP(String s) {
if (!s.trim().isEmpty()) {
PPLSTP = new Double(s);
}
}

protected final void initPPLSTP2(String s) {
if (!s.trim().isEmpty()) {
PPLSTP2 = new Double(s);
}
}

protected final void initPPLSTP3(String s) {
if (!s.trim().isEmpty()) {
PPLSTP3 = new Double(s);
}
}

protected final void initPPLUM(String s) {
if (!s.trim().isEmpty()) {
PPLUM = new Double(s);
}
}

protected final void initPPLUM2(String s) {
if (!s.trim().isEmpty()) {
PPLUM2 = new Double(s);
}
}

protected final void initPPLUM3(String s) {
if (!s.trim().isEmpty()) {
PPLUM3 = new Double(s);
}
}

protected final void initPPNINS(String s) {
if (!s.trim().isEmpty()) {
PPNINS = new Double(s);
}
}

protected final void initPPNINS2(String s) {
if (!s.trim().isEmpty()) {
PPNINS2 = new Double(s);
}
}

protected final void initPPNINS3(String s) {
if (!s.trim().isEmpty()) {
PPNINS3 = new Double(s);
}
}

protected final void initPPORG(String s) {
if (!s.trim().isEmpty()) {
PPORG = new Double(s);
}
}

protected final void initPPORG2(String s) {
if (!s.trim().isEmpty()) {
PPORG2 = new Double(s);
}
}

protected final void initPPORG3(String s) {
if (!s.trim().isEmpty()) {
PPORG3 = new Double(s);
}
}

protected final void initPPPAY(String s) {
if (!s.trim().isEmpty()) {
PPPAY = new Double(s);
}
}

protected final void initPPPAY2(String s) {
if (!s.trim().isEmpty()) {
PPPAY2 = new Double(s);
}
}

protected final void initPPPAY3(String s) {
if (!s.trim().isEmpty()) {
PPPAY3 = new Double(s);
}
}

protected final void initPPRGAM(String s) {
if (!s.trim().isEmpty()) {
PPRGAM = new Double(s);
}
}

protected final void initPPRGAM2(String s) {
if (!s.trim().isEmpty()) {
PPRGAM2 = new Double(s);
}
}

protected final void initPPRGAM3(String s) {
if (!s.trim().isEmpty()) {
PPRGAM3 = new Double(s);
}
}

protected final void initPPRGFG(String s) {
if (!s.trim().isEmpty()) {
PPRGFG = new Double(s);
}
}

protected final void initPPRGFG2(String s) {
if (!s.trim().isEmpty()) {
PPRGFG2 = new Double(s);
}
}

protected final void initPPRGFG3(String s) {
if (!s.trim().isEmpty()) {
PPRGFG3 = new Double(s);
}
}

protected final void initPPRGFR(String s) {
if (!s.trim().isEmpty()) {
PPRGFR = new Double(s);
}
}

protected final void initPPRGFR2(String s) {
if (!s.trim().isEmpty()) {
PPRGFR2 = new Double(s);
}
}

protected final void initPPRGFR3(String s) {
if (!s.trim().isEmpty()) {
PPRGFR3 = new Double(s);
}
}

protected final void initPPRGH(String s) {
if (!s.trim().isEmpty()) {
PPRGH = new Double(s);
}
}

protected final void initPPRGH2(String s) {
if (!s.trim().isEmpty()) {
PPRGH2 = new Double(s);
}
}

protected final void initPPRGH3(String s) {
if (!s.trim().isEmpty()) {
PPRGH3 = new Double(s);
}
}

protected final void initPPRGPE(String s) {
if (!s.trim().isEmpty()) {
PPRGPE = new Double(s);
}
}

protected final void initPPRGPE2(String s) {
if (!s.trim().isEmpty()) {
PPRGPE2 = new Double(s);
}
}

protected final void initPPRGPE3(String s) {
if (!s.trim().isEmpty()) {
PPRGPE3 = new Double(s);
}
}

protected final void initPPSIPP(String s) {
if (!s.trim().isEmpty()) {
PPSIPP = new Double(s);
}
}

protected final void initPPSIPP2(String s) {
if (!s.trim().isEmpty()) {
PPSIPP2 = new Double(s);
}
}

protected final void initPPSIPP3(String s) {
if (!s.trim().isEmpty()) {
PPSIPP3 = new Double(s);
}
}

protected final void initPPSTMN(String s) {
if (!s.trim().isEmpty()) {
PPSTMN = new Double(s);
}
}

protected final void initPPSTMN2(String s) {
if (!s.trim().isEmpty()) {
PPSTMN2 = new Double(s);
}
}

protected final void initPPSTMN3(String s) {
if (!s.trim().isEmpty()) {
PPSTMN3 = new Double(s);
}
}

protected final void initPPSTYR(String s) {
if (!s.trim().isEmpty()) {
PPSTYR = new Double(s);
}
}

protected final void initPPSTYR2(String s) {
if (!s.trim().isEmpty()) {
PPSTYR2 = new Double(s);
}
}

protected final void initPPSTYR3(String s) {
if (!s.trim().isEmpty()) {
PPSTYR3 = new Double(s);
}
}

protected final void initPPTYP(String s) {
if (!s.trim().isEmpty()) {
PPTYP = new Double(s);
}
}

protected final void initPPTYP2(String s) {
if (!s.trim().isEmpty()) {
PPTYP2 = new Double(s);
}
}

protected final void initPPTYP3(String s) {
if (!s.trim().isEmpty()) {
PPTYP3 = new Double(s);
}
}

protected final void initPPVAL(String s) {
if (!s.trim().isEmpty()) {
PPVAL = new Double(s);
}
}

protected final void initPPVAL2(String s) {
if (!s.trim().isEmpty()) {
PPVAL2 = new Double(s);
}
}

protected final void initPPVAL2_I(String s) {
if (!s.trim().isEmpty()) {
PPVAL2_I = new Double(s);
}
}

protected final void initPPVAL2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PPVAL2_IFLAG = new Double(s);
}
}

protected final void initPPVAL3(String s) {
if (!s.trim().isEmpty()) {
PPVAL3 = new Double(s);
}
}

protected final void initPPVAL3_I(String s) {
if (!s.trim().isEmpty()) {
PPVAL3_I = new Double(s);
}
}

protected final void initPPVAL3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PPVAL3_IFLAG = new Double(s);
}
}

protected final void initPPVALB(String s) {
if (!s.trim().isEmpty()) {
PPVALB = new Double(s);
}
}

protected final void initPPVALB2(String s) {
if (!s.trim().isEmpty()) {
PPVALB2 = new Double(s);
}
}

protected final void initPPVALB3(String s) {
if (!s.trim().isEmpty()) {
PPVALB3 = new Double(s);
}
}

protected final void initPPVAL_I(String s) {
if (!s.trim().isEmpty()) {
PPVAL_I = new Double(s);
}
}

protected final void initPPVAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PPVAL_IFLAG = new Double(s);
}
}

protected final void initPPYRST(String s) {
if (!s.trim().isEmpty()) {
PPYRST = new Double(s);
}
}

protected final void initPPYRST2(String s) {
if (!s.trim().isEmpty()) {
PPYRST2 = new Double(s);
}
}

protected final void initPPYRST3(String s) {
if (!s.trim().isEmpty()) {
PPYRST3 = new Double(s);
}
}

protected final void initPPYSTP1(String s) {
if (!s.trim().isEmpty()) {
PPYSTP1 = new Double(s);
}
}

protected final void initPPYSTP15(String s) {
if (!s.trim().isEmpty()) {
PPYSTP15 = new Double(s);
}
}

protected final void initPPYSTP2(String s) {
if (!s.trim().isEmpty()) {
PPYSTP2 = new Double(s);
}
}

protected final void initPPYSTP3(String s) {
if (!s.trim().isEmpty()) {
PPYSTP3 = new Double(s);
}
}

protected final void initPPYSTP8(String s) {
if (!s.trim().isEmpty()) {
PPYSTP8 = new Double(s);
}
}

protected final void initPPYSTP9(String s) {
if (!s.trim().isEmpty()) {
PPYSTP9 = new Double(s);
}
}

protected final void initPRACCU2(String s) {
if (!s.trim().isEmpty()) {
PRACCU2 = new Double(s);
}
}

protected final void initPRACCU3(String s) {
if (!s.trim().isEmpty()) {
PRACCU3 = new Double(s);
}
}

protected final void initPRACCU5(String s) {
if (!s.trim().isEmpty()) {
PRACCU5 = new Double(s);
}
}

protected final void initPRACCU6(String s) {
if (!s.trim().isEmpty()) {
PRACCU6 = new Double(s);
}
}

protected final void initPREVPENS(String s) {
if (!s.trim().isEmpty()) {
PREVPENS = new Double(s);
}
}

protected final void initPRODTS01(String s) {
if (!s.trim().isEmpty()) {
PRODTS01 = new Double(s);
}
}

protected final void initPRODTS02(String s) {
if (!s.trim().isEmpty()) {
PRODTS02 = new Double(s);
}
}

protected final void initPRODTS03(String s) {
if (!s.trim().isEmpty()) {
PRODTS03 = new Double(s);
}
}

protected final void initPRODTS04(String s) {
if (!s.trim().isEmpty()) {
PRODTS04 = new Double(s);
}
}

protected final void initPRODTS05(String s) {
if (!s.trim().isEmpty()) {
PRODTS05 = new Double(s);
}
}

protected final void initPRODTS06(String s) {
if (!s.trim().isEmpty()) {
PRODTS06 = new Double(s);
}
}

protected final void initPRODTS07(String s) {
if (!s.trim().isEmpty()) {
PRODTS07 = new Double(s);
}
}

protected final void initPRODTS08(String s) {
if (!s.trim().isEmpty()) {
PRODTS08 = new Double(s);
}
}

protected final void initPRODTS09(String s) {
if (!s.trim().isEmpty()) {
PRODTS09 = new Double(s);
}
}

protected final void initPRODTS10(String s) {
if (!s.trim().isEmpty()) {
PRODTS10 = new Double(s);
}
}

protected final void initPRODTS11(String s) {
if (!s.trim().isEmpty()) {
PRODTS11 = new Double(s);
}
}

protected final void initPRODTS12(String s) {
if (!s.trim().isEmpty()) {
PRODTS12 = new Double(s);
}
}

protected final void initPRODTS201(String s) {
if (!s.trim().isEmpty()) {
PRODTS201 = new Double(s);
}
}

protected final void initPRODTS202(String s) {
if (!s.trim().isEmpty()) {
PRODTS202 = new Double(s);
}
}

protected final void initPRODTS203(String s) {
if (!s.trim().isEmpty()) {
PRODTS203 = new Double(s);
}
}

protected final void initPRODTS204(String s) {
if (!s.trim().isEmpty()) {
PRODTS204 = new Double(s);
}
}

protected final void initPRODTS205(String s) {
if (!s.trim().isEmpty()) {
PRODTS205 = new Double(s);
}
}

protected final void initPRODTS206(String s) {
if (!s.trim().isEmpty()) {
PRODTS206 = new Double(s);
}
}

protected final void initPRODTS207(String s) {
if (!s.trim().isEmpty()) {
PRODTS207 = new Double(s);
}
}

protected final void initPRODTS208(String s) {
if (!s.trim().isEmpty()) {
PRODTS208 = new Double(s);
}
}

protected final void initPRODTS209(String s) {
if (!s.trim().isEmpty()) {
PRODTS209 = new Double(s);
}
}

protected final void initPRODTS210(String s) {
if (!s.trim().isEmpty()) {
PRODTS210 = new Double(s);
}
}

protected final void initPROXPERS(String s) {
if (!s.trim().isEmpty()) {
PROXPERS = new Double(s);
}
}

protected final void initPROXYNUM(String s) {
if (!s.trim().isEmpty()) {
PROXYNUM = new Double(s);
}
}

protected final void initPSPEXPA(String s) {
if (!s.trim().isEmpty()) {
PSPEXPA = new Double(s);
}
}

protected final void initPSPEXPA_I(String s) {
if (!s.trim().isEmpty()) {
PSPEXPA_I = new Double(s);
}
}

protected final void initPSPEXPA_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSPEXPA_IFLAG = new Double(s);
}
}

protected final void initPSPEXPH(String s) {
if (!s.trim().isEmpty()) {
PSPEXPH = new Double(s);
}
}

protected final void initPSPEXPH_I(String s) {
if (!s.trim().isEmpty()) {
PSPEXPH_I = new Double(s);
}
}

protected final void initPSPEXPH_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSPEXPH_IFLAG = new Double(s);
}
}

protected final void initPSPLUM(String s) {
if (!s.trim().isEmpty()) {
PSPLUM = new Double(s);
}
}

protected final void initPSPLUVAL(String s) {
if (!s.trim().isEmpty()) {
PSPLUVAL = new Double(s);
}
}

protected final void initPSPSE(String s) {
if (!s.trim().isEmpty()) {
PSPSE = new Double(s);
}
}

protected final void initPSPSE_I(String s) {
if (!s.trim().isEmpty()) {
PSPSE_I = new Double(s);
}
}

protected final void initPSPSE_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PSPSE_IFLAG = new Double(s);
}
}

protected final void initPSTYPE1(String s) {
if (!s.trim().isEmpty()) {
PSTYPE1 = new Double(s);
}
}

protected final void initPSTYPE10(String s) {
if (!s.trim().isEmpty()) {
PSTYPE10 = new Double(s);
}
}

protected final void initPSTYPE11(String s) {
if (!s.trim().isEmpty()) {
PSTYPE11 = new Double(s);
}
}

protected final void initPSTYPE12(String s) {
if (!s.trim().isEmpty()) {
PSTYPE12 = new Double(s);
}
}

protected final void initPSTYPE13(String s) {
if (!s.trim().isEmpty()) {
PSTYPE13 = new Double(s);
}
}

protected final void initPSTYPE14(String s) {
if (!s.trim().isEmpty()) {
PSTYPE14 = new Double(s);
}
}

protected final void initPSTYPE15(String s) {
if (!s.trim().isEmpty()) {
PSTYPE15 = new Double(s);
}
}

protected final void initPSTYPE16(String s) {
if (!s.trim().isEmpty()) {
PSTYPE16 = new Double(s);
}
}

protected final void initPSTYPE17(String s) {
if (!s.trim().isEmpty()) {
PSTYPE17 = new Double(s);
}
}

protected final void initPSTYPE18(String s) {
if (!s.trim().isEmpty()) {
PSTYPE18 = new Double(s);
}
}

protected final void initPSTYPE19(String s) {
if (!s.trim().isEmpty()) {
PSTYPE19 = new Double(s);
}
}

protected final void initPSTYPE2(String s) {
if (!s.trim().isEmpty()) {
PSTYPE2 = new Double(s);
}
}

protected final void initPSTYPE20(String s) {
if (!s.trim().isEmpty()) {
PSTYPE20 = new Double(s);
}
}

protected final void initPSTYPE3(String s) {
if (!s.trim().isEmpty()) {
PSTYPE3 = new Double(s);
}
}

protected final void initPSTYPE4(String s) {
if (!s.trim().isEmpty()) {
PSTYPE4 = new Double(s);
}
}

protected final void initPSTYPE5(String s) {
if (!s.trim().isEmpty()) {
PSTYPE5 = new Double(s);
}
}

protected final void initPSTYPE6(String s) {
if (!s.trim().isEmpty()) {
PSTYPE6 = new Double(s);
}
}

protected final void initPSTYPE7(String s) {
if (!s.trim().isEmpty()) {
PSTYPE7 = new Double(s);
}
}

protected final void initPSTYPE8(String s) {
if (!s.trim().isEmpty()) {
PSTYPE8 = new Double(s);
}
}

protected final void initPSTYPE9(String s) {
if (!s.trim().isEmpty()) {
PSTYPE9 = new Double(s);
}
}

protected final void initPWLUM(String s) {
if (!s.trim().isEmpty()) {
PWLUM = new Double(s);
}
}

protected final void initPWLUVAL(String s) {
if (!s.trim().isEmpty()) {
PWLUVAL = new Double(s);
}
}

protected final void initR01(String s) {
if (!s.trim().isEmpty()) {
R01 = new Double(s);
}
}

protected final void initR02(String s) {
if (!s.trim().isEmpty()) {
R02 = new Double(s);
}
}

protected final void initR03(String s) {
if (!s.trim().isEmpty()) {
R03 = new Double(s);
}
}

protected final void initR04(String s) {
if (!s.trim().isEmpty()) {
R04 = new Double(s);
}
}

protected final void initR05(String s) {
if (!s.trim().isEmpty()) {
R05 = new Double(s);
}
}

protected final void initR06(String s) {
if (!s.trim().isEmpty()) {
R06 = new Double(s);
}
}

protected final void initR07(String s) {
if (!s.trim().isEmpty()) {
R07 = new Double(s);
}
}

protected final void initR08(String s) {
if (!s.trim().isEmpty()) {
R08 = new Double(s);
}
}

protected final void initR09(String s) {
if (!s.trim().isEmpty()) {
R09 = new Double(s);
}
}

protected final void initR10(String s) {
if (!s.trim().isEmpty()) {
R10 = new Double(s);
}
}

protected final void initR11(String s) {
if (!s.trim().isEmpty()) {
R11 = new Double(s);
}
}

protected final void initRNYDAY(String s) {
if (!s.trim().isEmpty()) {
RNYDAY = new Double(s);
}
}

protected final void initSAMEJOB1(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB1 = new Double(s);
}
}

protected final void initSAMEJOB2(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB2 = new Double(s);
}
}

protected final void initSAMEJOB3(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB3 = new Double(s);
}
}

protected final void initSAMEJOB4(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB4 = new Double(s);
}
}

protected final void initSAMEJOB5(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB5 = new Double(s);
}
}

protected final void initSAMEJOB6(String s) {
if (!s.trim().isEmpty()) {
SAMEJOB6 = new Double(s);
}
}

protected final void initSAMEMP(String s) {
if (!s.trim().isEmpty()) {
SAMEMP = new Double(s);
}
}

protected final void initSAMJOB(String s) {
if (!s.trim().isEmpty()) {
SAMJOB = new Double(s);
}
}

protected final void initSEAMT(String s) {
if (!s.trim().isEmpty()) {
SEAMT = new Double(s);
}
}

protected final void initSECTOR(String s) {
if (!s.trim().isEmpty()) {
SECTOR = new Double(s);
}
}

protected final void initSECTR2(String s) {
if (!s.trim().isEmpty()) {
SECTR2 = new Double(s);
}
}

protected final void initSICCODE(String s) {
if (!s.trim().isEmpty()) {
SICCODE = new Double(s);
}
}

protected final void initSJ12G(String s) {
if (!s.trim().isEmpty()) {
SJ12G = new Double(s);
}
}

protected final void initSJ12N(String s) {
if (!s.trim().isEmpty()) {
SJ12N = new Double(s);
}
}

protected final void initSJGRS(String s) {
if (!s.trim().isEmpty()) {
SJGRS = new Double(s);
}
}

protected final void initSJNET(String s) {
if (!s.trim().isEmpty()) {
SJNET = new Double(s);
}
}

protected final void initSJSEG(String s) {
if (!s.trim().isEmpty()) {
SJSEG = new Double(s);
}
}

protected final void initSMTPEN(String s) {
if (!s.trim().isEmpty()) {
SMTPEN = new Double(s);
}
}

protected final void initSOURC01(String s) {
if (!s.trim().isEmpty()) {
SOURC01 = new Double(s);
}
}

protected final void initSOURC02(String s) {
if (!s.trim().isEmpty()) {
SOURC02 = new Double(s);
}
}

protected final void initSOURC03(String s) {
if (!s.trim().isEmpty()) {
SOURC03 = new Double(s);
}
}

protected final void initSOURC04(String s) {
if (!s.trim().isEmpty()) {
SOURC04 = new Double(s);
}
}

protected final void initSOURC05(String s) {
if (!s.trim().isEmpty()) {
SOURC05 = new Double(s);
}
}

protected final void initSOURC06(String s) {
if (!s.trim().isEmpty()) {
SOURC06 = new Double(s);
}
}

protected final void initSOURC07(String s) {
if (!s.trim().isEmpty()) {
SOURC07 = new Double(s);
}
}

protected final void initSOURC08(String s) {
if (!s.trim().isEmpty()) {
SOURC08 = new Double(s);
}
}

protected final void initSOURC09(String s) {
if (!s.trim().isEmpty()) {
SOURC09 = new Double(s);
}
}

protected final void initSOURC103(String s) {
if (!s.trim().isEmpty()) {
SOURC103 = new Double(s);
}
}

protected final void initSOURC104(String s) {
if (!s.trim().isEmpty()) {
SOURC104 = new Double(s);
}
}

protected final void initSOURC105(String s) {
if (!s.trim().isEmpty()) {
SOURC105 = new Double(s);
}
}

protected final void initSOURC106(String s) {
if (!s.trim().isEmpty()) {
SOURC106 = new Double(s);
}
}

protected final void initSOURC107(String s) {
if (!s.trim().isEmpty()) {
SOURC107 = new Double(s);
}
}

protected final void initSOURC108(String s) {
if (!s.trim().isEmpty()) {
SOURC108 = new Double(s);
}
}

protected final void initSOURC109(String s) {
if (!s.trim().isEmpty()) {
SOURC109 = new Double(s);
}
}

protected final void initSOURC120(String s) {
if (!s.trim().isEmpty()) {
SOURC120 = new Double(s);
}
}

protected final void initSOURC121(String s) {
if (!s.trim().isEmpty()) {
SOURC121 = new Double(s);
}
}

protected final void initSOURC122(String s) {
if (!s.trim().isEmpty()) {
SOURC122 = new Double(s);
}
}

protected final void initSOURC123(String s) {
if (!s.trim().isEmpty()) {
SOURC123 = new Double(s);
}
}

protected final void initSOURC124(String s) {
if (!s.trim().isEmpty()) {
SOURC124 = new Double(s);
}
}

protected final void initSOURC125(String s) {
if (!s.trim().isEmpty()) {
SOURC125 = new Double(s);
}
}

protected final void initSOURC126(String s) {
if (!s.trim().isEmpty()) {
SOURC126 = new Double(s);
}
}

protected final void initSOURC137(String s) {
if (!s.trim().isEmpty()) {
SOURC137 = new Double(s);
}
}

protected final void initSOURC154(String s) {
if (!s.trim().isEmpty()) {
SOURC154 = new Double(s);
}
}

protected final void initSOURC155(String s) {
if (!s.trim().isEmpty()) {
SOURC155 = new Double(s);
}
}

protected final void initSOURC156(String s) {
if (!s.trim().isEmpty()) {
SOURC156 = new Double(s);
}
}

protected final void initSOURC172(String s) {
if (!s.trim().isEmpty()) {
SOURC172 = new Double(s);
}
}

protected final void initSOURC18(String s) {
if (!s.trim().isEmpty()) {
SOURC18 = new Double(s);
}
}

protected final void initSOURC19(String s) {
if (!s.trim().isEmpty()) {
SOURC19 = new Double(s);
}
}

protected final void initSOURC2(String s) {
if (!s.trim().isEmpty()) {
SOURC2 = new Double(s);
}
}

protected final void initSOURC20(String s) {
if (!s.trim().isEmpty()) {
SOURC20 = new Double(s);
}
}

protected final void initSOURC21(String s) {
if (!s.trim().isEmpty()) {
SOURC21 = new Double(s);
}
}

protected final void initSOURC22(String s) {
if (!s.trim().isEmpty()) {
SOURC22 = new Double(s);
}
}

protected final void initSOURC23(String s) {
if (!s.trim().isEmpty()) {
SOURC23 = new Double(s);
}
}

protected final void initSOURC24(String s) {
if (!s.trim().isEmpty()) {
SOURC24 = new Double(s);
}
}

protected final void initSOURC25(String s) {
if (!s.trim().isEmpty()) {
SOURC25 = new Double(s);
}
}

protected final void initSOURC26(String s) {
if (!s.trim().isEmpty()) {
SOURC26 = new Double(s);
}
}

protected final void initSOURC2P(String s) {
if (!s.trim().isEmpty()) {
SOURC2P = new Double(s);
}
}

protected final void initSOURC2P10(String s) {
if (!s.trim().isEmpty()) {
SOURC2P10 = new Double(s);
}
}

protected final void initSOURC2P11(String s) {
if (!s.trim().isEmpty()) {
SOURC2P11 = new Double(s);
}
}

protected final void initSOURC2P2(String s) {
if (!s.trim().isEmpty()) {
SOURC2P2 = new Double(s);
}
}

protected final void initSOURC2P3(String s) {
if (!s.trim().isEmpty()) {
SOURC2P3 = new Double(s);
}
}

protected final void initSOURC2P4(String s) {
if (!s.trim().isEmpty()) {
SOURC2P4 = new Double(s);
}
}

protected final void initSOURC2P5(String s) {
if (!s.trim().isEmpty()) {
SOURC2P5 = new Double(s);
}
}

protected final void initSOURC2P6(String s) {
if (!s.trim().isEmpty()) {
SOURC2P6 = new Double(s);
}
}

protected final void initSOURC2P7(String s) {
if (!s.trim().isEmpty()) {
SOURC2P7 = new Double(s);
}
}

protected final void initSOURC2P8(String s) {
if (!s.trim().isEmpty()) {
SOURC2P8 = new Double(s);
}
}

protected final void initSOURC2P9(String s) {
if (!s.trim().isEmpty()) {
SOURC2P9 = new Double(s);
}
}

protected final void initSOURC3(String s) {
if (!s.trim().isEmpty()) {
SOURC3 = new Double(s);
}
}

protected final void initSOURC35(String s) {
if (!s.trim().isEmpty()) {
SOURC35 = new Double(s);
}
}

protected final void initSOURC36(String s) {
if (!s.trim().isEmpty()) {
SOURC36 = new Double(s);
}
}

protected final void initSOURC37(String s) {
if (!s.trim().isEmpty()) {
SOURC37 = new Double(s);
}
}

protected final void initSOURC38(String s) {
if (!s.trim().isEmpty()) {
SOURC38 = new Double(s);
}
}

protected final void initSOURC39(String s) {
if (!s.trim().isEmpty()) {
SOURC39 = new Double(s);
}
}

protected final void initSOURC4(String s) {
if (!s.trim().isEmpty()) {
SOURC4 = new Double(s);
}
}

protected final void initSOURC40(String s) {
if (!s.trim().isEmpty()) {
SOURC40 = new Double(s);
}
}

protected final void initSOURC41(String s) {
if (!s.trim().isEmpty()) {
SOURC41 = new Double(s);
}
}

protected final void initSOURC5(String s) {
if (!s.trim().isEmpty()) {
SOURC5 = new Double(s);
}
}

protected final void initSOURC52(String s) {
if (!s.trim().isEmpty()) {
SOURC52 = new Double(s);
}
}

protected final void initSOURC53(String s) {
if (!s.trim().isEmpty()) {
SOURC53 = new Double(s);
}
}

protected final void initSOURC54(String s) {
if (!s.trim().isEmpty()) {
SOURC54 = new Double(s);
}
}

protected final void initSOURC55(String s) {
if (!s.trim().isEmpty()) {
SOURC55 = new Double(s);
}
}

protected final void initSOURC56(String s) {
if (!s.trim().isEmpty()) {
SOURC56 = new Double(s);
}
}

protected final void initSOURC57(String s) {
if (!s.trim().isEmpty()) {
SOURC57 = new Double(s);
}
}

protected final void initSOURC58(String s) {
if (!s.trim().isEmpty()) {
SOURC58 = new Double(s);
}
}

protected final void initSOURC6(String s) {
if (!s.trim().isEmpty()) {
SOURC6 = new Double(s);
}
}

protected final void initSOURC69(String s) {
if (!s.trim().isEmpty()) {
SOURC69 = new Double(s);
}
}

protected final void initSOURC7(String s) {
if (!s.trim().isEmpty()) {
SOURC7 = new Double(s);
}
}

protected final void initSOURC70(String s) {
if (!s.trim().isEmpty()) {
SOURC70 = new Double(s);
}
}

protected final void initSOURC71(String s) {
if (!s.trim().isEmpty()) {
SOURC71 = new Double(s);
}
}

protected final void initSOURC72(String s) {
if (!s.trim().isEmpty()) {
SOURC72 = new Double(s);
}
}

protected final void initSOURC73(String s) {
if (!s.trim().isEmpty()) {
SOURC73 = new Double(s);
}
}

protected final void initSOURC74(String s) {
if (!s.trim().isEmpty()) {
SOURC74 = new Double(s);
}
}

protected final void initSOURC75(String s) {
if (!s.trim().isEmpty()) {
SOURC75 = new Double(s);
}
}

protected final void initSOURC8(String s) {
if (!s.trim().isEmpty()) {
SOURC8 = new Double(s);
}
}

protected final void initSOURC86(String s) {
if (!s.trim().isEmpty()) {
SOURC86 = new Double(s);
}
}

protected final void initSOURC87(String s) {
if (!s.trim().isEmpty()) {
SOURC87 = new Double(s);
}
}

protected final void initSOURC88(String s) {
if (!s.trim().isEmpty()) {
SOURC88 = new Double(s);
}
}

protected final void initSOURC89(String s) {
if (!s.trim().isEmpty()) {
SOURC89 = new Double(s);
}
}

protected final void initSOURC9(String s) {
if (!s.trim().isEmpty()) {
SOURC9 = new Double(s);
}
}

protected final void initSOURC90(String s) {
if (!s.trim().isEmpty()) {
SOURC90 = new Double(s);
}
}

protected final void initSOURC91(String s) {
if (!s.trim().isEmpty()) {
SOURC91 = new Double(s);
}
}

protected final void initSOURC92(String s) {
if (!s.trim().isEmpty()) {
SOURC92 = new Double(s);
}
}

protected final void initSOURCP01(String s) {
if (!s.trim().isEmpty()) {
SOURCP01 = new Double(s);
}
}

protected final void initSOURCP02(String s) {
if (!s.trim().isEmpty()) {
SOURCP02 = new Double(s);
}
}

protected final void initSOURCP03(String s) {
if (!s.trim().isEmpty()) {
SOURCP03 = new Double(s);
}
}

protected final void initSOURCP04(String s) {
if (!s.trim().isEmpty()) {
SOURCP04 = new Double(s);
}
}

protected final void initSOURCP05(String s) {
if (!s.trim().isEmpty()) {
SOURCP05 = new Double(s);
}
}

protected final void initSOURCP06(String s) {
if (!s.trim().isEmpty()) {
SOURCP06 = new Double(s);
}
}

protected final void initSOURCP07(String s) {
if (!s.trim().isEmpty()) {
SOURCP07 = new Double(s);
}
}

protected final void initSOURCP08(String s) {
if (!s.trim().isEmpty()) {
SOURCP08 = new Double(s);
}
}

protected final void initSOURCP09(String s) {
if (!s.trim().isEmpty()) {
SOURCP09 = new Double(s);
}
}

protected final void initSOURCP102(String s) {
if (!s.trim().isEmpty()) {
SOURCP102 = new Double(s);
}
}

protected final void initSOURCP103(String s) {
if (!s.trim().isEmpty()) {
SOURCP103 = new Double(s);
}
}

protected final void initSOURCP104(String s) {
if (!s.trim().isEmpty()) {
SOURCP104 = new Double(s);
}
}

protected final void initSOURCP105(String s) {
if (!s.trim().isEmpty()) {
SOURCP105 = new Double(s);
}
}

protected final void initSOURCP106(String s) {
if (!s.trim().isEmpty()) {
SOURCP106 = new Double(s);
}
}

protected final void initSOURCP107(String s) {
if (!s.trim().isEmpty()) {
SOURCP107 = new Double(s);
}
}

protected final void initSOURCP11(String s) {
if (!s.trim().isEmpty()) {
SOURCP11 = new Double(s);
}
}

protected final void initSOURCP12(String s) {
if (!s.trim().isEmpty()) {
SOURCP12 = new Double(s);
}
}

protected final void initSOURCP120(String s) {
if (!s.trim().isEmpty()) {
SOURCP120 = new Double(s);
}
}

protected final void initSOURCP121(String s) {
if (!s.trim().isEmpty()) {
SOURCP121 = new Double(s);
}
}

protected final void initSOURCP122(String s) {
if (!s.trim().isEmpty()) {
SOURCP122 = new Double(s);
}
}

protected final void initSOURCP123(String s) {
if (!s.trim().isEmpty()) {
SOURCP123 = new Double(s);
}
}

protected final void initSOURCP124(String s) {
if (!s.trim().isEmpty()) {
SOURCP124 = new Double(s);
}
}

protected final void initSOURCP125(String s) {
if (!s.trim().isEmpty()) {
SOURCP125 = new Double(s);
}
}

protected final void initSOURCP137(String s) {
if (!s.trim().isEmpty()) {
SOURCP137 = new Double(s);
}
}

protected final void initSOURCP154(String s) {
if (!s.trim().isEmpty()) {
SOURCP154 = new Double(s);
}
}

protected final void initSOURCP155(String s) {
if (!s.trim().isEmpty()) {
SOURCP155 = new Double(s);
}
}

protected final void initSOURCP171(String s) {
if (!s.trim().isEmpty()) {
SOURCP171 = new Double(s);
}
}

protected final void initSOURCP18(String s) {
if (!s.trim().isEmpty()) {
SOURCP18 = new Double(s);
}
}

protected final void initSOURCP19(String s) {
if (!s.trim().isEmpty()) {
SOURCP19 = new Double(s);
}
}

protected final void initSOURCP20(String s) {
if (!s.trim().isEmpty()) {
SOURCP20 = new Double(s);
}
}

protected final void initSOURCP21(String s) {
if (!s.trim().isEmpty()) {
SOURCP21 = new Double(s);
}
}

protected final void initSOURCP22(String s) {
if (!s.trim().isEmpty()) {
SOURCP22 = new Double(s);
}
}

protected final void initSOURCP23(String s) {
if (!s.trim().isEmpty()) {
SOURCP23 = new Double(s);
}
}

protected final void initSOURCP24(String s) {
if (!s.trim().isEmpty()) {
SOURCP24 = new Double(s);
}
}

protected final void initSOURCP25(String s) {
if (!s.trim().isEmpty()) {
SOURCP25 = new Double(s);
}
}

protected final void initSOURCP26(String s) {
if (!s.trim().isEmpty()) {
SOURCP26 = new Double(s);
}
}

protected final void initSOURCP27(String s) {
if (!s.trim().isEmpty()) {
SOURCP27 = new Double(s);
}
}

protected final void initSOURCP28(String s) {
if (!s.trim().isEmpty()) {
SOURCP28 = new Double(s);
}
}

protected final void initSOURCP290(String s) {
if (!s.trim().isEmpty()) {
SOURCP290 = new Double(s);
}
}

protected final void initSOURCP35(String s) {
if (!s.trim().isEmpty()) {
SOURCP35 = new Double(s);
}
}

protected final void initSOURCP36(String s) {
if (!s.trim().isEmpty()) {
SOURCP36 = new Double(s);
}
}

protected final void initSOURCP37(String s) {
if (!s.trim().isEmpty()) {
SOURCP37 = new Double(s);
}
}

protected final void initSOURCP38(String s) {
if (!s.trim().isEmpty()) {
SOURCP38 = new Double(s);
}
}

protected final void initSOURCP39(String s) {
if (!s.trim().isEmpty()) {
SOURCP39 = new Double(s);
}
}

protected final void initSOURCP40(String s) {
if (!s.trim().isEmpty()) {
SOURCP40 = new Double(s);
}
}

protected final void initSOURCP41(String s) {
if (!s.trim().isEmpty()) {
SOURCP41 = new Double(s);
}
}

protected final void initSOURCP42(String s) {
if (!s.trim().isEmpty()) {
SOURCP42 = new Double(s);
}
}

protected final void initSOURCP43(String s) {
if (!s.trim().isEmpty()) {
SOURCP43 = new Double(s);
}
}

protected final void initSOURCP44(String s) {
if (!s.trim().isEmpty()) {
SOURCP44 = new Double(s);
}
}

protected final void initSOURCP52(String s) {
if (!s.trim().isEmpty()) {
SOURCP52 = new Double(s);
}
}

protected final void initSOURCP53(String s) {
if (!s.trim().isEmpty()) {
SOURCP53 = new Double(s);
}
}

protected final void initSOURCP54(String s) {
if (!s.trim().isEmpty()) {
SOURCP54 = new Double(s);
}
}

protected final void initSOURCP55(String s) {
if (!s.trim().isEmpty()) {
SOURCP55 = new Double(s);
}
}

protected final void initSOURCP56(String s) {
if (!s.trim().isEmpty()) {
SOURCP56 = new Double(s);
}
}

protected final void initSOURCP57(String s) {
if (!s.trim().isEmpty()) {
SOURCP57 = new Double(s);
}
}

protected final void initSOURCP58(String s) {
if (!s.trim().isEmpty()) {
SOURCP58 = new Double(s);
}
}

protected final void initSOURCP59(String s) {
if (!s.trim().isEmpty()) {
SOURCP59 = new Double(s);
}
}

protected final void initSOURCP60(String s) {
if (!s.trim().isEmpty()) {
SOURCP60 = new Double(s);
}
}

protected final void initSOURCP61(String s) {
if (!s.trim().isEmpty()) {
SOURCP61 = new Double(s);
}
}

protected final void initSOURCP69(String s) {
if (!s.trim().isEmpty()) {
SOURCP69 = new Double(s);
}
}

protected final void initSOURCP70(String s) {
if (!s.trim().isEmpty()) {
SOURCP70 = new Double(s);
}
}

protected final void initSOURCP71(String s) {
if (!s.trim().isEmpty()) {
SOURCP71 = new Double(s);
}
}

protected final void initSOURCP72(String s) {
if (!s.trim().isEmpty()) {
SOURCP72 = new Double(s);
}
}

protected final void initSOURCP73(String s) {
if (!s.trim().isEmpty()) {
SOURCP73 = new Double(s);
}
}

protected final void initSOURCP74(String s) {
if (!s.trim().isEmpty()) {
SOURCP74 = new Double(s);
}
}

protected final void initSOURCP75(String s) {
if (!s.trim().isEmpty()) {
SOURCP75 = new Double(s);
}
}

protected final void initSOURCP76(String s) {
if (!s.trim().isEmpty()) {
SOURCP76 = new Double(s);
}
}

protected final void initSOURCP86(String s) {
if (!s.trim().isEmpty()) {
SOURCP86 = new Double(s);
}
}

protected final void initSOURCP87(String s) {
if (!s.trim().isEmpty()) {
SOURCP87 = new Double(s);
}
}

protected final void initSOURCP88(String s) {
if (!s.trim().isEmpty()) {
SOURCP88 = new Double(s);
}
}

protected final void initSOURCP89(String s) {
if (!s.trim().isEmpty()) {
SOURCP89 = new Double(s);
}
}

protected final void initSOURCP90(String s) {
if (!s.trim().isEmpty()) {
SOURCP90 = new Double(s);
}
}

protected final void initSPENDM(String s) {
if (!s.trim().isEmpty()) {
SPENDM = new Double(s);
}
}

protected final void initSSFAM1(String s) {
if (!s.trim().isEmpty()) {
SSFAM1 = new Double(s);
}
}

protected final void initSSNOUNITS(String s) {
if (!s.trim().isEmpty()) {
SSNOUNITS = new Double(s);
}
}

protected final void initSTATUS(String s) {
if (!s.trim().isEmpty()) {
STATUS = new Double(s);
}
}

protected final void initTACC(String s) {
if (!s.trim().isEmpty()) {
TACC = new Double(s);
}
}

protected final void initTACC2(String s) {
if (!s.trim().isEmpty()) {
TACC2 = new Double(s);
}
}

protected final void initTACC3(String s) {
if (!s.trim().isEmpty()) {
TACC3 = new Double(s);
}
}

protected final void initTADDVB(String s) {
if (!s.trim().isEmpty()) {
TADDVB = new Double(s);
}
}

protected final void initTADDVB2(String s) {
if (!s.trim().isEmpty()) {
TADDVB2 = new Double(s);
}
}

protected final void initTADDVB3(String s) {
if (!s.trim().isEmpty()) {
TADDVB3 = new Double(s);
}
}

protected final void initTADDVL(String s) {
if (!s.trim().isEmpty()) {
TADDVL = new Double(s);
}
}

protected final void initTADDVL2(String s) {
if (!s.trim().isEmpty()) {
TADDVL2 = new Double(s);
}
}

protected final void initTADDVL3(String s) {
if (!s.trim().isEmpty()) {
TADDVL3 = new Double(s);
}
}

protected final void initTBCAP(String s) {
if (!s.trim().isEmpty()) {
TBCAP = new Double(s);
}
}

protected final void initTBCAP2(String s) {
if (!s.trim().isEmpty()) {
TBCAP2 = new Double(s);
}
}

protected final void initTBCAP3(String s) {
if (!s.trim().isEmpty()) {
TBCAP3 = new Double(s);
}
}

protected final void initTBCAPY(String s) {
if (!s.trim().isEmpty()) {
TBCAPY = new Double(s);
}
}

protected final void initTBCAPY2(String s) {
if (!s.trim().isEmpty()) {
TBCAPY2 = new Double(s);
}
}

protected final void initTBCAPY3(String s) {
if (!s.trim().isEmpty()) {
TBCAPY3 = new Double(s);
}
}

protected final void initTBCKNO(String s) {
if (!s.trim().isEmpty()) {
TBCKNO = new Double(s);
}
}

protected final void initTBCKNO2(String s) {
if (!s.trim().isEmpty()) {
TBCKNO2 = new Double(s);
}
}

protected final void initTBCKNO3(String s) {
if (!s.trim().isEmpty()) {
TBCKNO3 = new Double(s);
}
}

protected final void initTBEN1(String s) {
if (!s.trim().isEmpty()) {
TBEN1 = new Double(s);
}
}

protected final void initTBEN10(String s) {
if (!s.trim().isEmpty()) {
TBEN10 = new Double(s);
}
}

protected final void initTBEN11(String s) {
if (!s.trim().isEmpty()) {
TBEN11 = new Double(s);
}
}

protected final void initTBEN12(String s) {
if (!s.trim().isEmpty()) {
TBEN12 = new Double(s);
}
}

protected final void initTBEN13(String s) {
if (!s.trim().isEmpty()) {
TBEN13 = new Double(s);
}
}

protected final void initTBEN14(String s) {
if (!s.trim().isEmpty()) {
TBEN14 = new Double(s);
}
}

protected final void initTBEN15(String s) {
if (!s.trim().isEmpty()) {
TBEN15 = new Double(s);
}
}

protected final void initTBEN16(String s) {
if (!s.trim().isEmpty()) {
TBEN16 = new Double(s);
}
}

protected final void initTBEN17(String s) {
if (!s.trim().isEmpty()) {
TBEN17 = new Double(s);
}
}

protected final void initTBEN18(String s) {
if (!s.trim().isEmpty()) {
TBEN18 = new Double(s);
}
}

protected final void initTBEN19(String s) {
if (!s.trim().isEmpty()) {
TBEN19 = new Double(s);
}
}

protected final void initTBEN2(String s) {
if (!s.trim().isEmpty()) {
TBEN2 = new Double(s);
}
}

protected final void initTBEN20(String s) {
if (!s.trim().isEmpty()) {
TBEN20 = new Double(s);
}
}

protected final void initTBEN21(String s) {
if (!s.trim().isEmpty()) {
TBEN21 = new Double(s);
}
}

protected final void initTBEN22(String s) {
if (!s.trim().isEmpty()) {
TBEN22 = new Double(s);
}
}

protected final void initTBEN23(String s) {
if (!s.trim().isEmpty()) {
TBEN23 = new Double(s);
}
}

protected final void initTBEN24(String s) {
if (!s.trim().isEmpty()) {
TBEN24 = new Double(s);
}
}

protected final void initTBEN3(String s) {
if (!s.trim().isEmpty()) {
TBEN3 = new Double(s);
}
}

protected final void initTBEN4(String s) {
if (!s.trim().isEmpty()) {
TBEN4 = new Double(s);
}
}

protected final void initTBEN5(String s) {
if (!s.trim().isEmpty()) {
TBEN5 = new Double(s);
}
}

protected final void initTBEN6(String s) {
if (!s.trim().isEmpty()) {
TBEN6 = new Double(s);
}
}

protected final void initTBEN7(String s) {
if (!s.trim().isEmpty()) {
TBEN7 = new Double(s);
}
}

protected final void initTBEN8(String s) {
if (!s.trim().isEmpty()) {
TBEN8 = new Double(s);
}
}

protected final void initTBEN9(String s) {
if (!s.trim().isEmpty()) {
TBEN9 = new Double(s);
}
}

protected final void initTBINC(String s) {
if (!s.trim().isEmpty()) {
TBINC = new Double(s);
}
}

protected final void initTBINC2(String s) {
if (!s.trim().isEmpty()) {
TBINC2 = new Double(s);
}
}

protected final void initTBINC3(String s) {
if (!s.trim().isEmpty()) {
TBINC3 = new Double(s);
}
}

protected final void initTBREC(String s) {
if (!s.trim().isEmpty()) {
TBREC = new Double(s);
}
}

protected final void initTBREC2(String s) {
if (!s.trim().isEmpty()) {
TBREC2 = new Double(s);
}
}

protected final void initTBREC3(String s) {
if (!s.trim().isEmpty()) {
TBREC3 = new Double(s);
}
}

protected final void initTBRECB(String s) {
if (!s.trim().isEmpty()) {
TBRECB = new Double(s);
}
}

protected final void initTBRECB2(String s) {
if (!s.trim().isEmpty()) {
TBRECB2 = new Double(s);
}
}

protected final void initTBRECB3(String s) {
if (!s.trim().isEmpty()) {
TBRECB3 = new Double(s);
}
}

protected final void initTBVALB(String s) {
if (!s.trim().isEmpty()) {
TBVALB = new Double(s);
}
}

protected final void initTBVALB2(String s) {
if (!s.trim().isEmpty()) {
TBVALB2 = new Double(s);
}
}

protected final void initTBVALB3(String s) {
if (!s.trim().isEmpty()) {
TBVALB3 = new Double(s);
}
}

protected final void initTCONT1(String s) {
if (!s.trim().isEmpty()) {
TCONT1 = new Double(s);
}
}

protected final void initTCONT2(String s) {
if (!s.trim().isEmpty()) {
TCONT2 = new Double(s);
}
}

protected final void initTDUP(String s) {
if (!s.trim().isEmpty()) {
TDUP = new Double(s);
}
}

protected final void initTDUP2(String s) {
if (!s.trim().isEmpty()) {
TDUP2 = new Double(s);
}
}

protected final void initTDUP3(String s) {
if (!s.trim().isEmpty()) {
TDUP3 = new Double(s);
}
}

protected final void initTDUPA(String s) {
if (!s.trim().isEmpty()) {
TDUPA = new Double(s);
}
}

protected final void initTDUPA2(String s) {
if (!s.trim().isEmpty()) {
TDUPA2 = new Double(s);
}
}

protected final void initTDUPA3(String s) {
if (!s.trim().isEmpty()) {
TDUPA3 = new Double(s);
}
}

protected final void initTJNT1(String s) {
if (!s.trim().isEmpty()) {
TJNT1 = new Double(s);
}
}

protected final void initTJNT2(String s) {
if (!s.trim().isEmpty()) {
TJNT2 = new Double(s);
}
}

protected final void initTJNT3(String s) {
if (!s.trim().isEmpty()) {
TJNT3 = new Double(s);
}
}

protected final void initTJNT4(String s) {
if (!s.trim().isEmpty()) {
TJNT4 = new Double(s);
}
}

protected final void initTJNT5(String s) {
if (!s.trim().isEmpty()) {
TJNT5 = new Double(s);
}
}

protected final void initTJNT6(String s) {
if (!s.trim().isEmpty()) {
TJNT6 = new Double(s);
}
}

protected final void initTSNEW(String s) {
if (!s.trim().isEmpty()) {
TSNEW = new Double(s);
}
}

protected final void initTSNO(String s) {
if (!s.trim().isEmpty()) {
TSNO = new Double(s);
}
}

protected final void initTSNO2(String s) {
if (!s.trim().isEmpty()) {
TSNO2 = new Double(s);
}
}

protected final void initTSNO3(String s) {
if (!s.trim().isEmpty()) {
TSNO3 = new Double(s);
}
}

protected final void initTSNUM2(String s) {
if (!s.trim().isEmpty()) {
TSNUM2 = new Double(s);
}
}

protected final void initTVAL(String s) {
if (!s.trim().isEmpty()) {
TVAL = new Double(s);
}
}

protected final void initTVAL2(String s) {
if (!s.trim().isEmpty()) {
TVAL2 = new Double(s);
}
}

protected final void initTVAL3(String s) {
if (!s.trim().isEmpty()) {
TVAL3 = new Double(s);
}
}

protected final void initTVALB(String s) {
if (!s.trim().isEmpty()) {
TVALB = new Double(s);
}
}

protected final void initTVALB2(String s) {
if (!s.trim().isEmpty()) {
TVALB2 = new Double(s);
}
}

protected final void initTVALB3(String s) {
if (!s.trim().isEmpty()) {
TVALB3 = new Double(s);
}
}

protected final void initTWHO1(String s) {
if (!s.trim().isEmpty()) {
TWHO1 = new Double(s);
}
}

protected final void initTWHO10(String s) {
if (!s.trim().isEmpty()) {
TWHO10 = new Double(s);
}
}

protected final void initTWHO11(String s) {
if (!s.trim().isEmpty()) {
TWHO11 = new Double(s);
}
}

protected final void initTWHO12(String s) {
if (!s.trim().isEmpty()) {
TWHO12 = new Double(s);
}
}

protected final void initTWHO13(String s) {
if (!s.trim().isEmpty()) {
TWHO13 = new Double(s);
}
}

protected final void initTWHO14(String s) {
if (!s.trim().isEmpty()) {
TWHO14 = new Double(s);
}
}

protected final void initTWHO15(String s) {
if (!s.trim().isEmpty()) {
TWHO15 = new Double(s);
}
}

protected final void initTWHO16(String s) {
if (!s.trim().isEmpty()) {
TWHO16 = new Double(s);
}
}

protected final void initTWHO17(String s) {
if (!s.trim().isEmpty()) {
TWHO17 = new Double(s);
}
}

protected final void initTWHO18(String s) {
if (!s.trim().isEmpty()) {
TWHO18 = new Double(s);
}
}

protected final void initTWHO2(String s) {
if (!s.trim().isEmpty()) {
TWHO2 = new Double(s);
}
}

protected final void initTWHO3(String s) {
if (!s.trim().isEmpty()) {
TWHO3 = new Double(s);
}
}

protected final void initTWHO4(String s) {
if (!s.trim().isEmpty()) {
TWHO4 = new Double(s);
}
}

protected final void initTWHO5(String s) {
if (!s.trim().isEmpty()) {
TWHO5 = new Double(s);
}
}

protected final void initTWHO6(String s) {
if (!s.trim().isEmpty()) {
TWHO6 = new Double(s);
}
}

protected final void initTWHO7(String s) {
if (!s.trim().isEmpty()) {
TWHO7 = new Double(s);
}
}

protected final void initTWHO8(String s) {
if (!s.trim().isEmpty()) {
TWHO8 = new Double(s);
}
}

protected final void initTWHO9(String s) {
if (!s.trim().isEmpty()) {
TWHO9 = new Double(s);
}
}

protected final void initUBUYLET(String s) {
if (!s.trim().isEmpty()) {
UBUYLET = new Double(s);
}
}

protected final void initUBUYLET_I(String s) {
if (!s.trim().isEmpty()) {
UBUYLET_I = new Double(s);
}
}

protected final void initUBUYLET_IFLAG(String s) {
if (!s.trim().isEmpty()) {
UBUYLET_IFLAG = new Double(s);
}
}

protected final void initUBUYTOL(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL = new Double(s);
}
}

protected final void initUBUYTOL2(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL2 = new Double(s);
}
}

protected final void initUBUYTOL3(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL3 = new Double(s);
}
}

protected final void initUBUYTOL4(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL4 = new Double(s);
}
}

protected final void initUBUYTOL5(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL5 = new Double(s);
}
}

protected final void initUPNO(String s) {
if (!s.trim().isEmpty()) {
UPNO = new Double(s);
}
}

protected final void initVALPBLUM1(String s) {
if (!s.trim().isEmpty()) {
VALPBLUM1 = new Double(s);
}
}

protected final void initVALPBLUM2(String s) {
if (!s.trim().isEmpty()) {
VALPBLUM2 = new Double(s);
}
}

protected final void initWKBETW(String s) {
if (!s.trim().isEmpty()) {
WKBETW = new Double(s);
}
}

protected final void initWKHRS(String s) {
if (!s.trim().isEmpty()) {
WKHRS = new Double(s);
}
}

protected final void initWKHRSIR(String s) {
if (!s.trim().isEmpty()) {
WKHRSIR = new Double(s);
}
}

protected final void initWPENTYPE(String s) {
if (!s.trim().isEmpty()) {
WPENTYPE = new Double(s);
}
}

protected final void initXMARSTA(String s) {
if (!s.trim().isEmpty()) {
XMARSTA = new Double(s);
}
}

protected final void initXS_CALWGT(String s) {
if (!s.trim().isEmpty()) {
XS_CALWGT = new Double(s);
}
}

public Double getACCFRAC() {
return ACCFRAC;
}

public Double getACCFRAC2() {
return ACCFRAC2;
}

public Double getASAF2T() {
return ASAF2T;
}

public Double getASAFT() {
return ASAFT;
}

public Double getBAMT19() {
return BAMT19;
}

public Double getBAMTDK19() {
return BAMTDK19;
}

public Double getBEN1Q4() {
return BEN1Q4;
}

public Double getBENUS() {
return BENUS;
}

public Double getBFUND11() {
return BFUND11;
}

public Double getBFUND12() {
return BFUND12;
}

public Double getBFUND13() {
return BFUND13;
}

public Double getBFUND14() {
return BFUND14;
}

public Double getBFUND15() {
return BFUND15;
}

public Double getBFUND16() {
return BFUND16;
}

public Double getBFUND19() {
return BFUND19;
}

public Double getBFUND20() {
return BFUND20;
}

public Double getBFUND21() {
return BFUND21;
}

public Double getBFUND22() {
return BFUND22;
}

public Double getBFUND23() {
return BFUND23;
}

public Double getBFUND24() {
return BFUND24;
}

public Double getBFUND5() {
return BFUND5;
}

public Double getBFUND6() {
return BFUND6;
}

public Double getBFUND7() {
return BFUND7;
}

public Double getBFUND8() {
return BFUND8;
}

public Double getBPD19() {
return BPD19;
}

public Double getBPRFLOSS2() {
return BPRFLOSS2;
}

public Double getBPRFLOSS3() {
return BPRFLOSS3;
}

public Double getBUAMT() {
return BUAMT;
}

public Double getBUPD() {
return BUPD;
}

public Double getBUYLDB1() {
return BUYLDB1;
}

public Double getBUYLDB2() {
return BUYLDB2;
}

public Double getBUYLDB3() {
return BUYLDB3;
}

public Double getBUYLDEBT1() {
return BUYLDEBT1;
}

public Double getBUYLDEBT1_I() {
return BUYLDEBT1_I;
}

public Double getBUYLDEBT1_IFLAG() {
return BUYLDEBT1_IFLAG;
}

public Double getBUYLDEBT2() {
return BUYLDEBT2;
}

public Double getBUYLDEBT2_I() {
return BUYLDEBT2_I;
}

public Double getBUYLDEBT2_IFLAG() {
return BUYLDEBT2_IFLAG;
}

public Double getBUYLDEBT3() {
return BUYLDEBT3;
}

public Double getBUYLDEBT3_I() {
return BUYLDEBT3_I;
}

public Double getBUYLDEBT3_IFLAG() {
return BUYLDEBT3_IFLAG;
}

public Double getBUYLGDST() {
return BUYLGDST;
}

public Double getBUYLGDVAL1() {
return BUYLGDVAL1;
}

public Double getBUYLGDVAL2() {
return BUYLGDVAL2;
}

public Double getBUYLGDVAL3() {
return BUYLGDVAL3;
}

public Double getBUYLGDVB1() {
return BUYLGDVB1;
}

public Double getBUYLGDVB1_I() {
return BUYLGDVB1_I;
}

public Double getBUYLGDVB1_IFLAG() {
return BUYLGDVB1_IFLAG;
}

public Double getBUYLGDVB2() {
return BUYLGDVB2;
}

public Double getBUYLGDVB2_I() {
return BUYLGDVB2_I;
}

public Double getBUYLGDVB2_IFLAG() {
return BUYLGDVB2_IFLAG;
}

public Double getBUYLGDVB3() {
return BUYLGDVB3;
}

public Double getBUYLGDVB3_I() {
return BUYLGDVB3_I;
}

public Double getBUYLGDVB3_IFLAG() {
return BUYLGDVB3_IFLAG;
}

public Double getBUYLVAL1() {
return BUYLVAL1;
}

public Double getBUYLVAL1_I() {
return BUYLVAL1_I;
}

public Double getBUYLVAL1_IFLAG() {
return BUYLVAL1_IFLAG;
}

public Double getBUYLVAL2() {
return BUYLVAL2;
}

public Double getBUYLVAL2_I() {
return BUYLVAL2_I;
}

public Double getBUYLVAL2_IFLAG() {
return BUYLVAL2_IFLAG;
}

public Double getBUYLVAL3() {
return BUYLVAL3;
}

public Double getBUYLVAL3_I() {
return BUYLVAL3_I;
}

public Double getBUYLVAL3_IFLAG() {
return BUYLVAL3_IFLAG;
}

public Double getBUYLVB1() {
return BUYLVB1;
}

public Double getBUYLVB2() {
return BUYLVB2;
}

public Double getBUYLVB3() {
return BUYLVB3;
}

public Double getBVALB3() {
return BVALB3;
}

public Double getBVALWH11() {
return BVALWH11;
}

public Double getBVALWH12() {
return BVALWH12;
}

public Double getBVALWH15() {
return BVALWH15;
}

public Double getBVALWH16() {
return BVALWH16;
}

public Double getBVALWH17() {
return BVALWH17;
}

public Double getBVALWH18() {
return BVALWH18;
}

public Double getBVALWH4() {
return BVALWH4;
}

public Double getBVALWH5() {
return BVALWH5;
}

public Double getBVALWH6() {
return BVALWH6;
}

public Double getCAREDUR() {
return CAREDUR;
}

public Double getCAREHR() {
return CAREHR;
}

public Double getCAREPS() {
return CAREPS;
}

public Integer getCASEW2() {
return CASEW2;
}

public Double getCHECK1() {
return CHECK1;
}

public Double getCHECK2() {
return CHECK2;
}

public Double getCHECKNDL() {
return CHECKNDL;
}

public Double getCHOIC() {
return CHOIC;
}

public Double getCHOIC10() {
return CHOIC10;
}

public Double getCHOIC2() {
return CHOIC2;
}

public Double getCHOIC3() {
return CHOIC3;
}

public Double getCHOIC4() {
return CHOIC4;
}

public Double getCHOIC5() {
return CHOIC5;
}

public Double getCHOIC6() {
return CHOIC6;
}

public Double getCHOIC7() {
return CHOIC7;
}

public Double getCHOIC8() {
return CHOIC8;
}

public Double getCHOIC9() {
return CHOIC9;
}

public Double getCHOICP() {
return CHOICP;
}

public Double getCHOICP10() {
return CHOICP10;
}

public Double getCHOICP11() {
return CHOICP11;
}

public Double getCHOICP18() {
return CHOICP18;
}

public Double getCHOICP19() {
return CHOICP19;
}

public Double getCHOICP2() {
return CHOICP2;
}

public Double getCHOICP3() {
return CHOICP3;
}

public Double getCHOICP4() {
return CHOICP4;
}

public Double getCHOICP5() {
return CHOICP5;
}

public Double getCHOICP6() {
return CHOICP6;
}

public Double getCHOICP7() {
return CHOICP7;
}

public Double getCHOICP8() {
return CHOICP8;
}

public Double getCHOICP9() {
return CHOICP9;
}

public Double getCOMBAM() {
return COMBAM;
}

public Double getCOMBPD() {
return COMBPD;
}

public Double getCOMBWK() {
return COMBWK;
}

public Double getCOMMI() {
return COMMI;
}

public Double getCONTSUB() {
return CONTSUB;
}

public Double getCTBEN() {
return CTBEN;
}

public Double getCURSTAT() {
return CURSTAT;
}

public Double getCUTBACK() {
return CUTBACK;
}

public Double getDADVACT1() {
return DADVACT1;
}

public Double getDADVACT2() {
return DADVACT2;
}

public Double getDADVACT3() {
return DADVACT3;
}

public Double getDADVMTH() {
return DADVMTH;
}

public Double getDBURDW1() {
return DBURDW1;
}

public Double getDBURDW7() {
return DBURDW7;
}

public Double getDBURD___W2() {
return DBURD___W2;
}

public Double getDC12BEH() {
return DC12BEH;
}

public Double getDC12BEH2() {
return DC12BEH2;
}

public Double getDC12BEH3() {
return DC12BEH3;
}

public Double getDC12BEH4() {
return DC12BEH4;
}

public Double getDC12BEH5() {
return DC12BEH5;
}

public Double getDC12OWE() {
return DC12OWE;
}

public Double getDC12OWE2() {
return DC12OWE2;
}

public Double getDC12OWE3() {
return DC12OWE3;
}

public Double getDC12OWE4() {
return DC12OWE4;
}

public Double getDC12OWE5() {
return DC12OWE5;
}

public Double getDCNUM2() {
return DCNUM2;
}

public Double getDCNUM2_I() {
return DCNUM2_I;
}

public Double getDCNUM2_IFLAG() {
return DCNUM2_IFLAG;
}

public Double getDCOINV4() {
return DCOINV4;
}

public Double getDCOINVB4() {
return DCOINVB4;
}

public Double getDCOSHV10() {
return DCOSHV10;
}

public Double getDCOSHV4() {
return DCOSHV4;
}

public Double getDCOSHV5() {
return DCOSHV5;
}

public Double getDCOSHV6() {
return DCOSHV6;
}

public Double getDCOSHV7() {
return DCOSHV7;
}

public Double getDCOSHV8() {
return DCOSHV8;
}

public Double getDCOSHV9() {
return DCOSHV9;
}

public Double getDCOSHVB3() {
return DCOSHVB3;
}

public Double getDCVAL1() {
return DCVAL1;
}

public Double getDCVAL2() {
return DCVAL2;
}

public Double getDHBANY08() {
return DHBANY08;
}

public Double getDHBANY08_I() {
return DHBANY08_I;
}

public Double getDHBANY08_IFLAG() {
return DHBANY08_IFLAG;
}

public Double getDHBANY09() {
return DHBANY09;
}

public Double getDHBANY09_I() {
return DHBANY09_I;
}

public Double getDHBANY09_IFLAG() {
return DHBANY09_IFLAG;
}

public Double getDHBANY10() {
return DHBANY10;
}

public Double getDHBANY10_I() {
return DHBANY10_I;
}

public Double getDHBANY10_IFLAG() {
return DHBANY10_IFLAG;
}

public Double getDHBANY11() {
return DHBANY11;
}

public Double getDHBANY11_I() {
return DHBANY11_I;
}

public Double getDHBANY11_IFLAG() {
return DHBANY11_IFLAG;
}

public Double getDLIND() {
return DLIND;
}

public Double getDLNNM() {
return DLNNM;
}

public Double getDLNNM_I() {
return DLNNM_I;
}

public Double getDLNNM_IFLAG() {
return DLNNM_IFLAG;
}

public Double getDLOLD1() {
return DLOLD1;
}

public Double getDLOLD2() {
return DLOLD2;
}

public Double getDLOLD3() {
return DLOLD3;
}

public Double getDLOLD4() {
return DLOLD4;
}

public Double getDLOLD5() {
return DLOLD5;
}

public Double getDLONM() {
return DLONM;
}

public Double getDLWHY13() {
return DLWHY13;
}

public Double getDLWHY14() {
return DLWHY14;
}

public Double getDLWHY19() {
return DLWHY19;
}

public Double getDLWHY20() {
return DLWHY20;
}

public Double getDLWHY21() {
return DLWHY21;
}

public Double getDLWHY24() {
return DLWHY24;
}

public Double getDLWHY25() {
return DLWHY25;
}

public Double getDLWHY26() {
return DLWHY26;
}

public Double getDLWHY27() {
return DLWHY27;
}

public Double getDLWHY28() {
return DLWHY28;
}

public Double getDLWHY30() {
return DLWHY30;
}

public Double getDLWHY31() {
return DLWHY31;
}

public Double getDLWHY32() {
return DLWHY32;
}

public Double getDLWHY33() {
return DLWHY33;
}

public Double getDLWHY34() {
return DLWHY34;
}

public Double getDLWHY35() {
return DLWHY35;
}

public Double getDLWHY6() {
return DLWHY6;
}

public Double getDLWHY7() {
return DLWHY7;
}

public Double getDS12BEH() {
return DS12BEH;
}

public Double getDS12BEH2() {
return DS12BEH2;
}

public Double getDS12BEH3() {
return DS12BEH3;
}

public Double getDS12BEH4() {
return DS12BEH4;
}

public Double getDS12BEH5() {
return DS12BEH5;
}

public Double getDS12OWE() {
return DS12OWE;
}

public Double getDS12OWE2() {
return DS12OWE2;
}

public Double getDS12OWE3() {
return DS12OWE3;
}

public Double getDS12OWE4() {
return DS12OWE4;
}

public Double getDS12OWE5() {
return DS12OWE5;
}

public Double getDSNUM2() {
return DSNUM2;
}

public Double getDSNUM2_I() {
return DSNUM2_I;
}

public Double getDSNUM2_IFLAG() {
return DSNUM2_IFLAG;
}

public Double getDTLOWE() {
return DTLOWE;
}

public Double getDTLOWE2() {
return DTLOWE2;
}

public Double getDTLOWE2_I() {
return DTLOWE2_I;
}

public Double getDTLOWE2_IFLAG() {
return DTLOWE2_IFLAG;
}

public Double getDTLOWE3() {
return DTLOWE3;
}

public Double getDTLOWE3_I() {
return DTLOWE3_I;
}

public Double getDTLOWE3_IFLAG() {
return DTLOWE3_IFLAG;
}

public Double getDTLOWEB() {
return DTLOWEB;
}

public Double getDTLOWEB2() {
return DTLOWEB2;
}

public Double getDTLOWEB3() {
return DTLOWEB3;
}

public Double getDTLOWE_I() {
return DTLOWE_I;
}

public Double getDTLOWE_IFLAG() {
return DTLOWE_IFLAG;
}

public Double getDTLTYPE() {
return DTLTYPE;
}

public Double getDTLTYPE2() {
return DTLTYPE2;
}

public Double getDTLTYPE2_I() {
return DTLTYPE2_I;
}

public Double getDTLTYPE2_IFLAG() {
return DTLTYPE2_IFLAG;
}

public Double getDTLTYPE3() {
return DTLTYPE3;
}

public Double getDTLTYPE3_I() {
return DTLTYPE3_I;
}

public Double getDTLTYPE3_IFLAG() {
return DTLTYPE3_IFLAG;
}

public Double getDTLTYPE_I() {
return DTLTYPE_I;
}

public Double getDTLTYPE_IFLAG() {
return DTLTYPE_IFLAG;
}

public Double getDTTOWE() {
return DTTOWE;
}

public Double getDTTOWE10() {
return DTTOWE10;
}

public Double getDTTOWE11() {
return DTTOWE11;
}

public Double getDTTOWE12() {
return DTTOWE12;
}

public Double getDTTOWE13() {
return DTTOWE13;
}

public Double getDTTOWE14() {
return DTTOWE14;
}

public Double getDTTOWE15() {
return DTTOWE15;
}

public Double getDTTOWE2() {
return DTTOWE2;
}

public Double getDTTOWE3() {
return DTTOWE3;
}

public Double getDTTOWE4() {
return DTTOWE4;
}

public Double getDTTOWE5() {
return DTTOWE5;
}

public Double getDTTOWE6() {
return DTTOWE6;
}

public Double getDTTOWE7() {
return DTTOWE7;
}

public Double getDTTOWE8() {
return DTTOWE8;
}

public Double getDTTOWE9() {
return DTTOWE9;
}

public Double getDTTOWEB() {
return DTTOWEB;
}

public Double getDTTOWEB10() {
return DTTOWEB10;
}

public Double getDTTOWEB11() {
return DTTOWEB11;
}

public Double getDTTOWEB12() {
return DTTOWEB12;
}

public Double getDTTOWEB13() {
return DTTOWEB13;
}

public Double getDTTOWEB14() {
return DTTOWEB14;
}

public Double getDTTOWEB15() {
return DTTOWEB15;
}

public Double getDTTOWEB2() {
return DTTOWEB2;
}

public Double getDTTOWEB3() {
return DTTOWEB3;
}

public Double getDTTOWEB4() {
return DTTOWEB4;
}

public Double getDTTOWEB5() {
return DTTOWEB5;
}

public Double getDTTOWEB6() {
return DTTOWEB6;
}

public Double getDTTOWEB7() {
return DTTOWEB7;
}

public Double getDTTOWEB8() {
return DTTOWEB8;
}

public Double getDTTOWEB9() {
return DTTOWEB9;
}

public Double getDVAGE4() {
return DVAGE4;
}

public Double getDVAGE5() {
return DVAGE5;
}

public Double getDVAGE6() {
return DVAGE6;
}

public Double getDVAGE9() {
return DVAGE9;
}

public Double getDVAGEW2BAND() {
return DVAGEW2BAND;
}

public Double getDVCOINV4() {
return DVCOINV4;
}

public Double getDVDBINC4() {
return DVDBINC4;
}

public Double getDVDBINC5() {
return DVDBINC5;
}

public Double getDVDBINC6() {
return DVDBINC6;
}

public Double getDVDBLUMP4() {
return DVDBLUMP4;
}

public Double getDVDBLUMP5() {
return DVDBLUMP5;
}

public Double getDVDBLUMP6() {
return DVDBLUMP6;
}

public Double getDVDBOPEN2T() {
return DVDBOPEN2T;
}

public Double getDVDBOPENT() {
return DVDBOPENT;
}

public Double getDVNWFLN() {
return DVNWFLN;
}

public Double getDVNWILN() {
return DVNWILN;
}

public Double getDVPENINC() {
return DVPENINC;
}

public Double getDVPENINC2() {
return DVPENINC2;
}

public Double getDVPUBLPRIV() {
return DVPUBLPRIV;
}

public Double getDVSAME() {
return DVSAME;
}

public Double getDVSPS() {
return DVSPS;
}

public Double getDVWID() {
return DVWID;
}

public Double getECHLCAR() {
return ECHLCAR;
}

public Double getECHLSUP() {
return ECHLSUP;
}

public Double getEDAGE() {
return EDAGE;
}

public Double getEFOOD() {
return EFOOD;
}

public Double getEFUEL() {
return EFUEL;
}

public Double getEINTRO() {
return EINTRO;
}

public Double getELARGE1() {
return ELARGE1;
}

public Double getELARGE2() {
return ELARGE2;
}

public Double getELARGE3() {
return ELARGE3;
}

public Double getELARGE4() {
return ELARGE4;
}

public Double getELARGE5() {
return ELARGE5;
}

public Double getELARGE6() {
return ELARGE6;
}

public Double getELARGE7() {
return ELARGE7;
}

public Double getELARGE8() {
return ELARGE8;
}

public Double getELGEAMB() {
return ELGEAMB;
}

public Double getEMEALS() {
return EMEALS;
}

public Double getEMPNO() {
return EMPNO;
}

public Double getES2000() {
return ES2000;
}

public Double getESATYPE() {
return ESATYPE;
}

public Double getETRANS() {
return ETRANS;
}

public Double getEYE1() {
return EYE1;
}

public Double getEYE2() {
return EYE2;
}

public Double getEYE3() {
return EYE3;
}

public Double getEYE4() {
return EYE4;
}

public Double getEYE5() {
return EYE5;
}

public Double getEYE6() {
return EYE6;
}

public Double getEYE7() {
return EYE7;
}

public Double getEYE8() {
return EYE8;
}

public Double getFBFAED() {
return FBFAED;
}

public Double getFBMOED() {
return FBMOED;
}

public Double getFBSIBS() {
return FBSIBS;
}

public Double getFBSITU() {
return FBSITU;
}

public Double getFBTEN() {
return FBTEN;
}

public Double getFCISAWD() {
return FCISAWD;
}

public Double getFCISCE() {
return FCISCE;
}

public Double getFCIWDAB() {
return FCIWDAB;
}

public Double getFCIWNUM() {
return FCIWNUM;
}

public Double getFNDCASH01() {
return FNDCASH01;
}

public Double getFNDCASH02() {
return FNDCASH02;
}

public Double getFNDCASH03() {
return FNDCASH03;
}

public Double getFNDCASH04() {
return FNDCASH04;
}

public Double getFNDCASH05() {
return FNDCASH05;
}

public Double getFNDCASH06() {
return FNDCASH06;
}

public Double getFNDCASH07() {
return FNDCASH07;
}

public Double getFNDCASH08() {
return FNDCASH08;
}

public Double getFNDCASH09() {
return FNDCASH09;
}

public Double getFNDCASH10() {
return FNDCASH10;
}

public Double getFNDCASH11() {
return FNDCASH11;
}

public Double getFNDCASH12() {
return FNDCASH12;
}

public Double getFNDCASH13() {
return FNDCASH13;
}

public Double getFNDCASH14() {
return FNDCASH14;
}

public Double getFNDCASH15() {
return FNDCASH15;
}

public Double getFNDCASH16() {
return FNDCASH16;
}

public Double getFSAVAB() {
return FSAVAB;
}

public Double getFSAVED() {
return FSAVED;
}

public Double getFSHADA() {
return FSHADA;
}

public Double getFSHADAB() {
return FSHADAB;
}

public Double getFSHADD() {
return FSHADD;
}

public Double getFSTYPIN4() {
return FSTYPIN4;
}

public Double getFSTYPIN5() {
return FSTYPIN5;
}

public Double getFSTYPSH5() {
return FSTYPSH5;
}

public Double getFTHECST() {
return FTHECST;
}

public Double getFTSTUD() {
return FTSTUD;
}

public Double getFWITHD() {
return FWITHD;
}

public Double getGROSSPER() {
return GROSSPER;
}

public Double getGRSAMK() {
return GRSAMK;
}

public Double getGRSEESM() {
return GRSEESM;
}

public Double getGRSEESW() {
return GRSEESW;
}

public Double getGRSSEMJB() {
return GRSSEMJB;
}

public Double getGSTDNW() {
return GSTDNW;
}

public Double getHOUSBEN() {
return HOUSBEN;
}

public Double getIGDS13() {
return IGDS13;
}

public Double getIGDS14() {
return IGDS14;
}

public Double getIGDS17() {
return IGDS17;
}

public Double getIGDS18() {
return IGDS18;
}

public Double getIGDS19() {
return IGDS19;
}

public Double getIGDS20() {
return IGDS20;
}

public Double getIGDS21() {
return IGDS21;
}

public Double getIGDS7() {
return IGDS7;
}

public Double getILNPBAM() {
return ILNPBAM;
}

public Double getILNPBK() {
return ILNPBK;
}

public Double getILNUSE01() {
return ILNUSE01;
}

public Double getILNUSE02() {
return ILNUSE02;
}

public Double getILNUSE03() {
return ILNUSE03;
}

public Double getILNUSE04() {
return ILNUSE04;
}

public Double getILNUSE05() {
return ILNUSE05;
}

public Double getILNUSE06() {
return ILNUSE06;
}

public Double getILNUSE07() {
return ILNUSE07;
}

public Double getILNUSE08() {
return ILNUSE08;
}

public Double getILNUSE09() {
return ILNUSE09;
}

public Double getILNUSE10() {
return ILNUSE10;
}

public Double getILNVAL() {
return ILNVAL;
}

public Double getILNVALB() {
return ILNVALB;
}

public Double getILOAN() {
return ILOAN;
}

public Double getINCDROP() {
return INCDROP;
}

public Double getINDFREQ() {
return INDFREQ;
}

public Double getISADULT() {
return ISADULT;
}

public Double getIWAT6() {
return IWAT6;
}

public Double getLONGIT_CALWGT() {
return LONGIT_CALWGT;
}

public Double getLVTDAY() {
return LVTDAY;
}

public Double getMARSTA() {
return MARSTA;
}

public Double getMRECJB() {
return MRECJB;
}

public Double getMTHECST() {
return MTHECST;
}

public Double getNEWFCMX() {
return NEWFCMX;
}

public Double getNEWGIFT() {
return NEWGIFT;
}

public Double getNOFA() {
return NOFA;
}

public Double getNWFLNVAL1() {
return NWFLNVAL1;
}

public Double getNWFLNVAL2() {
return NWFLNVAL2;
}

public Double getNWFLNVAL3() {
return NWFLNVAL3;
}

public Double getNWHP() {
return NWHP;
}

public Double getNWHPNO() {
return NWHPNO;
}

public Double getNWILNVAL1() {
return NWILNVAL1;
}

public Double getNWILNVAL2() {
return NWILNVAL2;
}

public Double getNWILNVAL3() {
return NWILNVAL3;
}

public Double getNWLN() {
return NWLN;
}

public Double getNWLNNO() {
return NWLNNO;
}

public Double getNWLNNO_I() {
return NWLNNO_I;
}

public Double getNWLNNO_IFLAG() {
return NWLNNO_IFLAG;
}

public Double getNWLN_I() {
return NWLN_I;
}

public Double getNWLN_IFLAG() {
return NWLN_IFLAG;
}

public Double getOEXPINC01() {
return OEXPINC01;
}

public Double getOEXPINC02() {
return OEXPINC02;
}

public Double getOEXPINC03() {
return OEXPINC03;
}

public Double getOEXPINC04() {
return OEXPINC04;
}

public Double getOEXPINC05() {
return OEXPINC05;
}

public Double getOEXPINC06() {
return OEXPINC06;
}

public Double getOEXPINC07() {
return OEXPINC07;
}

public Double getOEXPINC08() {
return OEXPINC08;
}

public Double getOEXPINC09() {
return OEXPINC09;
}

public Double getOEXPINC10() {
return OEXPINC10;
}

public Double getOEXPINC11() {
return OEXPINC11;
}

public Double getOEXPINC12() {
return OEXPINC12;
}

public Double getOEXPINC13() {
return OEXPINC13;
}

public Double getOEXPINC14() {
return OEXPINC14;
}

public Double getOEXPINC15() {
return OEXPINC15;
}

public Double getOIMPRS1() {
return OIMPRS1;
}

public Double getOIMPRS2() {
return OIMPRS2;
}

public Double getOIMPRS3() {
return OIMPRS3;
}

public Double getOIMPRS4() {
return OIMPRS4;
}

public Double getOIMPRS5() {
return OIMPRS5;
}

public Double getOIMPRS6() {
return OIMPRS6;
}

public Double getOIMPRS7() {
return OIMPRS7;
}

public Double getOIMPRS8() {
return OIMPRS8;
}

public Double getOIMPRS9() {
return OIMPRS9;
}

public Double getOINTROL() {
return OINTROL;
}

public Double getOINTROM() {
return OINTROM;
}

public Double getONOSAVE1() {
return ONOSAVE1;
}

public Double getONOSAVE2() {
return ONOSAVE2;
}

public Double getONOSAVE3() {
return ONOSAVE3;
}

public Double getONOSAVE4() {
return ONOSAVE4;
}

public Double getONOSAVE5() {
return ONOSAVE5;
}

public Double getONOSAVE6() {
return ONOSAVE6;
}

public Double getONOSAVE7() {
return ONOSAVE7;
}

public Double getONOSAVE8() {
return ONOSAVE8;
}

public Double getONOSAVE9() {
return ONOSAVE9;
}

public Double getOPENSAV() {
return OPENSAV;
}

public Double getORGNSED() {
return ORGNSED;
}

public Double getOSAFERE2() {
return OSAFERE2;
}

public Double getOSAFERET() {
return OSAFERET;
}

public Double getOSAV2Y() {
return OSAV2Y;
}

public Double getOSAVA() {
return OSAVA;
}

public Double getOSAVB() {
return OSAVB;
}

public Double getOSAVC() {
return OSAVC;
}

public Double getOSAVEXT() {
return OSAVEXT;
}

public Double getOSITCH() {
return OSITCH;
}

public Double getOTHASCH() {
return OTHASCH;
}

public Double getOTHASVB() {
return OTHASVB;
}

public Double getOTHASVL() {
return OTHASVL;
}

public Double getOTRUST15() {
return OTRUST15;
}

public Double getOWAIT() {
return OWAIT;
}

public Double getOWHYSAV01() {
return OWHYSAV01;
}

public Double getOWHYSAV02() {
return OWHYSAV02;
}

public Double getOWHYSAV03() {
return OWHYSAV03;
}

public Double getOWHYSAV04() {
return OWHYSAV04;
}

public Double getOWHYSAV05() {
return OWHYSAV05;
}

public Double getOWHYSAV06() {
return OWHYSAV06;
}

public Double getOWHYSAV07() {
return OWHYSAV07;
}

public Double getOWHYSAV08() {
return OWHYSAV08;
}

public Double getOWHYSAV09() {
return OWHYSAV09;
}

public Double getOWHYSAV10() {
return OWHYSAV10;
}

public Double getOWRSRS01() {
return OWRSRS01;
}

public Double getOWRSRS02() {
return OWRSRS02;
}

public Double getOWRSRS03() {
return OWRSRS03;
}

public Double getOWRSRS04() {
return OWRSRS04;
}

public Double getOWRSRS05() {
return OWRSRS05;
}

public Double getOWRSRS06() {
return OWRSRS06;
}

public Double getOWRSRS07() {
return OWRSRS07;
}

public Double getOWRSRS08() {
return OWRSRS08;
}

public Double getOWRSRS09() {
return OWRSRS09;
}

public Double getOWRSRS10() {
return OWRSRS10;
}

public Double getPADDFUT() {
return PADDFUT;
}

public Double getPADDFUT2() {
return PADDFUT2;
}

public Double getPAGESTP() {
return PAGESTP;
}

public Double getPANYO() {
return PANYO;
}

public Double getPANYO_I() {
return PANYO_I;
}

public Double getPANYO_IFLAG() {
return PANYO_IFLAG;
}

public Double getPASTMN() {
return PASTMN;
}

public Double getPASTMN2() {
return PASTMN2;
}

public Double getPASTYR() {
return PASTYR;
}

public Double getPASTYR2() {
return PASTYR2;
}

public Double getPAVCAM() {
return PAVCAM;
}

public Double getPAVCAM2() {
return PAVCAM2;
}

public Double getPAVCFG() {
return PAVCFG;
}

public Double getPAVCFG2() {
return PAVCFG2;
}

public Double getPAVCFR() {
return PAVCFR;
}

public Double getPAVCFR2() {
return PAVCFR2;
}

public Double getPAVCH() {
return PAVCH;
}

public Double getPAVCH2() {
return PAVCH2;
}

public Double getPAVCIN() {
return PAVCIN;
}

public Double getPAVCIN2() {
return PAVCIN2;
}

public Double getPAVCPR() {
return PAVCPR;
}

public Double getPAVCPR2() {
return PAVCPR2;
}

public Double getPAVCUV() {
return PAVCUV;
}

public Double getPAVCUV2() {
return PAVCUV2;
}

public Double getPAVCUV2_I() {
return PAVCUV2_I;
}

public Double getPAVCUV2_IFLAG() {
return PAVCUV2_IFLAG;
}

public Double getPAVCUV_I() {
return PAVCUV_I;
}

public Double getPAVCUV_IFLAG() {
return PAVCUV_IFLAG;
}

public Double getPAVCVB() {
return PAVCVB;
}

public Double getPAVCVB2() {
return PAVCVB2;
}

public Double getPAVDOC() {
return PAVDOC;
}

public Double getPAVDOC2() {
return PAVDOC2;
}

public Double getPAYINC7() {
return PAYINC7;
}

public Double getPBDOCS() {
return PBDOCS;
}

public Double getPBDOCS2() {
return PBDOCS2;
}

public Double getPBFRAC() {
return PBFRAC;
}

public Double getPBFRAC2() {
return PBFRAC2;
}

public Double getPBFRAC2_I() {
return PBFRAC2_I;
}

public Double getPBFRAC2_IFLAG() {
return PBFRAC2_IFLAG;
}

public Double getPBFRAC_I() {
return PBFRAC_I;
}

public Double getPBFRAC_IFLAG() {
return PBFRAC_IFLAG;
}

public Double getPBINCA() {
return PBINCA;
}

public Double getPBINCA2() {
return PBINCA2;
}

public Double getPBINCF() {
return PBINCF;
}

public Double getPBINCF2() {
return PBINCF2;
}

public Double getPBINCH() {
return PBINCH;
}

public Double getPBINCH2() {
return PBINCH2;
}

public Double getPBLMVB() {
return PBLMVB;
}

public Double getPBLMVB2() {
return PBLMVB2;
}

public Double getPBLUMV() {
return PBLUMV;
}

public Double getPBLUMV2() {
return PBLUMV2;
}

public Double getPBLUMV2_I() {
return PBLUMV2_I;
}

public Double getPBLUMV2_IFLAG() {
return PBLUMV2_IFLAG;
}

public Double getPBLUMV_I() {
return PBLUMV_I;
}

public Double getPBLUMV_IFLAG() {
return PBLUMV_IFLAG;
}

public Double getPBQUAL() {
return PBQUAL;
}

public Double getPBQUAL2() {
return PBQUAL2;
}

public Double getPBQUAL2_I() {
return PBQUAL2_I;
}

public Double getPBQUAL2_IFLAG() {
return PBQUAL2_IFLAG;
}

public Double getPBQUAL_I() {
return PBQUAL_I;
}

public Double getPBQUAL_IFLAG() {
return PBQUAL_IFLAG;
}

public Double getPBSTMN() {
return PBSTMN;
}

public Double getPBSTMN2() {
return PBSTMN2;
}

public Double getPBSTYR() {
return PBSTYR;
}

public Double getPBSTYR2() {
return PBSTYR2;
}

public Double getPCCFST1() {
return PCCFST1;
}

public Double getPCCFST1_I() {
return PCCFST1_I;
}

public Double getPCCFST1_IFLAG() {
return PCCFST1_IFLAG;
}

public Double getPCCFST2() {
return PCCFST2;
}

public Double getPCCFST2_I() {
return PCCFST2_I;
}

public Double getPCCFST2_IFLAG() {
return PCCFST2_IFLAG;
}

public Double getPCCFST3() {
return PCCFST3;
}

public Double getPCCFST3_I() {
return PCCFST3_I;
}

public Double getPCCFST3_IFLAG() {
return PCCFST3_IFLAG;
}

public Double getPCDOCS() {
return PCDOCS;
}

public Double getPCDOCS2() {
return PCDOCS2;
}

public Double getPCNEW() {
return PCNEW;
}

public Double getPCNUM() {
return PCNUM;
}

public Double getPCONT() {
return PCONT;
}

public Double getPCONT_I() {
return PCONT_I;
}

public Double getPCONT_IFLAG() {
return PCONT_IFLAG;
}

public Double getPCSTMN() {
return PCSTMN;
}

public Double getPCSTMN2() {
return PCSTMN2;
}

public Double getPCSTYR() {
return PCSTYR;
}

public Double getPCSTYR2() {
return PCSTYR2;
}

public Double getPDBCAL() {
return PDBCAL;
}

public Double getPDBCAL2() {
return PDBCAL2;
}

public Double getPDCVAL() {
return PDCVAL;
}

public Double getPDCVAL2() {
return PDCVAL2;
}

public Double getPDCVAL2_I() {
return PDCVAL2_I;
}

public Double getPDCVAL2_IFLAG() {
return PDCVAL2_IFLAG;
}

public Double getPDCVAL_I() {
return PDCVAL_I;
}

public Double getPDCVAL_IFLAG() {
return PDCVAL_IFLAG;
}

public Double getPDCVB() {
return PDCVB;
}

public Double getPDCVB2() {
return PDCVB2;
}

public Double getPERMJB() {
return PERMJB;
}

public Double getPERNOWK() {
return PERNOWK;
}

public Integer getPERSONW2() {
return PERSONW2;
}

public Double getPESAME() {
return PESAME;
}

public Double getPESAME_I() {
return PESAME_I;
}

public Double getPESAME_IFLAG() {
return PESAME_IFLAG;
}

public Double getPEWYNO05() {
return PEWYNO05;
}

public Double getPFACCU3() {
return PFACCU3;
}

public Double getPFACCU5() {
return PFACCU5;
}

public Double getPFACCU6() {
return PFACCU6;
}

public Double getPFANEH() {
return PFANEH;
}

public Double getPFANEH2() {
return PFANEH2;
}

public Double getPFANEH3() {
return PFANEH3;
}

public Double getPFANEXM() {
return PFANEXM;
}

public Double getPFANEXY() {
return PFANEXY;
}

public Double getPFANGA() {
return PFANGA;
}

public Double getPFANGA2() {
return PFANGA2;
}

public Double getPFANGA3() {
return PFANGA3;
}

public Double getPFANIF() {
return PFANIF;
}

public Double getPFANIF2() {
return PFANIF2;
}

public Double getPFANIF3() {
return PFANIF3;
}

public Double getPFANJT() {
return PFANJT;
}

public Double getPFANJT2() {
return PFANJT2;
}

public Double getPFANJT3() {
return PFANJT3;
}

public Double getPFANLM() {
return PFANLM;
}

public Double getPFANLM2() {
return PFANLM2;
}

public Double getPFANN1() {
return PFANN1;
}

public Double getPFANN11() {
return PFANN11;
}

public Double getPFANN12() {
return PFANN12;
}

public Double getPFANN2() {
return PFANN2;
}

public Double getPFANN3() {
return PFANN3;
}

public Double getPFANN6() {
return PFANN6;
}

public Double getPFANN7() {
return PFANN7;
}

public Double getPFANVB() {
return PFANVB;
}

public Double getPFANVI() {
return PFANVI;
}

public Double getPFANVI2() {
return PFANVI2;
}

public Double getPFANVI3() {
return PFANVI3;
}

public Double getPFBEG() {
return PFBEG;
}

public Double getPFBEG2() {
return PFBEG2;
}

public Double getPFBEG3() {
return PFBEG3;
}

public Double getPFBEG4() {
return PFBEG4;
}

public Double getPFBEG5() {
return PFBEG5;
}

public Double getPFBEG6() {
return PFBEG6;
}

public Double getPFCASH() {
return PFCASH;
}

public Double getPFCASH2() {
return PFCASH2;
}

public Double getPFCASH2_I() {
return PFCASH2_I;
}

public Double getPFCASH2_IFLAG() {
return PFCASH2_IFLAG;
}

public Double getPFCASH3() {
return PFCASH3;
}

public Double getPFCASH3_I() {
return PFCASH3_I;
}

public Double getPFCASH3_IFLAG() {
return PFCASH3_IFLAG;
}

public Double getPFCASH4() {
return PFCASH4;
}

public Double getPFCASH4_I() {
return PFCASH4_I;
}

public Double getPFCASH4_IFLAG() {
return PFCASH4_IFLAG;
}

public Double getPFCASH_I() {
return PFCASH_I;
}

public Double getPFCASH_IFLAG() {
return PFCASH_IFLAG;
}

public Double getPFCRET1() {
return PFCRET1;
}

public Double getPFCRET2() {
return PFCRET2;
}

public Double getPFCRET3() {
return PFCRET3;
}

public Double getPFCRET4() {
return PFCRET4;
}

public Double getPFCRET5() {
return PFCRET5;
}

public Double getPFCRET6() {
return PFCRET6;
}

public Double getPFCURV() {
return PFCURV;
}

public Double getPFCURV2() {
return PFCURV2;
}

public Double getPFCURV2_I() {
return PFCURV2_I;
}

public Double getPFCURV2_IFLAG() {
return PFCURV2_IFLAG;
}

public Double getPFCURV3() {
return PFCURV3;
}

public Double getPFCURV3_I() {
return PFCURV3_I;
}

public Double getPFCURV3_IFLAG() {
return PFCURV3_IFLAG;
}

public Double getPFCURV4() {
return PFCURV4;
}

public Double getPFCURV4_I() {
return PFCURV4_I;
}

public Double getPFCURV4_IFLAG() {
return PFCURV4_IFLAG;
}

public Double getPFCURV5() {
return PFCURV5;
}

public Double getPFCURV5_I() {
return PFCURV5_I;
}

public Double getPFCURV5_IFLAG() {
return PFCURV5_IFLAG;
}

public Double getPFCURV6() {
return PFCURV6;
}

public Double getPFCURV6_I() {
return PFCURV6_I;
}

public Double getPFCURV6_IFLAG() {
return PFCURV6_IFLAG;
}

public Double getPFCURV_I() {
return PFCURV_I;
}

public Double getPFCURV_IFLAG() {
return PFCURV_IFLAG;
}

public Double getPFCUVB() {
return PFCUVB;
}

public Double getPFCUVB2() {
return PFCUVB2;
}

public Double getPFCUVB3() {
return PFCUVB3;
}

public Double getPFCUVB4() {
return PFCUVB4;
}

public Double getPFCUVB5() {
return PFCUVB5;
}

public Double getPFCUVB6() {
return PFCUVB6;
}

public Double getPFDDV() {
return PFDDV;
}

public Double getPFDDV2() {
return PFDDV2;
}

public Double getPFDDV2_I() {
return PFDDV2_I;
}

public Double getPFDDV2_IFLAG() {
return PFDDV2_IFLAG;
}

public Double getPFDDV3() {
return PFDDV3;
}

public Double getPFDDV3_I() {
return PFDDV3_I;
}

public Double getPFDDV3_IFLAG() {
return PFDDV3_IFLAG;
}

public Double getPFDDV4() {
return PFDDV4;
}

public Double getPFDDV4_I() {
return PFDDV4_I;
}

public Double getPFDDV4_IFLAG() {
return PFDDV4_IFLAG;
}

public Double getPFDDV5() {
return PFDDV5;
}

public Double getPFDDV6() {
return PFDDV6;
}

public Double getPFDDVB() {
return PFDDVB;
}

public Double getPFDDVB2() {
return PFDDVB2;
}

public Double getPFDDVB3() {
return PFDDVB3;
}

public Double getPFDDVB4() {
return PFDDVB4;
}

public Double getPFDDVB5() {
return PFDDVB5;
}

public Double getPFDDVB6() {
return PFDDVB6;
}

public Double getPFDDV_I() {
return PFDDV_I;
}

public Double getPFDDV_IFLAG() {
return PFDDV_IFLAG;
}

public Double getPFDOCS() {
return PFDOCS;
}

public Double getPFDOCS2() {
return PFDOCS2;
}

public Double getPFDOCS3() {
return PFDOCS3;
}

public Double getPFDOCS4() {
return PFDOCS4;
}

public Double getPFDOCS5() {
return PFDOCS5;
}

public Double getPFDOCS6() {
return PFDOCS6;
}

public Double getPFDRAW() {
return PFDRAW;
}

public Double getPFDRAW2_I() {
return PFDRAW2_I;
}

public Double getPFDRAW2_IFLAG() {
return PFDRAW2_IFLAG;
}

public Double getPFDRAW3() {
return PFDRAW3;
}

public Double getPFDRAW3_I() {
return PFDRAW3_I;
}

public Double getPFDRAW3_IFLAG() {
return PFDRAW3_IFLAG;
}

public Double getPFDRAW4() {
return PFDRAW4;
}

public Double getPFDRAW4_I() {
return PFDRAW4_I;
}

public Double getPFDRAW4_IFLAG() {
return PFDRAW4_IFLAG;
}

public Double getPFDRAW5() {
return PFDRAW5;
}

public Double getPFDRAW6() {
return PFDRAW6;
}

public Double getPFDRAW_I() {
return PFDRAW_I;
}

public Double getPFDRAW_IFLAG() {
return PFDRAW_IFLAG;
}

public Double getPFDRA___W2() {
return PFDRA___W2;
}

public Double getPFDRINC() {
return PFDRINC;
}

public Double getPFDRINC2() {
return PFDRINC2;
}

public Double getPFDRINC3() {
return PFDRINC3;
}

public Double getPFDRINC4() {
return PFDRINC4;
}

public Double getPFDRINC5() {
return PFDRINC5;
}

public Double getPFDRINC6() {
return PFDRINC6;
}

public Double getPFDRINCB() {
return PFDRINCB;
}

public Double getPFDRINCB2() {
return PFDRINCB2;
}

public Double getPFDRINCB3() {
return PFDRINCB3;
}

public Double getPFDRINCB4() {
return PFDRINCB4;
}

public Double getPFDRINCB5() {
return PFDRINCB5;
}

public Double getPFDRINCB6() {
return PFDRINCB6;
}

public Double getPFDRVB() {
return PFDRVB;
}

public Double getPFDRVB2() {
return PFDRVB2;
}

public Double getPFDRVB3() {
return PFDRVB3;
}

public Double getPFDRVB4() {
return PFDRVB4;
}

public Double getPFDRVB5() {
return PFDRVB5;
}

public Double getPFDRVB6() {
return PFDRVB6;
}

public Double getPFDRVI() {
return PFDRVI;
}

public Double getPFDRVI2() {
return PFDRVI2;
}

public Double getPFDRVI3() {
return PFDRVI3;
}

public Double getPFDRVI4() {
return PFDRVI4;
}

public Double getPFDRVI5() {
return PFDRVI5;
}

public Double getPFDRVI6() {
return PFDRVI6;
}

public Double getPFEN() {
return PFEN;
}

public Double getPFEND() {
return PFEND;
}

public Double getPFEND2() {
return PFEND2;
}

public Double getPFEND3() {
return PFEND3;
}

public Double getPFEND4() {
return PFEND4;
}

public Double getPFEND5() {
return PFEND5;
}

public Double getPFEND6() {
return PFEND6;
}

public Double getPFENNUM() {
return PFENNUM;
}

public Double getPFFAAG() {
return PFFAAG;
}

public Double getPFFAAG2() {
return PFFAAG2;
}

public Double getPFFAAG3() {
return PFFAAG3;
}

public Double getPFFAAG4() {
return PFFAAG4;
}

public Double getPFFAAG5() {
return PFFAAG5;
}

public Double getPFFAAG6() {
return PFFAAG6;
}

public Double getPFFAN11() {
return PFFAN11;
}

public Double getPFFAN16() {
return PFFAN16;
}

public Double getPFFAN2() {
return PFFAN2;
}

public Double getPFFAN6() {
return PFFAN6;
}

public Double getPFFAWH1() {
return PFFAWH1;
}

public Double getPFFAWH13() {
return PFFAWH13;
}

public Double getPFFAWH7() {
return PFFAWH7;
}

public Double getPFINCA() {
return PFINCA;
}

public Double getPFINCA2() {
return PFINCA2;
}

public Double getPFINCA2_I() {
return PFINCA2_I;
}

public Double getPFINCA2_IFLAG() {
return PFINCA2_IFLAG;
}

public Double getPFINCA3() {
return PFINCA3;
}

public Double getPFINCA3_I() {
return PFINCA3_I;
}

public Double getPFINCA3_IFLAG() {
return PFINCA3_IFLAG;
}

public Double getPFINCA4() {
return PFINCA4;
}

public Double getPFINCA4_I() {
return PFINCA4_I;
}

public Double getPFINCA4_IFLAG() {
return PFINCA4_IFLAG;
}

public Double getPFINCA5() {
return PFINCA5;
}

public Double getPFINCA5_I() {
return PFINCA5_I;
}

public Double getPFINCA5_IFLAG() {
return PFINCA5_IFLAG;
}

public Double getPFINCA6() {
return PFINCA6;
}

public Double getPFINCA6_I() {
return PFINCA6_I;
}

public Double getPFINCA6_IFLAG() {
return PFINCA6_IFLAG;
}

public Double getPFINCA_I() {
return PFINCA_I;
}

public Double getPFINCA_IFLAG() {
return PFINCA_IFLAG;
}

public Double getPFINCP() {
return PFINCP;
}

public Double getPFINCP2() {
return PFINCP2;
}

public Double getPFINCP2_I() {
return PFINCP2_I;
}

public Double getPFINCP2_IFLAG() {
return PFINCP2_IFLAG;
}

public Double getPFINCP3() {
return PFINCP3;
}

public Double getPFINCP3_I() {
return PFINCP3_I;
}

public Double getPFINCP3_IFLAG() {
return PFINCP3_IFLAG;
}

public Double getPFINCP4() {
return PFINCP4;
}

public Double getPFINCP4_I() {
return PFINCP4_I;
}

public Double getPFINCP4_IFLAG() {
return PFINCP4_IFLAG;
}

public Double getPFINCP5() {
return PFINCP5;
}

public Double getPFINCP5_I() {
return PFINCP5_I;
}

public Double getPFINCP5_IFLAG() {
return PFINCP5_IFLAG;
}

public Double getPFINCP6() {
return PFINCP6;
}

public Double getPFINCP6_I() {
return PFINCP6_I;
}

public Double getPFINCP6_IFLAG() {
return PFINCP6_IFLAG;
}

public Double getPFINCP_I() {
return PFINCP_I;
}

public Double getPFINCP_IFLAG() {
return PFINCP_IFLAG;
}

public Double getPFLMUS() {
return PFLMUS;
}

public Double getPFLMUS2() {
return PFLMUS2;
}

public Double getPFLMUS3() {
return PFLMUS3;
}

public Double getPFLMUS4() {
return PFLMUS4;
}

public Double getPFLMUS5() {
return PFLMUS5;
}

public Double getPFLMUS6() {
return PFLMUS6;
}

public Double getPFLMV() {
return PFLMV;
}

public Double getPFLMV2() {
return PFLMV2;
}

public Double getPFLMV3() {
return PFLMV3;
}

public Double getPFLMV4() {
return PFLMV4;
}

public Double getPFLMV5() {
return PFLMV5;
}

public Double getPFLMV6() {
return PFLMV6;
}

public Double getPFLMVB() {
return PFLMVB;
}

public Double getPFLMVB2() {
return PFLMVB2;
}

public Double getPFLMVB3() {
return PFLMVB3;
}

public Double getPFLMVB4() {
return PFLMVB4;
}

public Double getPFLMVB5() {
return PFLMVB5;
}

public Double getPFLMVB6() {
return PFLMVB6;
}

public Double getPFLUM() {
return PFLUM;
}

public Double getPFLUM2() {
return PFLUM2;
}

public Double getPFLUM2_I() {
return PFLUM2_I;
}

public Double getPFLUM2_IFLAG() {
return PFLUM2_IFLAG;
}

public Double getPFLUM3() {
return PFLUM3;
}

public Double getPFLUM3_I() {
return PFLUM3_I;
}

public Double getPFLUM3_IFLAG() {
return PFLUM3_IFLAG;
}

public Double getPFLUM4() {
return PFLUM4;
}

public Double getPFLUM4_I() {
return PFLUM4_I;
}

public Double getPFLUM4_IFLAG() {
return PFLUM4_IFLAG;
}

public Double getPFLUM5() {
return PFLUM5;
}

public Double getPFLUM5_I() {
return PFLUM5_I;
}

public Double getPFLUM5_IFLAG() {
return PFLUM5_IFLAG;
}

public Double getPFLUM6() {
return PFLUM6;
}

public Double getPFLUM6_I() {
return PFLUM6_I;
}

public Double getPFLUM6_IFLAG() {
return PFLUM6_IFLAG;
}

public Double getPFLUMALL() {
return PFLUMALL;
}

public Double getPFLUMALL2() {
return PFLUMALL2;
}

public Double getPFLUMALL2_I() {
return PFLUMALL2_I;
}

public Double getPFLUMALL2_IFLAG() {
return PFLUMALL2_IFLAG;
}

public Double getPFLUMALL3() {
return PFLUMALL3;
}

public Double getPFLUMALL3_I() {
return PFLUMALL3_I;
}

public Double getPFLUMALL3_IFLAG() {
return PFLUMALL3_IFLAG;
}

public Double getPFLUMALL4() {
return PFLUMALL4;
}

public Double getPFLUMALL4_I() {
return PFLUMALL4_I;
}

public Double getPFLUMALL4_IFLAG() {
return PFLUMALL4_IFLAG;
}

public Double getPFLUMALL_I() {
return PFLUMALL_I;
}

public Double getPFLUMALL_IFLAG() {
return PFLUMALL_IFLAG;
}

public Double getPFLUMV() {
return PFLUMV;
}

public Double getPFLUMV2() {
return PFLUMV2;
}

public Double getPFLUMV2_I() {
return PFLUMV2_I;
}

public Double getPFLUMV2_IFLAG() {
return PFLUMV2_IFLAG;
}

public Double getPFLUMV3() {
return PFLUMV3;
}

public Double getPFLUMV3_I() {
return PFLUMV3_I;
}

public Double getPFLUMV3_IFLAG() {
return PFLUMV3_IFLAG;
}

public Double getPFLUMV4() {
return PFLUMV4;
}

public Double getPFLUMV4_I() {
return PFLUMV4_I;
}

public Double getPFLUMV4_IFLAG() {
return PFLUMV4_IFLAG;
}

public Double getPFLUMV5() {
return PFLUMV5;
}

public Double getPFLUMV5_I() {
return PFLUMV5_I;
}

public Double getPFLUMV5_IFLAG() {
return PFLUMV5_IFLAG;
}

public Double getPFLUMV6() {
return PFLUMV6;
}

public Double getPFLUMV6_I() {
return PFLUMV6_I;
}

public Double getPFLUMV6_IFLAG() {
return PFLUMV6_IFLAG;
}

public Double getPFLUMV_I() {
return PFLUMV_I;
}

public Double getPFLUMV_IFLAG() {
return PFLUMV_IFLAG;
}

public Double getPFLUM_I() {
return PFLUM_I;
}

public Double getPFLUM_IFLAG() {
return PFLUM_IFLAG;
}

public Double getPFLUVB() {
return PFLUVB;
}

public Double getPFLUVB2() {
return PFLUVB2;
}

public Double getPFLUVB3() {
return PFLUVB3;
}

public Double getPFLUVB4() {
return PFLUVB4;
}

public Double getPFLUVB5() {
return PFLUVB5;
}

public Double getPFLUVB6() {
return PFLUVB6;
}

public Double getPFNEW() {
return PFNEW;
}

public Double getPFNEWNO() {
return PFNEWNO;
}

public Double getPFNEWNO_I() {
return PFNEWNO_I;
}

public Double getPFNEWNO_IFLAG() {
return PFNEWNO_IFLAG;
}

public Double getPFNEW_I() {
return PFNEW_I;
}

public Double getPFNEW_IFLAG() {
return PFNEW_IFLAG;
}

public Double getPFNUM2() {
return PFNUM2;
}

public Double getPFOCTY() {
return PFOCTY;
}

public Double getPFOCTY2() {
return PFOCTY2;
}

public Double getPFOCTY2_I() {
return PFOCTY2_I;
}

public Double getPFOCTY2_IFLAG() {
return PFOCTY2_IFLAG;
}

public Double getPFOCTY3() {
return PFOCTY3;
}

public Double getPFOCTY3_I() {
return PFOCTY3_I;
}

public Double getPFOCTY3_IFLAG() {
return PFOCTY3_IFLAG;
}

public Double getPFOCTY4() {
return PFOCTY4;
}

public Double getPFOCTY4_I() {
return PFOCTY4_I;
}

public Double getPFOCTY4_IFLAG() {
return PFOCTY4_IFLAG;
}

public Double getPFOCTY5() {
return PFOCTY5;
}

public Double getPFOCTY5_I() {
return PFOCTY5_I;
}

public Double getPFOCTY5_IFLAG() {
return PFOCTY5_IFLAG;
}

public Double getPFOCTY6() {
return PFOCTY6;
}

public Double getPFOCTY6_I() {
return PFOCTY6_I;
}

public Double getPFOCTY6_IFLAG() {
return PFOCTY6_IFLAG;
}

public Double getPFOCTY_I() {
return PFOCTY_I;
}

public Double getPFOCTY_IFLAG() {
return PFOCTY_IFLAG;
}

public Double getPFPENVB() {
return PFPENVB;
}

public Double getPFPENVB2() {
return PFPENVB2;
}

public Double getPFPENVB3() {
return PFPENVB3;
}

public Double getPFPENVB4() {
return PFPENVB4;
}

public Double getPFPENVB5() {
return PFPENVB5;
}

public Double getPFPENVB6() {
return PFPENVB6;
}

public Double getPFPENVI() {
return PFPENVI;
}

public Double getPFPENVI2() {
return PFPENVI2;
}

public Double getPFPENVI3() {
return PFPENVI3;
}

public Double getPFPENVI4() {
return PFPENVI4;
}

public Double getPFPENVI5() {
return PFPENVI5;
}

public Double getPFPENVI6() {
return PFPENVI6;
}

public Double getPFREC() {
return PFREC;
}

public Double getPFREC2() {
return PFREC2;
}

public Double getPFREC2_I() {
return PFREC2_I;
}

public Double getPFREC2_IFLAG() {
return PFREC2_IFLAG;
}

public Double getPFREC3() {
return PFREC3;
}

public Double getPFREC3_I() {
return PFREC3_I;
}

public Double getPFREC3_IFLAG() {
return PFREC3_IFLAG;
}

public Double getPFREC4() {
return PFREC4;
}

public Double getPFREC4_I() {
return PFREC4_I;
}

public Double getPFREC4_IFLAG() {
return PFREC4_IFLAG;
}

public Double getPFREC5() {
return PFREC5;
}

public Double getPFREC5_I() {
return PFREC5_I;
}

public Double getPFREC5_IFLAG() {
return PFREC5_IFLAG;
}

public Double getPFREC6() {
return PFREC6;
}

public Double getPFREC6_I() {
return PFREC6_I;
}

public Double getPFREC6_IFLAG() {
return PFREC6_IFLAG;
}

public Double getPFREC_I() {
return PFREC_I;
}

public Double getPFREC_IFLAG() {
return PFREC_IFLAG;
}

public Double getPFREM() {
return PFREM;
}

public Double getPFREM2() {
return PFREM2;
}

public Double getPFREM2_I() {
return PFREM2_I;
}

public Double getPFREM2_IFLAG() {
return PFREM2_IFLAG;
}

public Double getPFREM3() {
return PFREM3;
}

public Double getPFREM3_I() {
return PFREM3_I;
}

public Double getPFREM3_IFLAG() {
return PFREM3_IFLAG;
}

public Double getPFREM4() {
return PFREM4;
}

public Double getPFREM4_I() {
return PFREM4_I;
}

public Double getPFREM4_IFLAG() {
return PFREM4_IFLAG;
}

public Double getPFREM5() {
return PFREM5;
}

public Double getPFREM6() {
return PFREM6;
}

public Double getPFREM_I() {
return PFREM_I;
}

public Double getPFREM_IFLAG() {
return PFREM_IFLAG;
}

public Double getPFSIPTY1() {
return PFSIPTY1;
}

public Double getPFSIPTY10() {
return PFSIPTY10;
}

public Double getPFSIPTY11() {
return PFSIPTY11;
}

public Double getPFSIPTY12() {
return PFSIPTY12;
}

public Double getPFSIPTY13() {
return PFSIPTY13;
}

public Double getPFSIPTY14() {
return PFSIPTY14;
}

public Double getPFSIPTY15() {
return PFSIPTY15;
}

public Double getPFSIPTY16() {
return PFSIPTY16;
}

public Double getPFSIPTY17() {
return PFSIPTY17;
}

public Double getPFSIPTY18() {
return PFSIPTY18;
}

public Double getPFSIPTY19() {
return PFSIPTY19;
}

public Double getPFSIPTY2() {
return PFSIPTY2;
}

public Double getPFSIPTY22() {
return PFSIPTY22;
}

public Double getPFSIPTY23() {
return PFSIPTY23;
}

public Double getPFSIPTY24() {
return PFSIPTY24;
}

public Double getPFSIPTY4() {
return PFSIPTY4;
}

public Double getPFSIPTY5() {
return PFSIPTY5;
}

public Double getPFSIPTY6() {
return PFSIPTY6;
}

public Double getPFSIPTY7() {
return PFSIPTY7;
}

public Double getPFSIPTY8() {
return PFSIPTY8;
}

public Double getPFSIPTY9() {
return PFSIPTY9;
}

public Double getPFSTMM() {
return PFSTMM;
}

public Double getPFSTMM2() {
return PFSTMM2;
}

public Double getPFSTMM3() {
return PFSTMM3;
}

public Double getPFSTMM4() {
return PFSTMM4;
}

public Double getPFSTMM5() {
return PFSTMM5;
}

public Double getPFSTMM6() {
return PFSTMM6;
}

public Double getPFSTMY() {
return PFSTMY;
}

public Double getPFSTMY2() {
return PFSTMY2;
}

public Double getPFSTMY3() {
return PFSTMY3;
}

public Double getPFSTMY4() {
return PFSTMY4;
}

public Double getPFSTMY5() {
return PFSTMY5;
}

public Double getPFSTMY6() {
return PFSTMY6;
}

public Double getPFTYP() {
return PFTYP;
}

public Double getPFTYP2() {
return PFTYP2;
}

public Double getPFTYP2_I() {
return PFTYP2_I;
}

public Double getPFTYP2_IFLAG() {
return PFTYP2_IFLAG;
}

public Double getPFTYP3() {
return PFTYP3;
}

public Double getPFTYP3_I() {
return PFTYP3_I;
}

public Double getPFTYP3_IFLAG() {
return PFTYP3_IFLAG;
}

public Double getPFTYP4() {
return PFTYP4;
}

public Double getPFTYP4_I() {
return PFTYP4_I;
}

public Double getPFTYP4_IFLAG() {
return PFTYP4_IFLAG;
}

public Double getPFTYP5() {
return PFTYP5;
}

public Double getPFTYP5_I() {
return PFTYP5_I;
}

public Double getPFTYP5_IFLAG() {
return PFTYP5_IFLAG;
}

public Double getPFTYP6() {
return PFTYP6;
}

public Double getPFTYP6_I() {
return PFTYP6_I;
}

public Double getPFTYP6_IFLAG() {
return PFTYP6_IFLAG;
}

public Double getPFTYP_I() {
return PFTYP_I;
}

public Double getPFTYP_IFLAG() {
return PFTYP_IFLAG;
}

public Double getPIRREG() {
return PIRREG;
}

public Double getPIRREG2() {
return PIRREG2;
}

public Double getPMORTC() {
return PMORTC;
}

public Double getPMORTC2() {
return PMORTC2;
}

public Double getPMORTC3() {
return PMORTC3;
}

public Double getPNEWMEM() {
return PNEWMEM;
}

public Double getPNOWK() {
return PNOWK;
}

public Double getPNOWKLN() {
return PNOWKLN;
}

public Double getPNUMOS() {
return PNUMOS;
}

public Double getPOADD1() {
return POADD1;
}

public Double getPOADD1_I() {
return POADD1_I;
}

public Double getPOADD1_IFLAG() {
return POADD1_IFLAG;
}

public Double getPOADD2() {
return POADD2;
}

public Double getPOADD2_I() {
return POADD2_I;
}

public Double getPOADD2_IFLAG() {
return POADD2_IFLAG;
}

public Double getPOADD3() {
return POADD3;
}

public Double getPOADD3_I() {
return POADD3_I;
}

public Double getPOADD3_IFLAG() {
return POADD3_IFLAG;
}

public Double getPOADD4() {
return POADD4;
}

public Double getPOADD4_I() {
return POADD4_I;
}

public Double getPOADD4_IFLAG() {
return POADD4_IFLAG;
}

public Double getPOADD5() {
return POADD5;
}

public Double getPOADD5_I() {
return POADD5_I;
}

public Double getPOADD5_IFLAG() {
return POADD5_IFLAG;
}

public Double getPOADD6() {
return POADD6;
}

public Double getPOADD6_I() {
return POADD6_I;
}

public Double getPOADD6_IFLAG() {
return POADD6_IFLAG;
}

public Double getPOANEH() {
return POANEH;
}

public Double getPOANEH2() {
return POANEH2;
}

public Double getPOANEXM() {
return POANEXM;
}

public Double getPOANEXY() {
return POANEXY;
}

public Double getPOANGA() {
return POANGA;
}

public Double getPOANGA2() {
return POANGA2;
}

public Double getPOANIF() {
return POANIF;
}

public Double getPOANIF2() {
return POANIF2;
}

public Double getPOANJT() {
return POANJT;
}

public Double getPOANJT2() {
return POANJT2;
}

public Double getPOANLM() {
return POANLM;
}

public Double getPOANLM2() {
return POANLM2;
}

public Double getPOANN1() {
return POANN1;
}

public Double getPOANN2() {
return POANN2;
}

public Double getPOANN3() {
return POANN3;
}

public Double getPOANN4() {
return POANN4;
}

public Double getPOANN5() {
return POANN5;
}

public Double getPOANN6() {
return POANN6;
}

public Double getPOANN7() {
return POANN7;
}

public Double getPOANN8() {
return POANN8;
}

public Double getPOANVB() {
return POANVB;
}

public Double getPOANVB2() {
return POANVB2;
}

public Double getPOANVI() {
return POANVI;
}

public Double getPOANVI2() {
return POANVI2;
}

public Double getPOCASH() {
return POCASH;
}

public Double getPOCASH2() {
return POCASH2;
}

public Double getPOCNAM2() {
return POCNAM2;
}

public Double getPOCNAM3() {
return POCNAM3;
}

public Double getPOCNDRS1() {
return POCNDRS1;
}

public Double getPOCNDRS10() {
return POCNDRS10;
}

public Double getPOCNDRS11() {
return POCNDRS11;
}

public Double getPOCNDRS12() {
return POCNDRS12;
}

public Double getPOCNDRS2() {
return POCNDRS2;
}

public Double getPOCNDRS3() {
return POCNDRS3;
}

public Double getPOCNDRS4() {
return POCNDRS4;
}

public Double getPOCNDRS5() {
return POCNDRS5;
}

public Double getPOCNDRS6() {
return POCNDRS6;
}

public Double getPOCNDRS7() {
return POCNDRS7;
}

public Double getPOCNDRS8() {
return POCNDRS8;
}

public Double getPOCNDRS9() {
return POCNDRS9;
}

public Double getPOCNFG() {
return POCNFG;
}

public Double getPOCNFG2() {
return POCNFG2;
}

public Double getPOCNFR() {
return POCNFR;
}

public Double getPOCNFR2() {
return POCNFR2;
}

public Double getPOCNHOW() {
return POCNHOW;
}

public Double getPOCNHO___W2() {
return POCNHO___W2;
}

public Double getPOCNLRS1() {
return POCNLRS1;
}

public Double getPOCNLRS2() {
return POCNLRS2;
}

public Double getPOCNLRS3() {
return POCNLRS3;
}

public Double getPOCNLRS4() {
return POCNLRS4;
}

public Double getPOCNLRS5() {
return POCNLRS5;
}

public Double getPOCNLRS6() {
return POCNLRS6;
}

public Double getPOCNLRS7() {
return POCNLRS7;
}

public Double getPOCNLRS8() {
return POCNLRS8;
}

public Double getPOCNMSC2() {
return POCNMSC2;
}

public Double getPOCNPLN() {
return POCNPLN;
}

public Double getPOCNPLN2() {
return POCNPLN2;
}

public Double getPOCNPR() {
return POCNPR;
}

public Double getPOCNPR2() {
return POCNPR2;
}

public Double getPOCNVOL() {
return POCNVOL;
}

public Double getPOCNVOL2() {
return POCNVOL2;
}

public Double getPOCONCH() {
return POCONCH;
}

public Double getPOCONCH2() {
return POCONCH2;
}

public Double getPOCONH() {
return POCONH;
}

public Double getPOCONH2() {
return POCONH2;
}

public Double getPOCTYP() {
return POCTYP;
}

public Double getPOCTYP2() {
return POCTYP2;
}

public Double getPOCTYP2_I() {
return POCTYP2_I;
}

public Double getPOCTYP2_IFLAG() {
return POCTYP2_IFLAG;
}

public Double getPOCTYP_I() {
return POCTYP_I;
}

public Double getPOCTYP_IFLAG() {
return POCTYP_IFLAG;
}

public Double getPODRINC() {
return PODRINC;
}

public Double getPODRINC2() {
return PODRINC2;
}

public Double getPODRINCB() {
return PODRINCB;
}

public Double getPODRINCB2() {
return PODRINCB2;
}

public Double getPODRVB() {
return PODRVB;
}

public Double getPODRVB2() {
return PODRVB2;
}

public Double getPODRVI() {
return PODRVI;
}

public Double getPODRVI2() {
return PODRVI2;
}

public Double getPOEMAM() {
return POEMAM;
}

public Double getPOEMAM2() {
return POEMAM2;
}

public Double getPOEMFG() {
return POEMFG;
}

public Double getPOEMFG2() {
return POEMFG2;
}

public Double getPOEMFR() {
return POEMFR;
}

public Double getPOEMFR2() {
return POEMFR2;
}

public Double getPOEMP() {
return POEMP;
}

public Double getPOEMP2() {
return POEMP2;
}

public Double getPOEMPH() {
return POEMPH;
}

public Double getPOEMPH2() {
return POEMPH2;
}

public Double getPOEMPR() {
return POEMPR;
}

public Double getPOEMPR2() {
return POEMPR2;
}

public Double getPOFAAG() {
return POFAAG;
}

public Double getPOFAAG2() {
return POFAAG2;
}

public Double getPOFAN1() {
return POFAN1;
}

public Double getPOFAN10() {
return POFAN10;
}

public Double getPOFAN11() {
return POFAN11;
}

public Double getPOFAN12() {
return POFAN12;
}

public Double getPOFAN2() {
return POFAN2;
}

public Double getPOFAN3() {
return POFAN3;
}

public Double getPOFAN4() {
return POFAN4;
}

public Double getPOFAN5() {
return POFAN5;
}

public Double getPOFAN6() {
return POFAN6;
}

public Double getPOFAN7() {
return POFAN7;
}

public Double getPOFAN8() {
return POFAN8;
}

public Double getPOFAN9() {
return POFAN9;
}

public Double getPOFAWH1() {
return POFAWH1;
}

public Double getPOFAWH10() {
return POFAWH10;
}

public Double getPOFAWH11() {
return POFAWH11;
}

public Double getPOFAWH12() {
return POFAWH12;
}

public Double getPOFAWH2() {
return POFAWH2;
}

public Double getPOFAWH3() {
return POFAWH3;
}

public Double getPOFAWH4() {
return POFAWH4;
}

public Double getPOFAWH5() {
return POFAWH5;
}

public Double getPOFAWH6() {
return POFAWH6;
}

public Double getPOFAWH7() {
return POFAWH7;
}

public Double getPOFAWH8() {
return POFAWH8;
}

public Double getPOFAWH9() {
return POFAWH9;
}

public Double getPOJOIN() {
return POJOIN;
}

public Double getPOJOIN2() {
return POJOIN2;
}

public Double getPOLMUS1() {
return POLMUS1;
}

public Double getPOLMUS10() {
return POLMUS10;
}

public Double getPOLMUS11() {
return POLMUS11;
}

public Double getPOLMUS12() {
return POLMUS12;
}

public Double getPOLMUS2() {
return POLMUS2;
}

public Double getPOLMUS3() {
return POLMUS3;
}

public Double getPOLMUS4() {
return POLMUS4;
}

public Double getPOLMUS5() {
return POLMUS5;
}

public Double getPOLMUS6() {
return POLMUS6;
}

public Double getPOLMUS7() {
return POLMUS7;
}

public Double getPOLMUS8() {
return POLMUS8;
}

public Double getPOLMUS9() {
return POLMUS9;
}

public Double getPOLMV() {
return POLMV;
}

public Double getPOLMV2() {
return POLMV2;
}

public Double getPOLMVB() {
return POLMVB;
}

public Double getPOLMVB2() {
return POLMVB2;
}

public Double getPOLSYR() {
return POLSYR;
}

public Double getPOLSYR2() {
return POLSYR2;
}

public Double getPOLUM() {
return POLUM;
}

public Double getPOLUM2() {
return POLUM2;
}

public Double getPOMETH() {
return POMETH;
}

public Double getPOMETH2() {
return POMETH2;
}

public Double getPOPENVB() {
return POPENVB;
}

public Double getPOPENVB2() {
return POPENVB2;
}

public Double getPOPENVI() {
return POPENVI;
}

public Double getPOPENVI2() {
return POPENVI2;
}

public Double getPOPYCH() {
return POPYCH;
}

public Double getPOPYCH2() {
return POPYCH2;
}

public Double getPORAGE2T() {
return PORAGE2T;
}

public Double getPORAGET() {
return PORAGET;
}

public Double getPOYRAM() {
return POYRAM;
}

public Double getPOYRAM2() {
return POYRAM2;
}

public Double getPPACCU() {
return PPACCU;
}

public Double getPPACCU2() {
return PPACCU2;
}

public Double getPPACCU3() {
return PPACCU3;
}

public Double getPPANEH() {
return PPANEH;
}

public Double getPPANEH2() {
return PPANEH2;
}

public Double getPPANEH3() {
return PPANEH3;
}

public Double getPPANEXM() {
return PPANEXM;
}

public Double getPPANEXM2() {
return PPANEXM2;
}

public Double getPPANEXM3() {
return PPANEXM3;
}

public Double getPPANEXY() {
return PPANEXY;
}

public Double getPPANEXY2() {
return PPANEXY2;
}

public Double getPPANEXY3() {
return PPANEXY3;
}

public Double getPPANGA() {
return PPANGA;
}

public Double getPPANGA2() {
return PPANGA2;
}

public Double getPPANGA3() {
return PPANGA3;
}

public Double getPPANIF() {
return PPANIF;
}

public Double getPPANIF2() {
return PPANIF2;
}

public Double getPPANIF3() {
return PPANIF3;
}

public Double getPPANJT() {
return PPANJT;
}

public Double getPPANJT2() {
return PPANJT2;
}

public Double getPPANJT3() {
return PPANJT3;
}

public Double getPPANLM() {
return PPANLM;
}

public Double getPPANLM2() {
return PPANLM2;
}

public Double getPPANLM3() {
return PPANLM3;
}

public Double getPPANN1() {
return PPANN1;
}

public Double getPPANN10() {
return PPANN10;
}

public Double getPPANN11() {
return PPANN11;
}

public Double getPPANN12() {
return PPANN12;
}

public Double getPPANN2() {
return PPANN2;
}

public Double getPPANN3() {
return PPANN3;
}

public Double getPPANN4() {
return PPANN4;
}

public Double getPPANN5() {
return PPANN5;
}

public Double getPPANN6() {
return PPANN6;
}

public Double getPPANN7() {
return PPANN7;
}

public Double getPPANN8() {
return PPANN8;
}

public Double getPPANN9() {
return PPANN9;
}

public Double getPPANVB() {
return PPANVB;
}

public Double getPPANVB2() {
return PPANVB2;
}

public Double getPPANVB3() {
return PPANVB3;
}

public Double getPPANVI() {
return PPANVI;
}

public Double getPPANVI2() {
return PPANVI2;
}

public Double getPPANVI3() {
return PPANVI3;
}

public Double getPPCASH() {
return PPCASH;
}

public Double getPPCASH2() {
return PPCASH2;
}

public Double getPPCASH3() {
return PPCASH3;
}

public Double getPPCNDRS1() {
return PPCNDRS1;
}

public Double getPPCNDRS17() {
return PPCNDRS17;
}

public Double getPPCNDRS2() {
return PPCNDRS2;
}

public Double getPPCNDRS3() {
return PPCNDRS3;
}

public Double getPPCNDRS9() {
return PPCNDRS9;
}

public Double getPPCNHOW() {
return PPCNHOW;
}

public Double getPPCNHOW3() {
return PPCNHOW3;
}

public Double getPPCNHO___W2() {
return PPCNHO___W2;
}

public Double getPPCNLRS1() {
return PPCNLRS1;
}

public Double getPPCNLRS2() {
return PPCNLRS2;
}

public Double getPPCNLRS3() {
return PPCNLRS3;
}

public Double getPPCNLRS5() {
return PPCNLRS5;
}

public Double getPPCNLRS9() {
return PPCNLRS9;
}

public Double getPPCNPLN() {
return PPCNPLN;
}

public Double getPPCNPLN2() {
return PPCNPLN2;
}

public Double getPPCNPLN3() {
return PPCNPLN3;
}

public Double getPPCONCH() {
return PPCONCH;
}

public Double getPPCONCH2() {
return PPCONCH2;
}

public Double getPPCONCH3() {
return PPCONCH3;
}

public Double getPPDOCS() {
return PPDOCS;
}

public Double getPPDOCS2() {
return PPDOCS2;
}

public Double getPPDOCS3() {
return PPDOCS3;
}

public Double getPPDRINC() {
return PPDRINC;
}

public Double getPPDRINC2() {
return PPDRINC2;
}

public Double getPPDRINC3() {
return PPDRINC3;
}

public Double getPPDRINCB() {
return PPDRINCB;
}

public Double getPPDRINCB2() {
return PPDRINCB2;
}

public Double getPPDRVB() {
return PPDRVB;
}

public Double getPPDRVB2() {
return PPDRVB2;
}

public Double getPPDRVB3() {
return PPDRVB3;
}

public Double getPPDRVI() {
return PPDRVI;
}

public Double getPPDRVI2() {
return PPDRVI2;
}

public Double getPPDRVI3() {
return PPDRVI3;
}

public Double getPPEIRA() {
return PPEIRA;
}

public Double getPPEIRA2() {
return PPEIRA2;
}

public Double getPPEIRA3() {
return PPEIRA3;
}

public Double getPPEIRF() {
return PPEIRF;
}

public Double getPPEIRF2() {
return PPEIRF2;
}

public Double getPPEIRF3() {
return PPEIRF3;
}

public Double getPPEIRH() {
return PPEIRH;
}

public Double getPPEIRH2() {
return PPEIRH2;
}

public Double getPPEIRH3() {
return PPEIRH3;
}

public Double getPPEMAM() {
return PPEMAM;
}

public Double getPPEMAM2() {
return PPEMAM2;
}

public Double getPPEMAM3() {
return PPEMAM3;
}

public Double getPPEMFR() {
return PPEMFR;
}

public Double getPPEMFR2() {
return PPEMFR2;
}

public Double getPPEMFR3() {
return PPEMFR3;
}

public Double getPPEMP() {
return PPEMP;
}

public Double getPPEMP2() {
return PPEMP2;
}

public Double getPPEMP3() {
return PPEMP3;
}

public Double getPPEMPH() {
return PPEMPH;
}

public Double getPPEMPH2() {
return PPEMPH2;
}

public Double getPPEMPH3() {
return PPEMPH3;
}

public Double getPPEMPR() {
return PPEMPR;
}

public Double getPPEMPR2() {
return PPEMPR2;
}

public Double getPPEMPR3() {
return PPEMPR3;
}

public Double getPPEVRG() {
return PPEVRG;
}

public Double getPPEVRG2() {
return PPEVRG2;
}

public Double getPPEVRG3() {
return PPEVRG3;
}

public Double getPPFAAG() {
return PPFAAG;
}

public Double getPPFAAG2() {
return PPFAAG2;
}

public Double getPPFAAG3() {
return PPFAAG3;
}

public Double getPPFAN1() {
return PPFAN1;
}

public Double getPPFAN10() {
return PPFAN10;
}

public Double getPPFAN11() {
return PPFAN11;
}

public Double getPPFAN12() {
return PPFAN12;
}

public Double getPPFAN13() {
return PPFAN13;
}

public Double getPPFAN14() {
return PPFAN14;
}

public Double getPPFAN15() {
return PPFAN15;
}

public Double getPPFAN2() {
return PPFAN2;
}

public Double getPPFAN3() {
return PPFAN3;
}

public Double getPPFAN4() {
return PPFAN4;
}

public Double getPPFAN5() {
return PPFAN5;
}

public Double getPPFAN6() {
return PPFAN6;
}

public Double getPPFAN7() {
return PPFAN7;
}

public Double getPPFAN8() {
return PPFAN8;
}

public Double getPPFAN9() {
return PPFAN9;
}

public Double getPPFAWH1() {
return PPFAWH1;
}

public Double getPPFAWH10() {
return PPFAWH10;
}

public Double getPPFAWH11() {
return PPFAWH11;
}

public Double getPPFAWH12() {
return PPFAWH12;
}

public Double getPPFAWH13() {
return PPFAWH13;
}

public Double getPPFAWH14() {
return PPFAWH14;
}

public Double getPPFAWH15() {
return PPFAWH15;
}

public Double getPPFAWH16() {
return PPFAWH16;
}

public Double getPPFAWH17() {
return PPFAWH17;
}

public Double getPPFAWH18() {
return PPFAWH18;
}

public Double getPPFAWH19() {
return PPFAWH19;
}

public Double getPPFAWH2() {
return PPFAWH2;
}

public Double getPPFAWH20() {
return PPFAWH20;
}

public Double getPPFAWH21() {
return PPFAWH21;
}

public Double getPPFAWH3() {
return PPFAWH3;
}

public Double getPPFAWH4() {
return PPFAWH4;
}

public Double getPPFAWH5() {
return PPFAWH5;
}

public Double getPPFAWH6() {
return PPFAWH6;
}

public Double getPPFAWH7() {
return PPFAWH7;
}

public Double getPPFAWH8() {
return PPFAWH8;
}

public Double getPPFAWH9() {
return PPFAWH9;
}

public Double getPPIRNO() {
return PPIRNO;
}

public Double getPPIRNO2() {
return PPIRNO2;
}

public Double getPPIRNO3() {
return PPIRNO3;
}

public Double getPPIRRA() {
return PPIRRA;
}

public Double getPPIRRA2() {
return PPIRRA2;
}

public Double getPPIRRA3() {
return PPIRRA3;
}

public Double getPPIRRF() {
return PPIRRF;
}

public Double getPPIRRF2() {
return PPIRRF2;
}

public Double getPPIRRF3() {
return PPIRRF3;
}

public Double getPPIRRH() {
return PPIRRH;
}

public Double getPPIRRH2() {
return PPIRRH2;
}

public Double getPPIRRH3() {
return PPIRRH3;
}

public Double getPPIRRY() {
return PPIRRY;
}

public Double getPPIRRY2() {
return PPIRRY2;
}

public Double getPPIRRY3() {
return PPIRRY3;
}

public Double getPPLASY() {
return PPLASY;
}

public Double getPPLASY2() {
return PPLASY2;
}

public Double getPPLASY3() {
return PPLASY3;
}

public Double getPPLMUS() {
return PPLMUS;
}

public Double getPPLMUS2() {
return PPLMUS2;
}

public Double getPPLMUS3() {
return PPLMUS3;
}

public Double getPPLMV() {
return PPLMV;
}

public Double getPPLMV2() {
return PPLMV2;
}

public Double getPPLMV3() {
return PPLMV3;
}

public Double getPPLMVB() {
return PPLMVB;
}

public Double getPPLMVB2() {
return PPLMVB2;
}

public Double getPPLMVB3() {
return PPLMVB3;
}

public Double getPPLSTA() {
return PPLSTA;
}

public Double getPPLSTA2() {
return PPLSTA2;
}

public Double getPPLSTA3() {
return PPLSTA3;
}

public Double getPPLSTP() {
return PPLSTP;
}

public Double getPPLSTP2() {
return PPLSTP2;
}

public Double getPPLSTP3() {
return PPLSTP3;
}

public Double getPPLUM() {
return PPLUM;
}

public Double getPPLUM2() {
return PPLUM2;
}

public Double getPPLUM3() {
return PPLUM3;
}

public Double getPPNINS() {
return PPNINS;
}

public Double getPPNINS2() {
return PPNINS2;
}

public Double getPPNINS3() {
return PPNINS3;
}

public Double getPPORG() {
return PPORG;
}

public Double getPPORG2() {
return PPORG2;
}

public Double getPPORG3() {
return PPORG3;
}

public Double getPPPAY() {
return PPPAY;
}

public Double getPPPAY2() {
return PPPAY2;
}

public Double getPPPAY3() {
return PPPAY3;
}

public Double getPPRGAM() {
return PPRGAM;
}

public Double getPPRGAM2() {
return PPRGAM2;
}

public Double getPPRGAM3() {
return PPRGAM3;
}

public Double getPPRGFG() {
return PPRGFG;
}

public Double getPPRGFG2() {
return PPRGFG2;
}

public Double getPPRGFG3() {
return PPRGFG3;
}

public Double getPPRGFR() {
return PPRGFR;
}

public Double getPPRGFR2() {
return PPRGFR2;
}

public Double getPPRGFR3() {
return PPRGFR3;
}

public Double getPPRGH() {
return PPRGH;
}

public Double getPPRGH2() {
return PPRGH2;
}

public Double getPPRGH3() {
return PPRGH3;
}

public Double getPPRGPE() {
return PPRGPE;
}

public Double getPPRGPE2() {
return PPRGPE2;
}

public Double getPPRGPE3() {
return PPRGPE3;
}

public Double getPPSIPP() {
return PPSIPP;
}

public Double getPPSIPP2() {
return PPSIPP2;
}

public Double getPPSIPP3() {
return PPSIPP3;
}

public Double getPPSTMN() {
return PPSTMN;
}

public Double getPPSTMN2() {
return PPSTMN2;
}

public Double getPPSTMN3() {
return PPSTMN3;
}

public Double getPPSTYR() {
return PPSTYR;
}

public Double getPPSTYR2() {
return PPSTYR2;
}

public Double getPPSTYR3() {
return PPSTYR3;
}

public Double getPPTYP() {
return PPTYP;
}

public Double getPPTYP2() {
return PPTYP2;
}

public Double getPPTYP3() {
return PPTYP3;
}

public Double getPPVAL() {
return PPVAL;
}

public Double getPPVAL2() {
return PPVAL2;
}

public Double getPPVAL2_I() {
return PPVAL2_I;
}

public Double getPPVAL2_IFLAG() {
return PPVAL2_IFLAG;
}

public Double getPPVAL3() {
return PPVAL3;
}

public Double getPPVAL3_I() {
return PPVAL3_I;
}

public Double getPPVAL3_IFLAG() {
return PPVAL3_IFLAG;
}

public Double getPPVALB() {
return PPVALB;
}

public Double getPPVALB2() {
return PPVALB2;
}

public Double getPPVALB3() {
return PPVALB3;
}

public Double getPPVAL_I() {
return PPVAL_I;
}

public Double getPPVAL_IFLAG() {
return PPVAL_IFLAG;
}

public Double getPPYRST() {
return PPYRST;
}

public Double getPPYRST2() {
return PPYRST2;
}

public Double getPPYRST3() {
return PPYRST3;
}

public Double getPPYSTP1() {
return PPYSTP1;
}

public Double getPPYSTP15() {
return PPYSTP15;
}

public Double getPPYSTP2() {
return PPYSTP2;
}

public Double getPPYSTP3() {
return PPYSTP3;
}

public Double getPPYSTP8() {
return PPYSTP8;
}

public Double getPPYSTP9() {
return PPYSTP9;
}

public Double getPRACCU2() {
return PRACCU2;
}

public Double getPRACCU3() {
return PRACCU3;
}

public Double getPRACCU5() {
return PRACCU5;
}

public Double getPRACCU6() {
return PRACCU6;
}

public Double getPREVPENS() {
return PREVPENS;
}

public Double getPRODTS01() {
return PRODTS01;
}

public Double getPRODTS02() {
return PRODTS02;
}

public Double getPRODTS03() {
return PRODTS03;
}

public Double getPRODTS04() {
return PRODTS04;
}

public Double getPRODTS05() {
return PRODTS05;
}

public Double getPRODTS06() {
return PRODTS06;
}

public Double getPRODTS07() {
return PRODTS07;
}

public Double getPRODTS08() {
return PRODTS08;
}

public Double getPRODTS09() {
return PRODTS09;
}

public Double getPRODTS10() {
return PRODTS10;
}

public Double getPRODTS11() {
return PRODTS11;
}

public Double getPRODTS12() {
return PRODTS12;
}

public Double getPRODTS201() {
return PRODTS201;
}

public Double getPRODTS202() {
return PRODTS202;
}

public Double getPRODTS203() {
return PRODTS203;
}

public Double getPRODTS204() {
return PRODTS204;
}

public Double getPRODTS205() {
return PRODTS205;
}

public Double getPRODTS206() {
return PRODTS206;
}

public Double getPRODTS207() {
return PRODTS207;
}

public Double getPRODTS208() {
return PRODTS208;
}

public Double getPRODTS209() {
return PRODTS209;
}

public Double getPRODTS210() {
return PRODTS210;
}

public Double getPROXPERS() {
return PROXPERS;
}

public Double getPROXYNUM() {
return PROXYNUM;
}

public Double getPSPEXPA() {
return PSPEXPA;
}

public Double getPSPEXPA_I() {
return PSPEXPA_I;
}

public Double getPSPEXPA_IFLAG() {
return PSPEXPA_IFLAG;
}

public Double getPSPEXPH() {
return PSPEXPH;
}

public Double getPSPEXPH_I() {
return PSPEXPH_I;
}

public Double getPSPEXPH_IFLAG() {
return PSPEXPH_IFLAG;
}

public Double getPSPLUM() {
return PSPLUM;
}

public Double getPSPLUVAL() {
return PSPLUVAL;
}

public Double getPSPSE() {
return PSPSE;
}

public Double getPSPSE_I() {
return PSPSE_I;
}

public Double getPSPSE_IFLAG() {
return PSPSE_IFLAG;
}

public Double getPSTYPE1() {
return PSTYPE1;
}

public Double getPSTYPE10() {
return PSTYPE10;
}

public Double getPSTYPE11() {
return PSTYPE11;
}

public Double getPSTYPE12() {
return PSTYPE12;
}

public Double getPSTYPE13() {
return PSTYPE13;
}

public Double getPSTYPE14() {
return PSTYPE14;
}

public Double getPSTYPE15() {
return PSTYPE15;
}

public Double getPSTYPE16() {
return PSTYPE16;
}

public Double getPSTYPE17() {
return PSTYPE17;
}

public Double getPSTYPE18() {
return PSTYPE18;
}

public Double getPSTYPE19() {
return PSTYPE19;
}

public Double getPSTYPE2() {
return PSTYPE2;
}

public Double getPSTYPE20() {
return PSTYPE20;
}

public Double getPSTYPE3() {
return PSTYPE3;
}

public Double getPSTYPE4() {
return PSTYPE4;
}

public Double getPSTYPE5() {
return PSTYPE5;
}

public Double getPSTYPE6() {
return PSTYPE6;
}

public Double getPSTYPE7() {
return PSTYPE7;
}

public Double getPSTYPE8() {
return PSTYPE8;
}

public Double getPSTYPE9() {
return PSTYPE9;
}

public Double getPWLUM() {
return PWLUM;
}

public Double getPWLUVAL() {
return PWLUVAL;
}

public Double getR01() {
return R01;
}

public Double getR02() {
return R02;
}

public Double getR03() {
return R03;
}

public Double getR04() {
return R04;
}

public Double getR05() {
return R05;
}

public Double getR06() {
return R06;
}

public Double getR07() {
return R07;
}

public Double getR08() {
return R08;
}

public Double getR09() {
return R09;
}

public Double getR10() {
return R10;
}

public Double getR11() {
return R11;
}

public Double getRNYDAY() {
return RNYDAY;
}

public Double getSAMEJOB1() {
return SAMEJOB1;
}

public Double getSAMEJOB2() {
return SAMEJOB2;
}

public Double getSAMEJOB3() {
return SAMEJOB3;
}

public Double getSAMEJOB4() {
return SAMEJOB4;
}

public Double getSAMEJOB5() {
return SAMEJOB5;
}

public Double getSAMEJOB6() {
return SAMEJOB6;
}

public Double getSAMEMP() {
return SAMEMP;
}

public Double getSAMJOB() {
return SAMJOB;
}

public Double getSEAMT() {
return SEAMT;
}

public Double getSECTOR() {
return SECTOR;
}

public Double getSECTR2() {
return SECTR2;
}

public Double getSICCODE() {
return SICCODE;
}

public Double getSJ12G() {
return SJ12G;
}

public Double getSJ12N() {
return SJ12N;
}

public Double getSJGRS() {
return SJGRS;
}

public Double getSJNET() {
return SJNET;
}

public Double getSJSEG() {
return SJSEG;
}

public Double getSMTPEN() {
return SMTPEN;
}

public Double getSOURC01() {
return SOURC01;
}

public Double getSOURC02() {
return SOURC02;
}

public Double getSOURC03() {
return SOURC03;
}

public Double getSOURC04() {
return SOURC04;
}

public Double getSOURC05() {
return SOURC05;
}

public Double getSOURC06() {
return SOURC06;
}

public Double getSOURC07() {
return SOURC07;
}

public Double getSOURC08() {
return SOURC08;
}

public Double getSOURC09() {
return SOURC09;
}

public Double getSOURC103() {
return SOURC103;
}

public Double getSOURC104() {
return SOURC104;
}

public Double getSOURC105() {
return SOURC105;
}

public Double getSOURC106() {
return SOURC106;
}

public Double getSOURC107() {
return SOURC107;
}

public Double getSOURC108() {
return SOURC108;
}

public Double getSOURC109() {
return SOURC109;
}

public Double getSOURC120() {
return SOURC120;
}

public Double getSOURC121() {
return SOURC121;
}

public Double getSOURC122() {
return SOURC122;
}

public Double getSOURC123() {
return SOURC123;
}

public Double getSOURC124() {
return SOURC124;
}

public Double getSOURC125() {
return SOURC125;
}

public Double getSOURC126() {
return SOURC126;
}

public Double getSOURC137() {
return SOURC137;
}

public Double getSOURC154() {
return SOURC154;
}

public Double getSOURC155() {
return SOURC155;
}

public Double getSOURC156() {
return SOURC156;
}

public Double getSOURC172() {
return SOURC172;
}

public Double getSOURC18() {
return SOURC18;
}

public Double getSOURC19() {
return SOURC19;
}

public Double getSOURC2() {
return SOURC2;
}

public Double getSOURC20() {
return SOURC20;
}

public Double getSOURC21() {
return SOURC21;
}

public Double getSOURC22() {
return SOURC22;
}

public Double getSOURC23() {
return SOURC23;
}

public Double getSOURC24() {
return SOURC24;
}

public Double getSOURC25() {
return SOURC25;
}

public Double getSOURC26() {
return SOURC26;
}

public Double getSOURC2P() {
return SOURC2P;
}

public Double getSOURC2P10() {
return SOURC2P10;
}

public Double getSOURC2P11() {
return SOURC2P11;
}

public Double getSOURC2P2() {
return SOURC2P2;
}

public Double getSOURC2P3() {
return SOURC2P3;
}

public Double getSOURC2P4() {
return SOURC2P4;
}

public Double getSOURC2P5() {
return SOURC2P5;
}

public Double getSOURC2P6() {
return SOURC2P6;
}

public Double getSOURC2P7() {
return SOURC2P7;
}

public Double getSOURC2P8() {
return SOURC2P8;
}

public Double getSOURC2P9() {
return SOURC2P9;
}

public Double getSOURC3() {
return SOURC3;
}

public Double getSOURC35() {
return SOURC35;
}

public Double getSOURC36() {
return SOURC36;
}

public Double getSOURC37() {
return SOURC37;
}

public Double getSOURC38() {
return SOURC38;
}

public Double getSOURC39() {
return SOURC39;
}

public Double getSOURC4() {
return SOURC4;
}

public Double getSOURC40() {
return SOURC40;
}

public Double getSOURC41() {
return SOURC41;
}

public Double getSOURC5() {
return SOURC5;
}

public Double getSOURC52() {
return SOURC52;
}

public Double getSOURC53() {
return SOURC53;
}

public Double getSOURC54() {
return SOURC54;
}

public Double getSOURC55() {
return SOURC55;
}

public Double getSOURC56() {
return SOURC56;
}

public Double getSOURC57() {
return SOURC57;
}

public Double getSOURC58() {
return SOURC58;
}

public Double getSOURC6() {
return SOURC6;
}

public Double getSOURC69() {
return SOURC69;
}

public Double getSOURC7() {
return SOURC7;
}

public Double getSOURC70() {
return SOURC70;
}

public Double getSOURC71() {
return SOURC71;
}

public Double getSOURC72() {
return SOURC72;
}

public Double getSOURC73() {
return SOURC73;
}

public Double getSOURC74() {
return SOURC74;
}

public Double getSOURC75() {
return SOURC75;
}

public Double getSOURC8() {
return SOURC8;
}

public Double getSOURC86() {
return SOURC86;
}

public Double getSOURC87() {
return SOURC87;
}

public Double getSOURC88() {
return SOURC88;
}

public Double getSOURC89() {
return SOURC89;
}

public Double getSOURC9() {
return SOURC9;
}

public Double getSOURC90() {
return SOURC90;
}

public Double getSOURC91() {
return SOURC91;
}

public Double getSOURC92() {
return SOURC92;
}

public Double getSOURCP01() {
return SOURCP01;
}

public Double getSOURCP02() {
return SOURCP02;
}

public Double getSOURCP03() {
return SOURCP03;
}

public Double getSOURCP04() {
return SOURCP04;
}

public Double getSOURCP05() {
return SOURCP05;
}

public Double getSOURCP06() {
return SOURCP06;
}

public Double getSOURCP07() {
return SOURCP07;
}

public Double getSOURCP08() {
return SOURCP08;
}

public Double getSOURCP09() {
return SOURCP09;
}

public Double getSOURCP102() {
return SOURCP102;
}

public Double getSOURCP103() {
return SOURCP103;
}

public Double getSOURCP104() {
return SOURCP104;
}

public Double getSOURCP105() {
return SOURCP105;
}

public Double getSOURCP106() {
return SOURCP106;
}

public Double getSOURCP107() {
return SOURCP107;
}

public Double getSOURCP11() {
return SOURCP11;
}

public Double getSOURCP12() {
return SOURCP12;
}

public Double getSOURCP120() {
return SOURCP120;
}

public Double getSOURCP121() {
return SOURCP121;
}

public Double getSOURCP122() {
return SOURCP122;
}

public Double getSOURCP123() {
return SOURCP123;
}

public Double getSOURCP124() {
return SOURCP124;
}

public Double getSOURCP125() {
return SOURCP125;
}

public Double getSOURCP137() {
return SOURCP137;
}

public Double getSOURCP154() {
return SOURCP154;
}

public Double getSOURCP155() {
return SOURCP155;
}

public Double getSOURCP171() {
return SOURCP171;
}

public Double getSOURCP18() {
return SOURCP18;
}

public Double getSOURCP19() {
return SOURCP19;
}

public Double getSOURCP20() {
return SOURCP20;
}

public Double getSOURCP21() {
return SOURCP21;
}

public Double getSOURCP22() {
return SOURCP22;
}

public Double getSOURCP23() {
return SOURCP23;
}

public Double getSOURCP24() {
return SOURCP24;
}

public Double getSOURCP25() {
return SOURCP25;
}

public Double getSOURCP26() {
return SOURCP26;
}

public Double getSOURCP27() {
return SOURCP27;
}

public Double getSOURCP28() {
return SOURCP28;
}

public Double getSOURCP290() {
return SOURCP290;
}

public Double getSOURCP35() {
return SOURCP35;
}

public Double getSOURCP36() {
return SOURCP36;
}

public Double getSOURCP37() {
return SOURCP37;
}

public Double getSOURCP38() {
return SOURCP38;
}

public Double getSOURCP39() {
return SOURCP39;
}

public Double getSOURCP40() {
return SOURCP40;
}

public Double getSOURCP41() {
return SOURCP41;
}

public Double getSOURCP42() {
return SOURCP42;
}

public Double getSOURCP43() {
return SOURCP43;
}

public Double getSOURCP44() {
return SOURCP44;
}

public Double getSOURCP52() {
return SOURCP52;
}

public Double getSOURCP53() {
return SOURCP53;
}

public Double getSOURCP54() {
return SOURCP54;
}

public Double getSOURCP55() {
return SOURCP55;
}

public Double getSOURCP56() {
return SOURCP56;
}

public Double getSOURCP57() {
return SOURCP57;
}

public Double getSOURCP58() {
return SOURCP58;
}

public Double getSOURCP59() {
return SOURCP59;
}

public Double getSOURCP60() {
return SOURCP60;
}

public Double getSOURCP61() {
return SOURCP61;
}

public Double getSOURCP69() {
return SOURCP69;
}

public Double getSOURCP70() {
return SOURCP70;
}

public Double getSOURCP71() {
return SOURCP71;
}

public Double getSOURCP72() {
return SOURCP72;
}

public Double getSOURCP73() {
return SOURCP73;
}

public Double getSOURCP74() {
return SOURCP74;
}

public Double getSOURCP75() {
return SOURCP75;
}

public Double getSOURCP76() {
return SOURCP76;
}

public Double getSOURCP86() {
return SOURCP86;
}

public Double getSOURCP87() {
return SOURCP87;
}

public Double getSOURCP88() {
return SOURCP88;
}

public Double getSOURCP89() {
return SOURCP89;
}

public Double getSOURCP90() {
return SOURCP90;
}

public Double getSPENDM() {
return SPENDM;
}

public Double getSSFAM1() {
return SSFAM1;
}

public Double getSSNOUNITS() {
return SSNOUNITS;
}

public Double getSTATUS() {
return STATUS;
}

public Double getTACC() {
return TACC;
}

public Double getTACC2() {
return TACC2;
}

public Double getTACC3() {
return TACC3;
}

public Double getTADDVB() {
return TADDVB;
}

public Double getTADDVB2() {
return TADDVB2;
}

public Double getTADDVB3() {
return TADDVB3;
}

public Double getTADDVL() {
return TADDVL;
}

public Double getTADDVL2() {
return TADDVL2;
}

public Double getTADDVL3() {
return TADDVL3;
}

public Double getTBCAP() {
return TBCAP;
}

public Double getTBCAP2() {
return TBCAP2;
}

public Double getTBCAP3() {
return TBCAP3;
}

public Double getTBCAPY() {
return TBCAPY;
}

public Double getTBCAPY2() {
return TBCAPY2;
}

public Double getTBCAPY3() {
return TBCAPY3;
}

public Double getTBCKNO() {
return TBCKNO;
}

public Double getTBCKNO2() {
return TBCKNO2;
}

public Double getTBCKNO3() {
return TBCKNO3;
}

public Double getTBEN1() {
return TBEN1;
}

public Double getTBEN10() {
return TBEN10;
}

public Double getTBEN11() {
return TBEN11;
}

public Double getTBEN12() {
return TBEN12;
}

public Double getTBEN13() {
return TBEN13;
}

public Double getTBEN14() {
return TBEN14;
}

public Double getTBEN15() {
return TBEN15;
}

public Double getTBEN16() {
return TBEN16;
}

public Double getTBEN17() {
return TBEN17;
}

public Double getTBEN18() {
return TBEN18;
}

public Double getTBEN19() {
return TBEN19;
}

public Double getTBEN2() {
return TBEN2;
}

public Double getTBEN20() {
return TBEN20;
}

public Double getTBEN21() {
return TBEN21;
}

public Double getTBEN22() {
return TBEN22;
}

public Double getTBEN23() {
return TBEN23;
}

public Double getTBEN24() {
return TBEN24;
}

public Double getTBEN3() {
return TBEN3;
}

public Double getTBEN4() {
return TBEN4;
}

public Double getTBEN5() {
return TBEN5;
}

public Double getTBEN6() {
return TBEN6;
}

public Double getTBEN7() {
return TBEN7;
}

public Double getTBEN8() {
return TBEN8;
}

public Double getTBEN9() {
return TBEN9;
}

public Double getTBINC() {
return TBINC;
}

public Double getTBINC2() {
return TBINC2;
}

public Double getTBINC3() {
return TBINC3;
}

public Double getTBREC() {
return TBREC;
}

public Double getTBREC2() {
return TBREC2;
}

public Double getTBREC3() {
return TBREC3;
}

public Double getTBRECB() {
return TBRECB;
}

public Double getTBRECB2() {
return TBRECB2;
}

public Double getTBRECB3() {
return TBRECB3;
}

public Double getTBVALB() {
return TBVALB;
}

public Double getTBVALB2() {
return TBVALB2;
}

public Double getTBVALB3() {
return TBVALB3;
}

public Double getTCONT1() {
return TCONT1;
}

public Double getTCONT2() {
return TCONT2;
}

public Double getTDUP() {
return TDUP;
}

public Double getTDUP2() {
return TDUP2;
}

public Double getTDUP3() {
return TDUP3;
}

public Double getTDUPA() {
return TDUPA;
}

public Double getTDUPA2() {
return TDUPA2;
}

public Double getTDUPA3() {
return TDUPA3;
}

public Double getTJNT1() {
return TJNT1;
}

public Double getTJNT2() {
return TJNT2;
}

public Double getTJNT3() {
return TJNT3;
}

public Double getTJNT4() {
return TJNT4;
}

public Double getTJNT5() {
return TJNT5;
}

public Double getTJNT6() {
return TJNT6;
}

public Double getTSNEW() {
return TSNEW;
}

public Double getTSNO() {
return TSNO;
}

public Double getTSNO2() {
return TSNO2;
}

public Double getTSNO3() {
return TSNO3;
}

public Double getTSNUM2() {
return TSNUM2;
}

public Double getTVAL() {
return TVAL;
}

public Double getTVAL2() {
return TVAL2;
}

public Double getTVAL3() {
return TVAL3;
}

public Double getTVALB() {
return TVALB;
}

public Double getTVALB2() {
return TVALB2;
}

public Double getTVALB3() {
return TVALB3;
}

public Double getTWHO1() {
return TWHO1;
}

public Double getTWHO10() {
return TWHO10;
}

public Double getTWHO11() {
return TWHO11;
}

public Double getTWHO12() {
return TWHO12;
}

public Double getTWHO13() {
return TWHO13;
}

public Double getTWHO14() {
return TWHO14;
}

public Double getTWHO15() {
return TWHO15;
}

public Double getTWHO16() {
return TWHO16;
}

public Double getTWHO17() {
return TWHO17;
}

public Double getTWHO18() {
return TWHO18;
}

public Double getTWHO2() {
return TWHO2;
}

public Double getTWHO3() {
return TWHO3;
}

public Double getTWHO4() {
return TWHO4;
}

public Double getTWHO5() {
return TWHO5;
}

public Double getTWHO6() {
return TWHO6;
}

public Double getTWHO7() {
return TWHO7;
}

public Double getTWHO8() {
return TWHO8;
}

public Double getTWHO9() {
return TWHO9;
}

public Double getUBUYLET() {
return UBUYLET;
}

public Double getUBUYLET_I() {
return UBUYLET_I;
}

public Double getUBUYLET_IFLAG() {
return UBUYLET_IFLAG;
}

public Double getUBUYTOL() {
return UBUYTOL;
}

public Double getUBUYTOL2() {
return UBUYTOL2;
}

public Double getUBUYTOL3() {
return UBUYTOL3;
}

public Double getUBUYTOL4() {
return UBUYTOL4;
}

public Double getUBUYTOL5() {
return UBUYTOL5;
}

public Double getUPNO() {
return UPNO;
}

public Double getVALPBLUM1() {
return VALPBLUM1;
}

public Double getVALPBLUM2() {
return VALPBLUM2;
}

public Double getWKBETW() {
return WKBETW;
}

public Double getWKHRS() {
return WKHRS;
}

public Double getWKHRSIR() {
return WKHRSIR;
}

public Double getWPENTYPE() {
return WPENTYPE;
}

public Double getXMARSTA() {
return XMARSTA;
}

public Double getXS_CALWGT() {
return XS_CALWGT;
}

public WIGB_Wave2_PERSON_Record(String line) {
s = line.split("\t");
initCASEW2(s[0]);
initPERSONW2(s[1]);
initPERSONW1(s[2]);
initYEAR(s[3]);
initMONTH(s[4]);
initTYPE(s[5]);
initP_FLAG1(s[6]);
initP_FLAG3(s[7]);
initP_FLAG4(s[8]);
initIOUT1(s[9]);
initLONGIT_CALWGT(s[10]);
initXS_CALWGT(s[11]);
initBUILDDB1(s[12]);
initBUILDDB2(s[13]);
initBUILDDB3(s[14]);
initBUILDDEBT1(s[15]);
initBUILDDEBT1_I(s[16]);
initBUILDDEBT1_IFLAG(s[17]);
initBUILDDEBT2(s[18]);
initBUILDDEBT2_I(s[19]);
initBUILDDEBT2_IFLAG(s[20]);
initBUILDDEBT3(s[21]);
initBUILDDEBT3_I(s[22]);
initBUILDDEBT3_IFLAG(s[23]);
initBUILDVAL1(s[24]);
initBUILDVAL1_I(s[25]);
initBUILDVAL1_IFLAG(s[26]);
initBUILDVAL2(s[27]);
initBUILDVAL2_I(s[28]);
initBUILDVAL2_IFLAG(s[29]);
initBUILDVAL3(s[30]);
initBUILDVAL3_I(s[31]);
initBUILDVAL3_IFLAG(s[32]);
initBUILDVB1(s[33]);
initBUILDVB2(s[34]);
initBUILDVB3(s[35]);
initBUYLDB1(s[36]);
initBUYLDB2(s[37]);
initBUYLDB3(s[38]);
initBUYLDEBT1(s[39]);
initBUYLDEBT1_I(s[40]);
initBUYLDEBT1_IFLAG(s[41]);
initBUYLDEBT2(s[42]);
initBUYLDEBT2_I(s[43]);
initBUYLDEBT2_IFLAG(s[44]);
initBUYLDEBT3(s[45]);
initBUYLDEBT3_I(s[46]);
initBUYLDEBT3_IFLAG(s[47]);
initBUYLGDST(s[48]);
initBUYLGDVAL1(s[49]);
initBUYLGDVAL2(s[50]);
initBUYLGDVAL3(s[51]);
initBUYLGDVB1(s[52]);
initBUYLGDVB1_I(s[53]);
initBUYLGDVB1_IFLAG(s[54]);
initBUYLGDVB2(s[55]);
initBUYLGDVB2_I(s[56]);
initBUYLGDVB2_IFLAG(s[57]);
initBUYLGDVB3(s[58]);
initBUYLGDVB3_I(s[59]);
initBUYLGDVB3_IFLAG(s[60]);
initBUYLVAL1(s[61]);
initBUYLVAL1_I(s[62]);
initBUYLVAL1_IFLAG(s[63]);
initBUYLVAL2(s[64]);
initBUYLVAL2_I(s[65]);
initBUYLVAL2_IFLAG(s[66]);
initBUYLVAL3(s[67]);
initBUYLVAL3_I(s[68]);
initBUYLVAL3_IFLAG(s[69]);
initBUYLVB1(s[70]);
initBUYLVB2(s[71]);
initBUYLVB3(s[72]);
initHOUSEGDVAL1(s[73]);
initHOUSEGDVAL2(s[74]);
initHOUSEGDVAL3(s[75]);
initHOUSEGDVB1(s[76]);
initHOUSEGDVB1_I(s[77]);
initHOUSEGDVB1_IFLAG(s[78]);
initHOUSEGDVB2(s[79]);
initHOUSEGDVB2_I(s[80]);
initHOUSEGDVB2_IFLAG(s[81]);
initHOUSEGDVB3(s[82]);
initHOUSEGDVB3_I(s[83]);
initHOUSEGDVB3_IFLAG(s[84]);
initHOUSGDST(s[85]);
initHSEDB1(s[86]);
initHSEDB2(s[87]);
initHSEDB3(s[88]);
initHSEDEBT1(s[89]);
initHSEDEBT1_I(s[90]);
initHSEDEBT1_IFLAG(s[91]);
initHSEDEBT2(s[92]);
initHSEDEBT2_I(s[93]);
initHSEDEBT2_IFLAG(s[94]);
initHSEDEBT3(s[95]);
initHSEDEBT3_I(s[96]);
initHSEDEBT3_IFLAG(s[97]);
initHSEVAL1(s[98]);
initHSEVAL1_I(s[99]);
initHSEVAL1_IFLAG(s[100]);
initHSEVAL2(s[101]);
initHSEVAL2_I(s[102]);
initHSEVAL2_IFLAG(s[103]);
initHSEVAL3(s[104]);
initHSEVAL3_I(s[105]);
initHSEVAL3_IFLAG(s[106]);
initHSEVB1(s[107]);
initHSEVB2(s[108]);
initHSEVB3(s[109]);
initLANDOSDB1(s[110]);
initLANDOSDB2(s[111]);
initLANDOSDB3(s[112]);
initLANDOSDEBT1(s[113]);
initLANDOSDEBT1_I(s[114]);
initLANDOSDEBT1_IFLAG(s[115]);
initLANDOSDEBT2(s[116]);
initLANDOSDEBT2_I(s[117]);
initLANDOSDEBT2_IFLAG(s[118]);
initLANDOSDEBT3(s[119]);
initLANDOSDEBT3_I(s[120]);
initLANDOSDEBT3_IFLAG(s[121]);
initLANDOSVAL1(s[122]);
initLANDOSVAL1_I(s[123]);
initLANDOSVAL1_IFLAG(s[124]);
initLANDOSVAL2(s[125]);
initLANDOSVAL2_I(s[126]);
initLANDOSVAL2_IFLAG(s[127]);
initLANDOSVAL3(s[128]);
initLANDOSVAL3_I(s[129]);
initLANDOSVAL3_IFLAG(s[130]);
initLANDOSVB1(s[131]);
initLANDOSVB2(s[132]);
initLANDOSVB3(s[133]);
initLANDUKDB1(s[134]);
initLANDUKDB2(s[135]);
initLANDUKDB3(s[136]);
initLANDUKDEBT1(s[137]);
initLANDUKDEBT1_I(s[138]);
initLANDUKDEBT1_IFLAG(s[139]);
initLANDUKDEBT2(s[140]);
initLANDUKDEBT2_I(s[141]);
initLANDUKDEBT2_IFLAG(s[142]);
initLANDUKDEBT3(s[143]);
initLANDUKDEBT3_I(s[144]);
initLANDUKDEBT3_IFLAG(s[145]);
initLANDUKVAL1(s[146]);
initLANDUKVAL1_I(s[147]);
initLANDUKVAL1_IFLAG(s[148]);
initLANDUKVAL2(s[149]);
initLANDUKVAL2_I(s[150]);
initLANDUKVAL2_IFLAG(s[151]);
initLANDUKVAL3(s[152]);
initLANDUKVAL3_I(s[153]);
initLANDUKVAL3_IFLAG(s[154]);
initLANDUKVB1(s[155]);
initLANDUKVB2(s[156]);
initLANDUKVB3(s[157]);
initOPROPDB1(s[158]);
initOPROPDB2(s[159]);
initOPROPDB3(s[160]);
initOPROPDEBT1(s[161]);
initOPROPDEBT1_I(s[162]);
initOPROPDEBT1_IFLAG(s[163]);
initOPROPDEBT2(s[164]);
initOPROPDEBT2_I(s[165]);
initOPROPDEBT2_IFLAG(s[166]);
initOPROPDEBT3(s[167]);
initOPROPDEBT3_I(s[168]);
initOPROPDEBT3_IFLAG(s[169]);
initOPROPVAL1(s[170]);
initOPROPVAL1_I(s[171]);
initOPROPVAL1_IFLAG(s[172]);
initOPROPVAL2(s[173]);
initOPROPVAL2_I(s[174]);
initOPROPVAL2_IFLAG(s[175]);
initOPROPVAL3(s[176]);
initOPROPVAL3_I(s[177]);
initOPROPVAL3_IFLAG(s[178]);
initOPROPVB1(s[179]);
initOPROPVB2(s[180]);
initOPROPVB3(s[181]);
initUBUYLET(s[182]);
initUBUYLET_I(s[183]);
initUBUYLET_IFLAG(s[184]);
initUBUYTOL(s[185]);
initUBUYTOL2(s[186]);
initUBUYTOL3(s[187]);
initUBUYTOL4(s[188]);
initUBUYTOL5(s[189]);
initUDEBT(s[190]);
initUDEBT2(s[191]);
initUDEBT3(s[192]);
initUDEBT4(s[193]);
initUDEBT5(s[194]);
initUDEBTB(s[195]);
initUDEBTB2(s[196]);
initUDEBTB3(s[197]);
initUDEBTB4(s[198]);
initUDEBTB5(s[199]);
initUGDVB(s[200]);
initUGDVB2(s[201]);
initUGDVB3(s[202]);
initUGDVB4(s[203]);
initUGDVB5(s[204]);
initULAND(s[205]);
initULAND2(s[206]);
initULAND3(s[207]);
initULAND4(s[208]);
initULAND5(s[209]);
initUNMTYP(s[210]);
initUNUMBD(s[211]);
initUNUMBD_I(s[212]);
initUNUMBD_IFLAG(s[213]);
initUNUMHS(s[214]);
initUNUMHS_I(s[215]);
initUNUMHS_IFLAG(s[216]);
initUNUMLA(s[217]);
initUNUMLA_I(s[218]);
initUNUMLA_IFLAG(s[219]);
initUNUMOV(s[220]);
initUNUMOV_I(s[221]);
initUNUMOV_IFLAG(s[222]);
initUNUMRE(s[223]);
initUNUMRE_I(s[224]);
initUNUMRE_IFLAG(s[225]);
initUPNO(s[226]);
initUPROP1(s[227]);
initUPROP1_I(s[228]);
initUPROP1_IFLAG(s[229]);
initUPROP2(s[230]);
initUPROP2_I(s[231]);
initUPROP2_IFLAG(s[232]);
initUPROP3(s[233]);
initUPROP3_I(s[234]);
initUPROP3_IFLAG(s[235]);
initUPROP4(s[236]);
initUPROP4_I(s[237]);
initUPROP4_IFLAG(s[238]);
initUPRSH1(s[239]);
initUPRSH2(s[240]);
initUPRSH3(s[241]);
initUPRSH4(s[242]);
initUPRSH5(s[243]);
initUPRSH6(s[244]);
initUPRSH7(s[245]);
initUPRSH8(s[246]);
initUPRSH9(s[247]);
initUPRSH10(s[248]);
initUVAL(s[249]);
initUVAL2(s[250]);
initUVAL3(s[251]);
initUVAL4(s[252]);
initUVAL5(s[253]);
initUVALB(s[254]);
initUVALB2(s[255]);
initUVALB3(s[256]);
initUVALB4(s[257]);
initUVALB5(s[258]);
initCACTF(s[259]);
initCACTF_I(s[260]);
initCACTF_IFLAG(s[261]);
initCACTV(s[262]);
initCACTV_I(s[263]);
initCACTV_IFLAG(s[264]);
initCASAV(s[265]);
initCASAV_I(s[266]);
initCASAV_IFLAG(s[267]);
initCASVB(s[268]);
initCASVV(s[269]);
initCASVV_I(s[270]);
initCASVV_IFLAG(s[271]);
initCHECKCC(s[272]);
initCHECKDL(s[273]);
initCHECKHB(s[274]);
initCHECKHP(s[275]);
initCHECKMO(s[276]);
initCHECKNDL(s[277]);
initCHECKST(s[278]);
initCOMMIT1(s[279]);
initCOMMIT2(s[280]);
initCOMMIT3(s[281]);
initCOMMIT4(s[282]);
initCOMMIT5(s[283]);
initCURRAC(s[284]);
initDADVACT1(s[285]);
initDADVACT2(s[286]);
initDADVACT3(s[287]);
initDADVMTH(s[288]);
initDBURDA(s[289]);
initDBURDH(s[290]);
initDBURDW1(s[291]);
initDBURD(s[292]);
initDBURD___W2(s[293]);
initDBURDW3(s[294]);
initDBURDW4(s[295]);
initDBURDW5(s[296]);
initDBURDW6(s[297]);
initDBURDW7(s[298]);
initDC12BEH(s[299]);
initDC12BEH2(s[300]);
initDC12BEH3(s[301]);
initDC12BEH4(s[302]);
initDC12BEH5(s[303]);
initDC12OWE(s[304]);
initDC12OWE2(s[305]);
initDC12OWE3(s[306]);
initDC12OWE4(s[307]);
initDC12OWE5(s[308]);
initDCAMC(s[309]);
initDCAMC_I(s[310]);
initDCAMC_IFLAG(s[311]);
initDCAMC2(s[312]);
initDCAMC2_I(s[313]);
initDCAMC2_IFLAG(s[314]);
initDCAMC3(s[315]);
initDCAMC3_I(s[316]);
initDCAMC3_IFLAG(s[317]);
initDCAMC4(s[318]);
initDCAMC4_I(s[319]);
initDCAMC4_IFLAG(s[320]);
initDCAMC5(s[321]);
initDCAMC5_I(s[322]);
initDCAMC5_IFLAG(s[323]);
initDCAMD(s[324]);
initDCAMD_I(s[325]);
initDCAMD_IFLAG(s[326]);
initDCAMD2(s[327]);
initDCAMD2_I(s[328]);
initDCAMD2_IFLAG(s[329]);
initDCAMD3(s[330]);
initDCAMD3_I(s[331]);
initDCAMD3_IFLAG(s[332]);
initDCAMD4(s[333]);
initDCAMD4_I(s[334]);
initDCAMD4_IFLAG(s[335]);
initDCAMD5(s[336]);
initDCAMD5_I(s[337]);
initDCAMD5_IFLAG(s[338]);
initDCAMOS(s[339]);
initDCAMOS2(s[340]);
initDCAMOS3(s[341]);
initDCAMOS4(s[342]);
initDCAMOS5(s[343]);
initDCAMP(s[344]);
initDCAMP_I(s[345]);
initDCAMP_IFLAG(s[346]);
initDCAMP2(s[347]);
initDCAMP2_I(s[348]);
initDCAMP2_IFLAG(s[349]);
initDCAMP3(s[350]);
initDCAMP3_I(s[351]);
initDCAMP3_IFLAG(s[352]);
initDCAMP4(s[353]);
initDCAMP4_I(s[354]);
initDCAMP4_IFLAG(s[355]);
initDCAMP5(s[356]);
initDCAMP5_I(s[357]);
initDCAMP5_IFLAG(s[358]);
initDCANU(s[359]);
initDCANU_I(s[360]);
initDCANU_IFLAG(s[361]);
initDCANY(s[362]);
initDCANY_I(s[363]);
initDCANY_IFLAG(s[364]);
initDCCINTR(s[365]);
initDCCOS(s[366]);
initDCCOS_I(s[367]);
initDCCOS_IFLAG(s[368]);
initDCCOS2(s[369]);
initDCCOS2_I(s[370]);
initDCCOS2_IFLAG(s[371]);
initDCCOS3(s[372]);
initDCCOS3_I(s[373]);
initDCCOS3_IFLAG(s[374]);
initDCCOS4(s[375]);
initDCCOS4_I(s[376]);
initDCCOS4_IFLAG(s[377]);
initDCCOS5(s[378]);
initDCCOS5_I(s[379]);
initDCCOS5_IFLAG(s[380]);
initDCCSP(s[381]);
initDCCSP_I(s[382]);
initDCCSP_IFLAG(s[383]);
initDCCSP2(s[384]);
initDCCSP2_I(s[385]);
initDCCSP2_IFLAG(s[386]);
initDCCSP3(s[387]);
initDCCSP3_I(s[388]);
initDCCSP3_IFLAG(s[389]);
initDCCSP4(s[390]);
initDCCSP4_I(s[391]);
initDCCSP4_IFLAG(s[392]);
initDCCSP5(s[393]);
initDCCSP5_I(s[394]);
initDCCSP5_IFLAG(s[395]);
initDCESB(s[396]);
initDCESB2(s[397]);
initDCESB3(s[398]);
initDCESB4(s[399]);
initDCESB5(s[400]);
initDCINZ(s[401]);
initDCINZ2(s[402]);
initDCINZ3(s[403]);
initDCINZ4(s[404]);
initDCINZ5(s[405]);
initDCNAM(s[406]);
initDCNAM_I(s[407]);
initDCNAM_IFLAG(s[408]);
initDCNAM2(s[409]);
initDCNAM2_I(s[410]);
initDCNAM2_IFLAG(s[411]);
initDCNAM3(s[412]);
initDCNAM3_I(s[413]);
initDCNAM3_IFLAG(s[414]);
initDCNAM4(s[415]);
initDCNAM4_I(s[416]);
initDCNAM4_IFLAG(s[417]);
initDCNAM5(s[418]);
initDCNAM5_I(s[419]);
initDCNAM5_IFLAG(s[420]);
initDCNUM2(s[421]);
initDCNUM2_I(s[422]);
initDCNUM2_IFLAG(s[423]);
initDCNUM(s[424]);
initDCNUM_I(s[425]);
initDCNUM_IFLAG(s[426]);
initDCOINV(s[427]);
initDCOINV_I(s[428]);
initDCOINV_IFLAG(s[429]);
initDCOINV2(s[430]);
initDCOINV2_I(s[431]);
initDCOINV2_IFLAG(s[432]);
initDCOINV3(s[433]);
initDCOINV4(s[434]);
initDCOINVB(s[435]);
initDCOINVB2(s[436]);
initDCOINVB3(s[437]);
initDCOINVB4(s[438]);
initDCONM10(s[439]);
initDCONM10_I(s[440]);
initDCONM10_IFLAG(s[441]);
initDCONM1(s[442]);
initDCONM1_I(s[443]);
initDCONM1_IFLAG(s[444]);
initDCONM2(s[445]);
initDCONM2_I(s[446]);
initDCONM2_IFLAG(s[447]);
initDCONM3(s[448]);
initDCONM3_I(s[449]);
initDCONM3_IFLAG(s[450]);
initDCONM4(s[451]);
initDCONM4_I(s[452]);
initDCONM4_IFLAG(s[453]);
initDCONM5(s[454]);
initDCONM5_I(s[455]);
initDCONM5_IFLAG(s[456]);
initDCONM6(s[457]);
initDCONM6_I(s[458]);
initDCONM6_IFLAG(s[459]);
initDCONM7(s[460]);
initDCONM7_I(s[461]);
initDCONM7_IFLAG(s[462]);
initDCONM8(s[463]);
initDCONM8_I(s[464]);
initDCONM8_IFLAG(s[465]);
initDCONM9(s[466]);
initDCONM9_I(s[467]);
initDCONM9_IFLAG(s[468]);
initDCOSHV(s[469]);
initDCOSHV_I(s[470]);
initDCOSHV_IFLAG(s[471]);
initDCOSHV2(s[472]);
initDCOSHV2_I(s[473]);
initDCOSHV2_IFLAG(s[474]);
initDCOSHV3(s[475]);
initDCOSHV4(s[476]);
initDCOSHV5(s[477]);
initDCOSHV6(s[478]);
initDCOSHV7(s[479]);
initDCOSHV8(s[480]);
initDCOSHV9(s[481]);
initDCOSHV10(s[482]);
initDCOSHVB(s[483]);
initDCOSHVB2(s[484]);
initDCOSHVB3(s[485]);
initDCPER(s[486]);
initDCPER2(s[487]);
initDCPER3(s[488]);
initDCPER4(s[489]);
initDCPER5(s[490]);
initDCREC(s[491]);
initDCREC_I(s[492]);
initDCREC_IFLAG(s[493]);
initDCREC2(s[494]);
initDCREC2_I(s[495]);
initDCREC2_IFLAG(s[496]);
initDCREC3(s[497]);
initDCREC3_I(s[498]);
initDCREC3_IFLAG(s[499]);
initDCREC4(s[500]);
initDCREC4_I(s[501]);
initDCREC4_IFLAG(s[502]);
initDCREC5(s[503]);
initDCREC5_I(s[504]);
initDCREC5_IFLAG(s[505]);
initDCRSP(s[506]);
initDCRSP_I(s[507]);
initDCRSP_IFLAG(s[508]);
initDCRSP2(s[509]);
initDCRSP2_I(s[510]);
initDCRSP2_IFLAG(s[511]);
initDCRSP3(s[512]);
initDCRSP3_I(s[513]);
initDCRSP3_IFLAG(s[514]);
initDCRSP4(s[515]);
initDCRSP4_I(s[516]);
initDCRSP4_IFLAG(s[517]);
initDCRSP5(s[518]);
initDCRSP5_I(s[519]);
initDCRSP5_IFLAG(s[520]);
initDHBAMT01(s[521]);
initDHBAMT01_I(s[522]);
initDHBAMT01_IFLAG(s[523]);
initDHBAMT02(s[524]);
initDHBAMT02_I(s[525]);
initDHBAMT02_IFLAG(s[526]);
initDHBAMT03(s[527]);
initDHBAMT03_I(s[528]);
initDHBAMT03_IFLAG(s[529]);
initDHBAMT04(s[530]);
initDHBAMT04_I(s[531]);
initDHBAMT04_IFLAG(s[532]);
initDHBAMT05(s[533]);
initDHBAMT05_I(s[534]);
initDHBAMT05_IFLAG(s[535]);
initDHBAMT06(s[536]);
initDHBAMT06_I(s[537]);
initDHBAMT06_IFLAG(s[538]);
initDHBAMT07(s[539]);
initDHBAMT07_I(s[540]);
initDHBAMT07_IFLAG(s[541]);
initDHBAMT08(s[542]);
initDHBAMT08_I(s[543]);
initDHBAMT08_IFLAG(s[544]);
initDHBAMT09(s[545]);
initDHBAMT09_I(s[546]);
initDHBAMT09_IFLAG(s[547]);
initDHBAMT10(s[548]);
initDHBAMT10_I(s[549]);
initDHBAMT10_IFLAG(s[550]);
initDHBAMT11(s[551]);
initDHBAMT11_I(s[552]);
initDHBAMT11_IFLAG(s[553]);
initDHBANY01(s[554]);
initDHBANY01_I(s[555]);
initDHBANY01_IFLAG(s[556]);
initDHBANY02(s[557]);
initDHBANY02_I(s[558]);
initDHBANY02_IFLAG(s[559]);
initDHBANY03(s[560]);
initDHBANY03_I(s[561]);
initDHBANY03_IFLAG(s[562]);
initDHBANY04(s[563]);
initDHBANY04_I(s[564]);
initDHBANY04_IFLAG(s[565]);
initDHBANY05(s[566]);
initDHBANY05_I(s[567]);
initDHBANY05_IFLAG(s[568]);
initDHBANY06(s[569]);
initDHBANY06_I(s[570]);
initDHBANY06_IFLAG(s[571]);
initDHBANY07(s[572]);
initDHBANY07_I(s[573]);
initDHBANY07_IFLAG(s[574]);
initDHBANY08(s[575]);
initDHBANY08_I(s[576]);
initDHBANY08_IFLAG(s[577]);
initDHBANY09(s[578]);
initDHBANY09_I(s[579]);
initDHBANY09_IFLAG(s[580]);
initDHBANY10(s[581]);
initDHBANY10_I(s[582]);
initDHBANY10_IFLAG(s[583]);
initDHBANY11(s[584]);
initDHBANY11_I(s[585]);
initDHBANY11_IFLAG(s[586]);
initDHBEST01(s[587]);
initDHBEST02(s[588]);
initDHBEST03(s[589]);
initDHBEST04(s[590]);
initDHBEST05(s[591]);
initDHBEST06(s[592]);
initDHBEST07(s[593]);
initDHBEST08(s[594]);
initDHBEST09(s[595]);
initDHBEST10(s[596]);
initDHBEST11(s[597]);
initDHBFIX(s[598]);
initDHPANY1(s[599]);
initDHPANY1_I(s[600]);
initDHPANY1_IFLAG(s[601]);
initDHPANY2(s[602]);
initDHPANY2_I(s[603]);
initDHPANY2_IFLAG(s[604]);
initDHPANY3(s[605]);
initDHPANY3_I(s[606]);
initDHPANY3_IFLAG(s[607]);
initDHPBEH(s[608]);
initDHPBEH_I(s[609]);
initDHPBEH_IFLAG(s[610]);
initDHPBEH2(s[611]);
initDHPBEH2_I(s[612]);
initDHPBEH2_IFLAG(s[613]);
initDHPBEH3(s[614]);
initDHPBEH3_I(s[615]);
initDHPBEH3_IFLAG(s[616]);
initDHPBEH4(s[617]);
initDHPBEH4_I(s[618]);
initDHPBEH4_IFLAG(s[619]);
initDHPBEH5(s[620]);
initDHPBEH5_I(s[621]);
initDHPBEH5_IFLAG(s[622]);
initDHPEST(s[623]);
initDHPEST2(s[624]);
initDHPEST3(s[625]);
initDHPEST4(s[626]);
initDHPEST5(s[627]);
initDHPINS(s[628]);
initDHPINS_I(s[629]);
initDHPINS_IFLAG(s[630]);
initDHPINS2(s[631]);
initDHPINS2_I(s[632]);
initDHPINS2_IFLAG(s[633]);
initDHPINS3(s[634]);
initDHPINS3_I(s[635]);
initDHPINS3_IFLAG(s[636]);
initDHPINS4(s[637]);
initDHPINS4_I(s[638]);
initDHPINS4_IFLAG(s[639]);
initDHPINS5(s[640]);
initDHPINS5_I(s[641]);
initDHPINS5_IFLAG(s[642]);
initDHPINT(s[643]);
initDHPINT2(s[644]);
initDHPINT3(s[645]);
initDHPINT4(s[646]);
initDHPINT5(s[647]);
initDHPNUM(s[648]);
initDHPNUM_I(s[649]);
initDHPNUM_IFLAG(s[650]);
initDHPOFT(s[651]);
initDHPOFT_I(s[652]);
initDHPOFT_IFLAG(s[653]);
initDHPOFT2(s[654]);
initDHPOFT2_I(s[655]);
initDHPOFT2_IFLAG(s[656]);
initDHPOFT3(s[657]);
initDHPOFT3_I(s[658]);
initDHPOFT3_IFLAG(s[659]);
initDHPOFT4(s[660]);
initDHPOFT4_I(s[661]);
initDHPOFT4_IFLAG(s[662]);
initDHPOFT5(s[663]);
initDHPOFT5_I(s[664]);
initDHPOFT5_IFLAG(s[665]);
initDHPOWE(s[666]);
initDHPOWE_I(s[667]);
initDHPOWE_IFLAG(s[668]);
initDHPOWE2(s[669]);
initDHPOWE2_I(s[670]);
initDHPOWE2_IFLAG(s[671]);
initDHPOWE3(s[672]);
initDHPOWE3_I(s[673]);
initDHPOWE3_IFLAG(s[674]);
initDHPOWE4(s[675]);
initDHPOWE4_I(s[676]);
initDHPOWE4_IFLAG(s[677]);
initDHPOWE5(s[678]);
initDHPOWE5_I(s[679]);
initDHPOWE5_IFLAG(s[680]);
initDHPWEST(s[681]);
initDHPWEST2(s[682]);
initDHPWEST3(s[683]);
initDHPWEST4(s[684]);
initDHPWEST5(s[685]);
initDHPWHNM(s[686]);
initDHPWHNM_I(s[687]);
initDHPWHNM_IFLAG(s[688]);
initDHPWHNM2(s[689]);
initDHPWHNM2_I(s[690]);
initDHPWHNM2_IFLAG(s[691]);
initDHPWHNM3(s[692]);
initDHPWHNM3_I(s[693]);
initDHPWHNM3_IFLAG(s[694]);
initDHPWHNM4(s[695]);
initDHPWHNM4_I(s[696]);
initDHPWHNM4_IFLAG(s[697]);
initDHPWHNM5(s[698]);
initDHPWHNM5_I(s[699]);
initDHPWHNM5_IFLAG(s[700]);
initDHPWHNY(s[701]);
initDHPWHNY_I(s[702]);
initDHPWHNY_IFLAG(s[703]);
initDHPWHNY2(s[704]);
initDHPWHNY2_I(s[705]);
initDHPWHNY2_IFLAG(s[706]);
initDHPWHNY3(s[707]);
initDHPWHNY3_I(s[708]);
initDHPWHNY3_IFLAG(s[709]);
initDHPWHNY4(s[710]);
initDHPWHNY4_I(s[711]);
initDHPWHNY4_IFLAG(s[712]);
initDHPWHNY5(s[713]);
initDHPWHNY5_I(s[714]);
initDHPWHNY5_IFLAG(s[715]);
initDLANY(s[716]);
initDLANY_I(s[717]);
initDLANY_IFLAG(s[718]);
initDLBEH(s[719]);
initDLBEH_I(s[720]);
initDLBEH_IFLAG(s[721]);
initDLBEH2(s[722]);
initDLBEH2_I(s[723]);
initDLBEH2_IFLAG(s[724]);
initDLBEH3(s[725]);
initDLBEH3_I(s[726]);
initDLBEH3_IFLAG(s[727]);
initDLBEH4(s[728]);
initDLBEH4_I(s[729]);
initDLBEH4_IFLAG(s[730]);
initDLBEH5(s[731]);
initDLBEH5_I(s[732]);
initDLBEH5_IFLAG(s[733]);
initDLEST(s[734]);
initDLEST2(s[735]);
initDLEST3(s[736]);
initDLEST4(s[737]);
initDLIND(s[738]);
initDLINS(s[739]);
initDLINS_I(s[740]);
initDLINS_IFLAG(s[741]);
initDLINS2(s[742]);
initDLINS2_I(s[743]);
initDLINS2_IFLAG(s[744]);
initDLINS3(s[745]);
initDLINS3_I(s[746]);
initDLINS3_IFLAG(s[747]);
initDLINS4(s[748]);
initDLINS4_I(s[749]);
initDLINS4_IFLAG(s[750]);
initDLINS5(s[751]);
initDLINS5_I(s[752]);
initDLINS5_IFLAG(s[753]);
initDLINT2(s[754]);
initDLINT3(s[755]);
initDLINT4(s[756]);
initDLINT5(s[757]);
initDLINT(s[758]);
initDLNNM(s[759]);
initDLNNM_I(s[760]);
initDLNNM_IFLAG(s[761]);
initDLNUM(s[762]);
initDLNUM_I(s[763]);
initDLNUM_IFLAG(s[764]);
initDLOFT(s[765]);
initDLOFT_I(s[766]);
initDLOFT_IFLAG(s[767]);
initDLOFT2(s[768]);
initDLOFT2_I(s[769]);
initDLOFT2_IFLAG(s[770]);
initDLOFT3(s[771]);
initDLOFT3_I(s[772]);
initDLOFT3_IFLAG(s[773]);
initDLOFT4(s[774]);
initDLOFT4_I(s[775]);
initDLOFT4_IFLAG(s[776]);
initDLOFT5(s[777]);
initDLOFT5_I(s[778]);
initDLOFT5_IFLAG(s[779]);
initDLOLD1(s[780]);
initDLOLD2(s[781]);
initDLOLD3(s[782]);
initDLOLD4(s[783]);
initDLOLD5(s[784]);
initDLONM(s[785]);
initDLOWE(s[786]);
initDLOWE_I(s[787]);
initDLOWE_IFLAG(s[788]);
initDLOWE2(s[789]);
initDLOWE2_I(s[790]);
initDLOWE2_IFLAG(s[791]);
initDLOWE3(s[792]);
initDLOWE3_I(s[793]);
initDLOWE3_IFLAG(s[794]);
initDLOWE4(s[795]);
initDLOWE4_I(s[796]);
initDLOWE4_IFLAG(s[797]);
initDLOWE5(s[798]);
initDLOWE5_I(s[799]);
initDLOWE5_IFLAG(s[800]);
initDLSEC(s[801]);
initDLSEC2(s[802]);
initDLSEC3(s[803]);
initDLSEC4(s[804]);
initDLSEC5(s[805]);
initDLTYPE(s[806]);
initDLTYPE_I(s[807]);
initDLTYPE_IFLAG(s[808]);
initDLTYPE2(s[809]);
initDLTYPE2_I(s[810]);
initDLTYPE2_IFLAG(s[811]);
initDLTYPE3(s[812]);
initDLTYPE3_I(s[813]);
initDLTYPE3_IFLAG(s[814]);
initDLTYPE4(s[815]);
initDLTYPE4_I(s[816]);
initDLTYPE4_IFLAG(s[817]);
initDLTYPE5(s[818]);
initDLTYPE5_I(s[819]);
initDLTYPE5_IFLAG(s[820]);
initDLWEST(s[821]);
initDLWEST2(s[822]);
initDLWEST3(s[823]);
initDLWEST4(s[824]);
initDLWEST5(s[825]);
initDLWHNM(s[826]);
initDLWHNM_I(s[827]);
initDLWHNM_IFLAG(s[828]);
initDLWHNM2(s[829]);
initDLWHNM2_I(s[830]);
initDLWHNM2_IFLAG(s[831]);
initDLWHNM3(s[832]);
initDLWHNM3_I(s[833]);
initDLWHNM3_IFLAG(s[834]);
initDLWHNM4(s[835]);
initDLWHNM4_I(s[836]);
initDLWHNM4_IFLAG(s[837]);
initDLWHNM5(s[838]);
initDLWHNM5_I(s[839]);
initDLWHNM5_IFLAG(s[840]);
initDLWHNY(s[841]);
initDLWHNY_I(s[842]);
initDLWHNY_IFLAG(s[843]);
initDLWHNY2(s[844]);
initDLWHNY2_I(s[845]);
initDLWHNY2_IFLAG(s[846]);
initDLWHNY3(s[847]);
initDLWHNY3_I(s[848]);
initDLWHNY3_IFLAG(s[849]);
initDLWHNY4(s[850]);
initDLWHNY4_I(s[851]);
initDLWHNY4_IFLAG(s[852]);
initDLWHNY5(s[853]);
initDLWHNY5_I(s[854]);
initDLWHNY5_IFLAG(s[855]);
initDLWHY1(s[856]);
initDLWHY2(s[857]);
initDLWHY30(s[858]);
initDLWHY31(s[859]);
initDLWHY32(s[860]);
initDLWHY33(s[861]);
initDLWHY34(s[862]);
initDLWHY35(s[863]);
initDLWHY3(s[864]);
initDLWHY4(s[865]);
initDLWHY5(s[866]);
initDLWHY6(s[867]);
initDLWHY7(s[868]);
initDLWHY8(s[869]);
initDLWHY9(s[870]);
initDLWHY10(s[871]);
initDLWHY11(s[872]);
initDLWHY12(s[873]);
initDLWHY13(s[874]);
initDLWHY14(s[875]);
initDLWHY15(s[876]);
initDLWHY16(s[877]);
initDLWHY17(s[878]);
initDLWHY18(s[879]);
initDLWHY19(s[880]);
initDLWHY20(s[881]);
initDLWHY21(s[882]);
initDLWHY22(s[883]);
initDLWHY23(s[884]);
initDLWHY24(s[885]);
initDLWHY25(s[886]);
initDLWHY26(s[887]);
initDLWHY27(s[888]);
initDLWHY28(s[889]);
initDLWHY29(s[890]);
initDMOANY(s[891]);
initDMOANY_I(s[892]);
initDMOANY_IFLAG(s[893]);
initDMOBEH2(s[894]);
initDMOBEH2_I(s[895]);
initDMOBEH2_IFLAG(s[896]);
initDMOBEH3(s[897]);
initDMOBEH3_I(s[898]);
initDMOBEH3_IFLAG(s[899]);
initDMOBEH4(s[900]);
initDMOBEH4_I(s[901]);
initDMOBEH4_IFLAG(s[902]);
initDMOBEH5(s[903]);
initDMOBEH5_I(s[904]);
initDMOBEH5_IFLAG(s[905]);
initDMOBEH(s[906]);
initDMOBEH_I(s[907]);
initDMOBEH_IFLAG(s[908]);
initDMOEST(s[909]);
initDMOEST2(s[910]);
initDMOEST3(s[911]);
initDMOEST4(s[912]);
initDMOEST5(s[913]);
initDMOINS(s[914]);
initDMOINS_I(s[915]);
initDMOINS_IFLAG(s[916]);
initDMOINS2(s[917]);
initDMOINS2_I(s[918]);
initDMOINS2_IFLAG(s[919]);
initDMOINS3(s[920]);
initDMOINS3_I(s[921]);
initDMOINS3_IFLAG(s[922]);
initDMOINS4(s[923]);
initDMOINS4_I(s[924]);
initDMOINS4_IFLAG(s[925]);
initDMOINS5(s[926]);
initDMOINS5_I(s[927]);
initDMOINS5_IFLAG(s[928]);
initDMOINT(s[929]);
initDMOINT2(s[930]);
initDMOINT3(s[931]);
initDMOINT4(s[932]);
initDMOINT5(s[933]);
initDMONUM(s[934]);
initDMONUM_I(s[935]);
initDMONUM_IFLAG(s[936]);
initDMOOFT(s[937]);
initDMOOFT_I(s[938]);
initDMOOFT_IFLAG(s[939]);
initDMOOFT2(s[940]);
initDMOOFT2_I(s[941]);
initDMOOFT2_IFLAG(s[942]);
initDMOOFT3(s[943]);
initDMOOFT3_I(s[944]);
initDMOOFT3_IFLAG(s[945]);
initDMOOFT4(s[946]);
initDMOOFT4_I(s[947]);
initDMOOFT4_IFLAG(s[948]);
initDMOOFT5(s[949]);
initDMOOFT5_I(s[950]);
initDMOOFT5_IFLAG(s[951]);
initDMOOWE(s[952]);
initDMOOWE_I(s[953]);
initDMOOWE_IFLAG(s[954]);
initDMOOWE2(s[955]);
initDMOOWE2_I(s[956]);
initDMOOWE2_IFLAG(s[957]);
initDMOOWE3(s[958]);
initDMOOWE3_I(s[959]);
initDMOOWE3_IFLAG(s[960]);
initDMOOWE4(s[961]);
initDMOOWE4_I(s[962]);
initDMOOWE4_IFLAG(s[963]);
initDMOOWE5(s[964]);
initDMOOWE5_I(s[965]);
initDMOOWE5_IFLAG(s[966]);
initDMOWEST(s[967]);
initDMOWEST2(s[968]);
initDMOWEST3(s[969]);
initDMOWEST4(s[970]);
initDMOWEST5(s[971]);
initDMOWHNM(s[972]);
initDMOWHNM_I(s[973]);
initDMOWHNM_IFLAG(s[974]);
initDMOWHNM2(s[975]);
initDMOWHNM2_I(s[976]);
initDMOWHNM2_IFLAG(s[977]);
initDMOWHNM3(s[978]);
initDMOWHNM3_I(s[979]);
initDMOWHNM3_IFLAG(s[980]);
initDMOWHNM4(s[981]);
initDMOWHNM4_I(s[982]);
initDMOWHNM4_IFLAG(s[983]);
initDMOWHNM5(s[984]);
initDMOWHNM5_I(s[985]);
initDMOWHNM5_IFLAG(s[986]);
initDMOWHNY(s[987]);
initDMOWHNY_I(s[988]);
initDMOWHNY_IFLAG(s[989]);
initDMOWHNY2(s[990]);
initDMOWHNY2_I(s[991]);
initDMOWHNY2_IFLAG(s[992]);
initDMOWHNY3(s[993]);
initDMOWHNY3_I(s[994]);
initDMOWHNY3_IFLAG(s[995]);
initDMOWHNY4(s[996]);
initDMOWHNY4_I(s[997]);
initDMOWHNY4_IFLAG(s[998]);
initDMOWHNY5(s[999]);
initDMOWHNY5_I(s[1000]);
initDMOWHNY5_IFLAG(s[1001]);
initDS12BEH(s[1002]);
initDS12BEH2(s[1003]);
initDS12BEH3(s[1004]);
initDS12BEH4(s[1005]);
initDS12BEH5(s[1006]);
initDS12OWE(s[1007]);
initDS12OWE2(s[1008]);
initDS12OWE3(s[1009]);
initDS12OWE4(s[1010]);
initDS12OWE5(s[1011]);
initDSAMC(s[1012]);
initDSAMC_I(s[1013]);
initDSAMC_IFLAG(s[1014]);
initDSAMC2(s[1015]);
initDSAMC2_I(s[1016]);
initDSAMC2_IFLAG(s[1017]);
initDSAMC3(s[1018]);
initDSAMC3_I(s[1019]);
initDSAMC3_IFLAG(s[1020]);
initDSAMC4(s[1021]);
initDSAMC4_I(s[1022]);
initDSAMC4_IFLAG(s[1023]);
initDSAMC5(s[1024]);
initDSAMC5_I(s[1025]);
initDSAMC5_IFLAG(s[1026]);
initDSAMD(s[1027]);
initDSAMD_I(s[1028]);
initDSAMD_IFLAG(s[1029]);
initDSAMD2(s[1030]);
initDSAMD2_I(s[1031]);
initDSAMD2_IFLAG(s[1032]);
initDSAMD3(s[1033]);
initDSAMD3_I(s[1034]);
initDSAMD3_IFLAG(s[1035]);
initDSAMD4(s[1036]);
initDSAMD4_I(s[1037]);
initDSAMD4_IFLAG(s[1038]);
initDSAMD5(s[1039]);
initDSAMD5_I(s[1040]);
initDSAMD5_IFLAG(s[1041]);
initDSAMOS(s[1042]);
initDSAMOS2(s[1043]);
initDSAMOS3(s[1044]);
initDSAMOS4(s[1045]);
initDSAMOS5(s[1046]);
initDSAMP(s[1047]);
initDSAMP_I(s[1048]);
initDSAMP_IFLAG(s[1049]);
initDSAMP2(s[1050]);
initDSAMP2_I(s[1051]);
initDSAMP2_IFLAG(s[1052]);
initDSAMP3(s[1053]);
initDSAMP3_I(s[1054]);
initDSAMP3_IFLAG(s[1055]);
initDSAMP4(s[1056]);
initDSAMP4_I(s[1057]);
initDSAMP4_IFLAG(s[1058]);
initDSAMP5(s[1059]);
initDSAMP5_I(s[1060]);
initDSAMP5_IFLAG(s[1061]);
initDSANU1(s[1062]);
initDSANU1_I(s[1063]);
initDSANU1_IFLAG(s[1064]);
initDSANU2(s[1065]);
initDSANU2_I(s[1066]);
initDSANU2_IFLAG(s[1067]);
initDSANY1(s[1068]);
initDSANY1_I(s[1069]);
initDSANY1_IFLAG(s[1070]);
initDSANY2(s[1071]);
initDSANY2_I(s[1072]);
initDSANY2_IFLAG(s[1073]);
initDSCOS(s[1074]);
initDSCOS_I(s[1075]);
initDSCOS_IFLAG(s[1076]);
initDSCOS2(s[1077]);
initDSCOS2_I(s[1078]);
initDSCOS2_IFLAG(s[1079]);
initDSCOS3(s[1080]);
initDSCOS3_I(s[1081]);
initDSCOS3_IFLAG(s[1082]);
initDSCOS4(s[1083]);
initDSCOS4_I(s[1084]);
initDSCOS4_IFLAG(s[1085]);
initDSCOS5(s[1086]);
initDSCOS5_I(s[1087]);
initDSCOS5_IFLAG(s[1088]);
initDSCSP(s[1089]);
initDSCSP_I(s[1090]);
initDSCSP_IFLAG(s[1091]);
initDSCSP2(s[1092]);
initDSCSP2_I(s[1093]);
initDSCSP2_IFLAG(s[1094]);
initDSCSP3(s[1095]);
initDSCSP3_I(s[1096]);
initDSCSP3_IFLAG(s[1097]);
initDSCSP4(s[1098]);
initDSCSP4_I(s[1099]);
initDSCSP4_IFLAG(s[1100]);
initDSCSP5(s[1101]);
initDSCSP5_I(s[1102]);
initDSCSP5_IFLAG(s[1103]);
initDSESB2(s[1104]);
initDSESB3(s[1105]);
initDSESB4(s[1106]);
initDSESB5(s[1107]);
initDSESB(s[1108]);
initDSLAMT(s[1109]);
initDSLAMT_I(s[1110]);
initDSLAMT_IFLAG(s[1111]);
initDSLAMT2(s[1112]);
initDSLAMT2_I(s[1113]);
initDSLAMT2_IFLAG(s[1114]);
initDSLAMT3(s[1115]);
initDSLAMT3_I(s[1116]);
initDSLAMT3_IFLAG(s[1117]);
initDSLAMT4(s[1118]);
initDSLAMT4_I(s[1119]);
initDSLAMT4_IFLAG(s[1120]);
initDSLAMT5(s[1121]);
initDSLAMT5_I(s[1122]);
initDSLAMT5_IFLAG(s[1123]);
initDSLEST(s[1124]);
initDSLEST2(s[1125]);
initDSLEST3(s[1126]);
initDSLEST4(s[1127]);
initDSLEST5(s[1128]);
initDSLPAY2(s[1129]);
initDSLPAY2_I(s[1130]);
initDSLPAY2_IFLAG(s[1131]);
initDSLPAY3(s[1132]);
initDSLPAY3_I(s[1133]);
initDSLPAY3_IFLAG(s[1134]);
initDSLPAY4(s[1135]);
initDSLPAY4_I(s[1136]);
initDSLPAY4_IFLAG(s[1137]);
initDSLPAY5(s[1138]);
initDSLPAY5_I(s[1139]);
initDSLPAY5_IFLAG(s[1140]);
initDSLPAY(s[1141]);
initDSLPAY_I(s[1142]);
initDSLPAY_IFLAG(s[1143]);
initDSNAM(s[1144]);
initDSNAM_I(s[1145]);
initDSNAM_IFLAG(s[1146]);
initDSNAM2(s[1147]);
initDSNAM2_I(s[1148]);
initDSNAM2_IFLAG(s[1149]);
initDSNAM3(s[1150]);
initDSNAM3_I(s[1151]);
initDSNAM3_IFLAG(s[1152]);
initDSNAM4(s[1153]);
initDSNAM4_I(s[1154]);
initDSNAM4_IFLAG(s[1155]);
initDSNAM5(s[1156]);
initDSNAM5_I(s[1157]);
initDSNAM5_IFLAG(s[1158]);
initDSNUM2(s[1159]);
initDSNUM2_I(s[1160]);
initDSNUM2_IFLAG(s[1161]);
initDSNUM(s[1162]);
initDSNUM_I(s[1163]);
initDSNUM_IFLAG(s[1164]);
initDSONM10(s[1165]);
initDSONM10_I(s[1166]);
initDSONM10_IFLAG(s[1167]);
initDSONM1(s[1168]);
initDSONM1_I(s[1169]);
initDSONM1_IFLAG(s[1170]);
initDSONM2(s[1171]);
initDSONM2_I(s[1172]);
initDSONM2_IFLAG(s[1173]);
initDSONM3(s[1174]);
initDSONM3_I(s[1175]);
initDSONM3_IFLAG(s[1176]);
initDSONM4(s[1177]);
initDSONM4_I(s[1178]);
initDSONM4_IFLAG(s[1179]);
initDSONM5(s[1180]);
initDSONM5_I(s[1181]);
initDSONM5_IFLAG(s[1182]);
initDSONM6(s[1183]);
initDSONM6_I(s[1184]);
initDSONM6_IFLAG(s[1185]);
initDSONM7(s[1186]);
initDSONM7_I(s[1187]);
initDSONM7_IFLAG(s[1188]);
initDSONM8(s[1189]);
initDSONM8_I(s[1190]);
initDSONM8_IFLAG(s[1191]);
initDSONM9(s[1192]);
initDSONM9_I(s[1193]);
initDSONM9_IFLAG(s[1194]);
initDSPER2(s[1195]);
initDSPER(s[1196]);
initDSREC(s[1197]);
initDSREC_I(s[1198]);
initDSREC_IFLAG(s[1199]);
initDSREC2(s[1200]);
initDSREC2_I(s[1201]);
initDSREC2_IFLAG(s[1202]);
initDSREC3(s[1203]);
initDSREC3_I(s[1204]);
initDSREC3_IFLAG(s[1205]);
initDSREC4(s[1206]);
initDSREC4_I(s[1207]);
initDSREC4_IFLAG(s[1208]);
initDSREC5(s[1209]);
initDSREC5_I(s[1210]);
initDSREC5_IFLAG(s[1211]);
initDSRSP2(s[1212]);
initDSRSP2_I(s[1213]);
initDSRSP2_IFLAG(s[1214]);
initDSRSP3(s[1215]);
initDSRSP3_I(s[1216]);
initDSRSP3_IFLAG(s[1217]);
initDSRSP4(s[1218]);
initDSRSP4_I(s[1219]);
initDSRSP4_IFLAG(s[1220]);
initDSRSP5(s[1221]);
initDSRSP5_I(s[1222]);
initDSRSP5_IFLAG(s[1223]);
initDSRSP(s[1224]);
initDSRSP_I(s[1225]);
initDSRSP_IFLAG(s[1226]);
initDTLOWE_I(s[1227]);
initDTLOWE_IFLAG(s[1228]);
initDTLOWE(s[1229]);
initDTLOWE2(s[1230]);
initDTLOWE2_I(s[1231]);
initDTLOWE2_IFLAG(s[1232]);
initDTLOWE3(s[1233]);
initDTLOWE3_I(s[1234]);
initDTLOWE3_IFLAG(s[1235]);
initDTLOWEB2(s[1236]);
initDTLOWEB3(s[1237]);
initDTLOWEB(s[1238]);
initDTLTYPE(s[1239]);
initDTLTYPE_I(s[1240]);
initDTLTYPE_IFLAG(s[1241]);
initDTLTYPE2(s[1242]);
initDTLTYPE2_I(s[1243]);
initDTLTYPE2_IFLAG(s[1244]);
initDTLTYPE3(s[1245]);
initDTLTYPE3_I(s[1246]);
initDTLTYPE3_IFLAG(s[1247]);
initDTTOWE(s[1248]);
initDTTOWE2(s[1249]);
initDTTOWE3(s[1250]);
initDTTOWE4(s[1251]);
initDTTOWE5(s[1252]);
initDTTOWE6(s[1253]);
initDTTOWE7(s[1254]);
initDTTOWE8(s[1255]);
initDTTOWE9(s[1256]);
initDTTOWE10(s[1257]);
initDTTOWE11(s[1258]);
initDTTOWE12(s[1259]);
initDTTOWE13(s[1260]);
initDTTOWE14(s[1261]);
initDTTOWE15(s[1262]);
initDTTOWEB(s[1263]);
initDTTOWEB2(s[1264]);
initDTTOWEB3(s[1265]);
initDTTOWEB4(s[1266]);
initDTTOWEB5(s[1267]);
initDTTOWEB6(s[1268]);
initDTTOWEB7(s[1269]);
initDTTOWEB8(s[1270]);
initDTTOWEB9(s[1271]);
initDTTOWEB10(s[1272]);
initDTTOWEB11(s[1273]);
initDTTOWEB12(s[1274]);
initDTTOWEB13(s[1275]);
initDTTOWEB14(s[1276]);
initDTTOWEB15(s[1277]);
initFBONDTY1(s[1278]);
initFBONDTY2(s[1279]);
initFBONDTY3(s[1280]);
initFBONDVB(s[1281]);
initFBONDV(s[1282]);
initFBONDV_I(s[1283]);
initFBONDV_IFLAG(s[1284]);
initFCACSH(s[1285]);
initFCACSH_I(s[1286]);
initFCACSH_IFLAG(s[1287]);
initFCINVAL(s[1288]);
initFCINVAL_I(s[1289]);
initFCINVAL_IFLAG(s[1290]);
initFCINVLB(s[1291]);
initFCISAB(s[1292]);
initFCISAV(s[1293]);
initFCISAV_I(s[1294]);
initFCISAV_IFLAG(s[1295]);
initFCISAWD(s[1296]);
initFCISCE(s[1297]);
initFCIWDAB(s[1298]);
initFCIWNUM(s[1299]);
initFCNUMIN(s[1300]);
initFCNUMIN_I(s[1301]);
initFCNUMIN_IFLAG(s[1302]);
initFCNUMSH(s[1303]);
initFCNUMSH_I(s[1304]);
initFCNUMSH_IFLAG(s[1305]);
initFCOLLVB(s[1306]);
initFCOLLV(s[1307]);
initFCOLLV_I(s[1308]);
initFCOLLV_IFLAG(s[1309]);
initFCOVDIF(s[1310]);
initFCOVDIN(s[1311]);
initFCOVDIN_I(s[1312]);
initFCOVDIN_IFLAG(s[1313]);
initFCOVDSH(s[1314]);
initFCOVDSH_I(s[1315]);
initFCOVDSH_IFLAG(s[1316]);
initFCOVNIN(s[1317]);
initFCOVNIN_I(s[1318]);
initFCOVNIN_IFLAG(s[1319]);
initFCOVNSH(s[1320]);
initFCOVNSH_I(s[1321]);
initFCOVNSH_IFLAG(s[1322]);
initFCSHVAL(s[1323]);
initFCSHVAL_I(s[1324]);
initFCSHVAL_IFLAG(s[1325]);
initFCSHVLB(s[1326]);
initFCSUPPR(s[1327]);
initFEOPTV(s[1328]);
initFEOPTV_I(s[1329]);
initFEOPTV_IFLAG(s[1330]);
initFEOPVB(s[1331]);
initFESHAV(s[1332]);
initFESHAV_I(s[1333]);
initFESHAV_IFLAG(s[1334]);
initFESHA(s[1335]);
initFESHA_I(s[1336]);
initFESHA_IFLAG(s[1337]);
initFESHVB(s[1338]);
initFGFOVB(s[1339]);
initFGILTS1(s[1340]);
initFGILTS1_I(s[1341]);
initFGILTS1_IFLAG(s[1342]);
initFGILTS2(s[1343]);
initFGILTS2_I(s[1344]);
initFGILTS2_IFLAG(s[1345]);
initFGILTS3(s[1346]);
initFGILTS3_I(s[1347]);
initFGILTS3_IFLAG(s[1348]);
initFGILTS4(s[1349]);
initFGILTS4_I(s[1350]);
initFGILTS4_IFLAG(s[1351]);
initFGLTFOV(s[1352]);
initFGLTFOV_I(s[1353]);
initFGLTFOV_IFLAG(s[1354]);
initFGLTUKV(s[1355]);
initFGLTUKV_I(s[1356]);
initFGLTUKV_IFLAG(s[1357]);
initFGUKVB(s[1358]);
initFIISAB(s[1359]);
initFIISAV(s[1360]);
initFIISAV_I(s[1361]);
initFIISAV_IFLAG(s[1362]);
initFINCVB(s[1363]);
initFINCV(s[1364]);
initFINFLV(s[1365]);
initFINFLV_I(s[1366]);
initFINFLV_IFLAG(s[1367]);
initFINFSAV1(s[1368]);
initFINFSAV1_I(s[1369]);
initFINFSAV1_IFLAG(s[1370]);
initFINFSAV2(s[1371]);
initFINFSAV2_I(s[1372]);
initFINFSAV2_IFLAG(s[1373]);
initFINFSAV3(s[1374]);
initFINFSAV3_I(s[1375]);
initFINFSAV3_IFLAG(s[1376]);
initFINFSAV4(s[1377]);
initFINFSAV4_I(s[1378]);
initFINFSAV4_IFLAG(s[1379]);
initFINFVB(s[1380]);
initFINFV(s[1381]);
initFINFV_I(s[1382]);
initFINFV_IFLAG(s[1383]);
initFINSV(s[1384]);
initFINSV_I(s[1385]);
initFINSV_IFLAG(s[1386]);
initFINS(s[1387]);
initFINS_I(s[1388]);
initFINS_IFLAG(s[1389]);
initFINVOTV(s[1390]);
initFINVOTV_I(s[1391]);
initFINVOTV_IFLAG(s[1392]);
initFINVOVB(s[1393]);
initFINVTY01(s[1394]);
initFINVTY01_I(s[1395]);
initFINVTY01_IFLAG(s[1396]);
initFINVTY02(s[1397]);
initFINVTY02_I(s[1398]);
initFINVTY02_IFLAG(s[1399]);
initFINVTY03(s[1400]);
initFINVTY03_I(s[1401]);
initFINVTY03_IFLAG(s[1402]);
initFINVTY04(s[1403]);
initFINVTY04_I(s[1404]);
initFINVTY04_IFLAG(s[1405]);
initFINVTY05(s[1406]);
initFINVTY05_I(s[1407]);
initFINVTY05_IFLAG(s[1408]);
initFINVTY06(s[1409]);
initFINVTY06_I(s[1410]);
initFINVTY06_IFLAG(s[1411]);
initFINVTY07(s[1412]);
initFINVTY07_I(s[1413]);
initFINVTY07_IFLAG(s[1414]);
initFINVTY08(s[1415]);
initFINVTY08_I(s[1416]);
initFINVTY08_IFLAG(s[1417]);
initFINVTY09(s[1418]);
initFINVTY09_I(s[1419]);
initFINVTY09_IFLAG(s[1420]);
initFINVTY10(s[1421]);
initFINVTY10_I(s[1422]);
initFINVTY10_IFLAG(s[1423]);
initFINVTY11(s[1424]);
initFISA1(s[1425]);
initFISA1_I(s[1426]);
initFISA1_IFLAG(s[1427]);
initFISA2(s[1428]);
initFISA2_I(s[1429]);
initFISA2_IFLAG(s[1430]);
initFKISAB(s[1431]);
initFKISAV(s[1432]);
initFKISAV_I(s[1433]);
initFKISAV_IFLAG(s[1434]);
initFLFENVB(s[1435]);
initFLFENV(s[1436]);
initFLFENV_I(s[1437]);
initFLFENV_IFLAG(s[1438]);
initFLFFSVB(s[1439]);
initFLFFSV(s[1440]);
initFLFFSV_I(s[1441]);
initFLFFSV_IFLAG(s[1442]);
initFLFSIVB(s[1443]);
initFLFSIV(s[1444]);
initFLFSIV_I(s[1445]);
initFLFSIV_IFLAG(s[1446]);
initFLFTEVB(s[1447]);
initFLFTEV(s[1448]);
initFLFTEV_I(s[1449]);
initFLFTEV_IFLAG(s[1450]);
initFLOANVB(s[1451]);
initFLPROD1(s[1452]);
initFLPROD1_I(s[1453]);
initFLPROD1_IFLAG(s[1454]);
initFLPROD2(s[1455]);
initFLPROD2_I(s[1456]);
initFLPROD2_IFLAG(s[1457]);
initFLPROD3(s[1458]);
initFLPROD3_I(s[1459]);
initFLPROD3_IFLAG(s[1460]);
initFLPROD4(s[1461]);
initFLPROD4_I(s[1462]);
initFLPROD4_IFLAG(s[1463]);
initFNSVAL(s[1464]);
initFNSVAL_I(s[1465]);
initFNSVAL_IFLAG(s[1466]);
initFNSVB(s[1467]);
initFSACSH(s[1468]);
initFSACSH_I(s[1469]);
initFSACSH_IFLAG(s[1470]);
initFSAVAB(s[1471]);
initFSAVED(s[1472]);
initFSHADAB(s[1473]);
initFSHADA(s[1474]);
initFSHADD(s[1475]);
initFSHARE1(s[1476]);
initFSHARE1_I(s[1477]);
initFSHARE1_IFLAG(s[1478]);
initFSHARE2(s[1479]);
initFSHARE2_I(s[1480]);
initFSHARE2_IFLAG(s[1481]);
initFSHARE3(s[1482]);
initFSHARE3_I(s[1483]);
initFSHARE3_IFLAG(s[1484]);
initFSHOSVB(s[1485]);
initFSHOSV(s[1486]);
initFSHOSV_I(s[1487]);
initFSHOSV_IFLAG(s[1488]);
initFSHUKVB(s[1489]);
initFSHUKV(s[1490]);
initFSHUKV_I(s[1491]);
initFSHUKV_IFLAG(s[1492]);
initFSINVAL(s[1493]);
initFSINVAL_I(s[1494]);
initFSINVAL_IFLAG(s[1495]);
initFSINVLB(s[1496]);
initFSNUMIN(s[1497]);
initFSNUMIN_I(s[1498]);
initFSNUMIN_IFLAG(s[1499]);
initFSNUMSH(s[1500]);
initFSNUMSH_I(s[1501]);
initFSNUMSH_IFLAG(s[1502]);
initFSOSHAV(s[1503]);
initFSOSVLB(s[1504]);
initFSSHVAL(s[1505]);
initFSSHVAL_I(s[1506]);
initFSSHVAL_IFLAG(s[1507]);
initFSSHVLB(s[1508]);
initFSSUPPR(s[1509]);
initFSTYPIN1(s[1510]);
initFSTYPIN2(s[1511]);
initFSTYPIN3(s[1512]);
initFSTYPIN4(s[1513]);
initFSTYPIN5(s[1514]);
initFSTYPSH1(s[1515]);
initFSTYPSH2(s[1516]);
initFSTYPSH3(s[1517]);
initFSTYPSH4(s[1518]);
initFSTYPSH5(s[1519]);
initIGDS10(s[1520]);
initIGDS11(s[1521]);
initIGDS12(s[1522]);
initIGDS13(s[1523]);
initIGDS14(s[1524]);
initIGDS15(s[1525]);
initIGDS16(s[1526]);
initIGDS17(s[1527]);
initIGDS18(s[1528]);
initIGDS19(s[1529]);
initIGDS1(s[1530]);
initIGDS20(s[1531]);
initIGDS21(s[1532]);
initIGDS2(s[1533]);
initIGDS3(s[1534]);
initIGDS4(s[1535]);
initIGDS5(s[1536]);
initIGDS6(s[1537]);
initIGDS7(s[1538]);
initIGDS8(s[1539]);
initIGDS9(s[1540]);
initIGFVALB(s[1541]);
initIGIFVAL(s[1542]);
initIHRCNUM(s[1543]);
initIHRECNT(s[1544]);
initIHSE1(s[1545]);
initIHSE2(s[1546]);
initIHSE7(s[1547]);
initILACB(s[1548]);
initILACC(s[1549]);
initILGIFT(s[1550]);
initILIFB(s[1551]);
initILIFE(s[1552]);
initILINB(s[1553]);
initILINS(s[1554]);
initILNPBAM(s[1555]);
initILNPBK(s[1556]);
initILNUSE01(s[1557]);
initILNUSE02(s[1558]);
initILNUSE03(s[1559]);
initILNUSE04(s[1560]);
initILNUSE05(s[1561]);
initILNUSE06(s[1562]);
initILNUSE07(s[1563]);
initILNUSE08(s[1564]);
initILNUSE09(s[1565]);
initILNUSE10(s[1566]);
initILNVALB(s[1567]);
initILNVAL(s[1568]);
initILOAN(s[1569]);
initILOTB(s[1570]);
initILOTH(s[1571]);
initILRDB(s[1572]);
initILRED(s[1573]);
initILUMP(s[1574]);
initILUMTY1(s[1575]);
initILUMTY2(s[1576]);
initILUMTY3(s[1577]);
initILUMTY4(s[1578]);
initILUPB(s[1579]);
initILUPP(s[1580]);
initILWIN(s[1581]);
initILWNB(s[1582]);
initINSPOL(s[1583]);
initIVAL2(s[1584]);
initIVAL3(s[1585]);
initIVALB2(s[1586]);
initIVALB3(s[1587]);
initIVALB(s[1588]);
initIVAL(s[1589]);
initIWAT10(s[1590]);
initIWAT13(s[1591]);
initIWAT14(s[1592]);
initIWAT1(s[1593]);
initIWAT2(s[1594]);
initIWAT3(s[1595]);
initIWAT4(s[1596]);
initIWAT5(s[1597]);
initIWAT6(s[1598]);
initIWAT7(s[1599]);
initIWAT8(s[1600]);
initIWAT9(s[1601]);
initIWHO2(s[1602]);
initIWHO3(s[1603]);
initIWHO(s[1604]);
initNEWFCMX(s[1605]);
initNEWGIFT(s[1606]);
initNWFLNVAL1(s[1607]);
initNWFLNVAL2(s[1608]);
initNWFLNVAL3(s[1609]);
initNWHPNO(s[1610]);
initNWHP(s[1611]);
initNWILNVAL1(s[1612]);
initNWILNVAL2(s[1613]);
initNWILNVAL3(s[1614]);
initNWLNNO(s[1615]);
initNWLNNO_I(s[1616]);
initNWLNNO_IFLAG(s[1617]);
initNWLN(s[1618]);
initNWLN_I(s[1619]);
initNWLN_IFLAG(s[1620]);
initOCSVR1(s[1621]);
initOCSVR2(s[1622]);
initOCSVR3(s[1623]);
initOCSVR4(s[1624]);
initOCSVR5(s[1625]);
initOCSVR6(s[1626]);
initOCSVR7(s[1627]);
initOCSVR8(s[1628]);
initOIMPRS1(s[1629]);
initOIMPRS2(s[1630]);
initOIMPRS3(s[1631]);
initOIMPRS4(s[1632]);
initOIMPRS5(s[1633]);
initOIMPRS6(s[1634]);
initOIMPRS7(s[1635]);
initOIMPRS8(s[1636]);
initOIMPRS9(s[1637]);
initOINTROL(s[1638]);
initOINTROM(s[1639]);
initORETINC(s[1640]);
initOSITCH(s[1641]);
initOSITUAT(s[1642]);
initOTHASCH(s[1643]);
initOTHASVB(s[1644]);
initOTHASVL(s[1645]);
initOTHERFA(s[1646]);
initOTHSHARE(s[1647]);
initOTRUST01(s[1648]);
initOTRUST02(s[1649]);
initOTRUST03(s[1650]);
initOTRUST04(s[1651]);
initOTRUST05(s[1652]);
initOTRUST06(s[1653]);
initOTRUST07(s[1654]);
initOTRUST08(s[1655]);
initOTRUST09(s[1656]);
initOTRUST10(s[1657]);
initOTRUST11(s[1658]);
initOTRUST12(s[1659]);
initOTRUST13(s[1660]);
initOTRUST14(s[1661]);
initOTRUST15(s[1662]);
initPNSBOND(s[1663]);
initSAVDEP(s[1664]);
initSELECTAD(s[1665]);
initSELECTAD_I(s[1666]);
initSELECTAD_IFLAG(s[1667]);
initSLNOS1(s[1668]);
initSLNOS2(s[1669]);
initSLNOS3(s[1670]);
initT_FLNS(s[1671]);
initT_LNS(s[1672]);
initT_SLNS(s[1673]);
initTACC2(s[1674]);
initTACC3(s[1675]);
initTACC(s[1676]);
initTADDVB2(s[1677]);
initTADDVB3(s[1678]);
initTADDVB(s[1679]);
initTADDVL2(s[1680]);
initTADDVL3(s[1681]);
initTADDVL(s[1682]);
initTBCAP2(s[1683]);
initTBCAP3(s[1684]);
initTBCAP(s[1685]);
initTBCAPY2(s[1686]);
initTBCAPY3(s[1687]);
initTBCAPY(s[1688]);
initTBCKNO2(s[1689]);
initTBCKNO3(s[1690]);
initTBCKNO(s[1691]);
initTBEN1(s[1692]);
initTBEN2(s[1693]);
initTBEN3(s[1694]);
initTBEN4(s[1695]);
initTBEN5(s[1696]);
initTBEN6(s[1697]);
initTBEN7(s[1698]);
initTBEN8(s[1699]);
initTBEN9(s[1700]);
initTBEN10(s[1701]);
initTBEN11(s[1702]);
initTBEN12(s[1703]);
initTBEN13(s[1704]);
initTBEN14(s[1705]);
initTBEN15(s[1706]);
initTBEN16(s[1707]);
initTBEN17(s[1708]);
initTBEN18(s[1709]);
initTBEN19(s[1710]);
initTBEN20(s[1711]);
initTBEN21(s[1712]);
initTBEN22(s[1713]);
initTBEN23(s[1714]);
initTBEN24(s[1715]);
initTBENEF(s[1716]);
initTBENNUM(s[1717]);
initTBINC(s[1718]);
initTBINC2(s[1719]);
initTBINC3(s[1720]);
initTBREC(s[1721]);
initTBREC2(s[1722]);
initTBREC3(s[1723]);
initTBRECB(s[1724]);
initTBRECB2(s[1725]);
initTBRECB3(s[1726]);
initTBVALB2(s[1727]);
initTBVALB3(s[1728]);
initTBVALB(s[1729]);
initTCONT1(s[1730]);
initTCONT2(s[1731]);
initTDUP(s[1732]);
initTDUP2(s[1733]);
initTDUP3(s[1734]);
initTDUPA(s[1735]);
initTDUPA2(s[1736]);
initTDUPA3(s[1737]);
initTINTRO(s[1738]);
initTJNT1(s[1739]);
initTJNT2(s[1740]);
initTJNT3(s[1741]);
initTJNT4(s[1742]);
initTJNT5(s[1743]);
initTJNT6(s[1744]);
initTSETT(s[1745]);
initTSNEW(s[1746]);
initTSNO2(s[1747]);
initTSNO3(s[1748]);
initTSNO(s[1749]);
initTSNUM2(s[1750]);
initTSNUM(s[1751]);
initTVAL(s[1752]);
initTVAL2(s[1753]);
initTVAL3(s[1754]);
initTVALB(s[1755]);
initTVALB2(s[1756]);
initTVALB3(s[1757]);
initTWHO1(s[1758]);
initTWHO2(s[1759]);
initTWHO3(s[1760]);
initTWHO4(s[1761]);
initTWHO5(s[1762]);
initTWHO6(s[1763]);
initTWHO7(s[1764]);
initTWHO8(s[1765]);
initTWHO9(s[1766]);
initTWHO10(s[1767]);
initTWHO11(s[1768]);
initTWHO12(s[1769]);
initTWHO13(s[1770]);
initTWHO14(s[1771]);
initTWHO15(s[1772]);
initTWHO16(s[1773]);
initTWHO17(s[1774]);
initTWHO18(s[1775]);
initUITRUST(s[1776]);
initXINSOL(s[1777]);
initXINTYP(s[1778]);
initDVANYARR(s[1779]);
initDVCACRVAL(s[1780]);
initDVCACTV(s[1781]);
initDVCAODVAL(s[1782]);
initDVCASVV(s[1783]);
initDVCAVAL(s[1784]);
initDVCHMARR(s[1785]);
initDVCISAV(s[1786]);
initDVCOINV2(s[1787]);
initDVCOINV3(s[1788]);
initDVCOINV4(s[1789]);
initDVCOINV(s[1790]);
initDVCRTARR(s[1791]);
initDVCTARR(s[1792]);
initDVDHPOWE2(s[1793]);
initDVDHPOWE3(s[1794]);
initDVDHPOWE4(s[1795]);
initDVDHPOWE5(s[1796]);
initDVDHPOWE(s[1797]);
initDVDLOWE2(s[1798]);
initDVDLOWE3(s[1799]);
initDVDLOWE4(s[1800]);
initDVDLOWE5(s[1801]);
initDVDLOWE(s[1802]);
initDVDMOOWE2(s[1803]);
initDVDMOOWE3(s[1804]);
initDVDMOOWE4(s[1805]);
initDVDMOOWE5(s[1806]);
initDVDMOOWE(s[1807]);
initDVELARR(s[1808]);
initDVFBONDV(s[1809]);
initDVFCINVAL(s[1810]);
initDVFCOLLV(s[1811]);
initDVFEOPTV(s[1812]);
initDVFESHARES(s[1813]);
initDVFESHAV(s[1814]);
initDVFFASSETS(s[1815]);
initDVFGLTFOV(s[1816]);
initDVFGLTUKV(s[1817]);
initDVFINFLV(s[1818]);
initDVFINFVAL(s[1819]);
initDVFINFV(s[1820]);
initDVFINVOTV(s[1821]);
initDVFLFENV(s[1822]);
initDVFLFFSV(s[1823]);
initDVFLFSIV(s[1824]);
initDVFLFTEV(s[1825]);
initDVFNSVAL(s[1826]);
initDVFSHOSV(s[1827]);
initDVFSHUKV(s[1828]);
initDVFSINVAL(s[1829]);
initDVGASARR(s[1830]);
initDVHPAR(s[1831]);
initDVIISAV(s[1832]);
initDVINSV(s[1833]);
initDVISAVAL(s[1834]);
initDVKISAV(s[1835]);
initDVLNAR(s[1836]);
initDVMOAR(s[1837]);
initDVNWFLN(s[1838]);
initDVNWILN(s[1839]);
initDVOTHARR(s[1840]);
initDVRNTARR(s[1841]);
initDVSAVAL(s[1842]);
initDVSHCVAL(s[1843]);
initDVSHODVAL2(s[1844]);
initDVSHODVAL3(s[1845]);
initDVSHODVAL(s[1846]);
initDVSHSVAL(s[1847]);
initDVTAXARR(s[1848]);
initDVTELARR(s[1849]);
initDVVATARR(s[1850]);
initDVWATARR(s[1851]);
initEMPSHARE(s[1852]);
initFLNOS1(s[1853]);
initFLNOS2(s[1854]);
initFLNOS3(s[1855]);
initFLNOS4(s[1856]);
initFLNOS5(s[1857]);
initFNSAV1(s[1858]);
initFNSAV2(s[1859]);
initFNSAV3(s[1860]);
initFNSAV4(s[1861]);
initFTIBOND(s[1862]);
initFWITHD(s[1863]);
initGCBGILT(s[1864]);
initHASCC(s[1865]);
initHASHP(s[1866]);
initHASLF(s[1867]);
initHASMO(s[1868]);
initHASPLINF(s[1869]);
initHASSC(s[1870]);
initHASSL(s[1871]);
initHFINL(s[1872]);
initHFINW_EXCENDW(s[1873]);
initHPARR(s[1874]);
initHPLFT2(s[1875]);
initHPLFT3(s[1876]);
initHPLFT4(s[1877]);
initHPLFT5(s[1878]);
initHPLFT(s[1879]);
initHPOS1(s[1880]);
initHPOS2(s[1881]);
initHPOS3(s[1882]);
initHPOS4(s[1883]);
initHPOS5(s[1884]);
initINS(s[1885]);
initISA(s[1886]);
initLNARR(s[1887]);
initLNLFT(s[1888]);
initLNLFT2(s[1889]);
initLNLFT3(s[1890]);
initLNLFT4(s[1891]);
initLNLFT5(s[1892]);
initLNOS1(s[1893]);
initLNOS2(s[1894]);
initLNOS3(s[1895]);
initLNOS4(s[1896]);
initLNOS5(s[1897]);
initMOARR(s[1898]);
initMOLFT(s[1899]);
initMOLFT2(s[1900]);
initMOLFT3(s[1901]);
initMOLFT4(s[1902]);
initMOLFT5(s[1903]);
initMOOS1(s[1904]);
initMOOS2(s[1905]);
initMOOS3(s[1906]);
initMOOS4(s[1907]);
initMOOS5(s[1908]);
initNOFA(s[1909]);
initTOTBILLARR(s[1910]);
initTOTCC(s[1911]);
initTOTHP(s[1912]);
initTOTLOS(s[1913]);
initTOTMO(s[1914]);
initTOTSC(s[1915]);
initCHECK1(s[1916]);
initCHECK2(s[1917]);
initOIGOE(s[1918]);
initOIGOE_I(s[1919]);
initOIGOE_IFLAG(s[1920]);
initOIGOS(s[1921]);
initOIGOS_I(s[1922]);
initOIGOS_IFLAG(s[1923]);
initOIGPP(s[1924]);
initOIGPP_I(s[1925]);
initOIGPP_IFLAG(s[1926]);
initOINOE(s[1927]);
initOINOS(s[1928]);
initOINPP(s[1929]);
initOLARGE(s[1930]);
initOPENS01(s[1931]);
initOPENS02(s[1932]);
initOPENS03(s[1933]);
initOPENS04(s[1934]);
initOPENS05(s[1935]);
initOPENS06(s[1936]);
initOPENS07(s[1937]);
initOPENS08(s[1938]);
initOPENSAV(s[1939]);
initOSTANDL(s[1940]);
initOTHSRC1(s[1941]);
initOTHSRC1_I(s[1942]);
initOTHSRC1_IFLAG(s[1943]);
initOTHSRC2(s[1944]);
initOTHSRC2_I(s[1945]);
initOTHSRC2_IFLAG(s[1946]);
initOTHSRC3(s[1947]);
initOTHSRC3_I(s[1948]);
initOTHSRC3_IFLAG(s[1949]);
initPADDFUT(s[1950]);
initPADDFUT2(s[1951]);
initPANYO(s[1952]);
initPANYO_I(s[1953]);
initPANYO_IFLAG(s[1954]);
initPASTMN(s[1955]);
initPASTMN2(s[1956]);
initPASTYR(s[1957]);
initPASTYR2(s[1958]);
initPAVCAM(s[1959]);
initPAVCAM2(s[1960]);
initPAVCFG(s[1961]);
initPAVCFG2(s[1962]);
initPAVCFR(s[1963]);
initPAVCFR2(s[1964]);
initPAVCH(s[1965]);
initPAVCH2(s[1966]);
initPAVCIN(s[1967]);
initPAVCIN2(s[1968]);
initPAVCPR(s[1969]);
initPAVCPR2(s[1970]);
initPAVCUV2(s[1971]);
initPAVCUV2_I(s[1972]);
initPAVCUV2_IFLAG(s[1973]);
initPAVCUV(s[1974]);
initPAVCUV_I(s[1975]);
initPAVCUV_IFLAG(s[1976]);
initPAVCVB2(s[1977]);
initPAVCVB(s[1978]);
initPAVDOC2(s[1979]);
initPAVDOC(s[1980]);
initPBDOCS(s[1981]);
initPBDOCS2(s[1982]);
initPBFRAC(s[1983]);
initPBFRAC_I(s[1984]);
initPBFRAC_IFLAG(s[1985]);
initPBFRAC2(s[1986]);
initPBFRAC2_I(s[1987]);
initPBFRAC2_IFLAG(s[1988]);
initPBINCA(s[1989]);
initPBINCA2(s[1990]);
initPBINCF(s[1991]);
initPBINCF2(s[1992]);
initPBINCH(s[1993]);
initPBINCH2(s[1994]);
initPBLMVB(s[1995]);
initPBLMVB2(s[1996]);
initPBLUMV(s[1997]);
initPBLUMV_I(s[1998]);
initPBLUMV_IFLAG(s[1999]);
initPBLUMV2(s[2000]);
initPBLUMV2_I(s[2001]);
initPBLUMV2_IFLAG(s[2002]);
initPBQUAL(s[2003]);
initPBQUAL_I(s[2004]);
initPBQUAL_IFLAG(s[2005]);
initPBQUAL2(s[2006]);
initPBQUAL2_I(s[2007]);
initPBQUAL2_IFLAG(s[2008]);
initPBSTMN(s[2009]);
initPBSTMN2(s[2010]);
initPBSTYR(s[2011]);
initPBSTYR2(s[2012]);
initPCCFST1(s[2013]);
initPCCFST1_I(s[2014]);
initPCCFST1_IFLAG(s[2015]);
initPCCFST2(s[2016]);
initPCCFST2_I(s[2017]);
initPCCFST2_IFLAG(s[2018]);
initPCCFST3(s[2019]);
initPCCFST3_I(s[2020]);
initPCCFST3_IFLAG(s[2021]);
initPCDOCS(s[2022]);
initPCDOCS2(s[2023]);
initPCNEW(s[2024]);
initPCNUM(s[2025]);
initPCONT(s[2026]);
initPCONT_I(s[2027]);
initPCONT_IFLAG(s[2028]);
initPCSTMN(s[2029]);
initPCSTMN2(s[2030]);
initPCSTYR(s[2031]);
initPCSTYR2(s[2032]);
initPDBCAL(s[2033]);
initPDBCAL2(s[2034]);
initPDCVAL2(s[2035]);
initPDCVAL2_I(s[2036]);
initPDCVAL2_IFLAG(s[2037]);
initPDCVAL(s[2038]);
initPDCVAL_I(s[2039]);
initPDCVAL_IFLAG(s[2040]);
initPDCVB(s[2041]);
initPDCVB2(s[2042]);
initPEANYO(s[2043]);
initPECONT(s[2044]);
initPEMELG(s[2045]);
initPEMELG_I(s[2046]);
initPEMELG_IFLAG(s[2047]);
initPEMFIN(s[2048]);
initPEMMEM(s[2049]);
initPEMMEM_I(s[2050]);
initPEMMEM_IFLAG(s[2051]);
initPEMOFF(s[2052]);
initPEMOFF_I(s[2053]);
initPEMOFF_IFLAG(s[2054]);
initPESAME(s[2055]);
initPESAME_I(s[2056]);
initPESAME_IFLAG(s[2057]);
initPEVERC(s[2058]);
initPEVERC_I(s[2059]);
initPEVERC_IFLAG(s[2060]);
initPEVERNC(s[2061]);
initPEVERNC_I(s[2062]);
initPEVERNC_IFLAG(s[2063]);
initPEWYNO01(s[2064]);
initPEWYNO02(s[2065]);
initPEWYNO03(s[2066]);
initPEWYNO04(s[2067]);
initPEWYNO05(s[2068]);
initPFACCU3(s[2069]);
initPFACCU5(s[2070]);
initPFACCU6(s[2071]);
initPFANEH(s[2072]);
initPFANEH2(s[2073]);
initPFANEH3(s[2074]);
initPFANEXM(s[2075]);
initPFANEXY(s[2076]);
initPFANGA(s[2077]);
initPFANGA2(s[2078]);
initPFANGA3(s[2079]);
initPFANIF(s[2080]);
initPFANIF2(s[2081]);
initPFANIF3(s[2082]);
initPFANJT(s[2083]);
initPFANJT2(s[2084]);
initPFANJT3(s[2085]);
initPFANLM(s[2086]);
initPFANLM2(s[2087]);
initPFANN11(s[2088]);
initPFANN12(s[2089]);
initPFANN1(s[2090]);
initPFANN2(s[2091]);
initPFANN3(s[2092]);
initPFANN6(s[2093]);
initPFANN7(s[2094]);
initPFANVB(s[2095]);
initPFANVI(s[2096]);
initPFANVI2(s[2097]);
initPFANVI3(s[2098]);
initPFBEG(s[2099]);
initPFBEG2(s[2100]);
initPFBEG3(s[2101]);
initPFBEG4(s[2102]);
initPFBEG5(s[2103]);
initPFBEG6(s[2104]);
initPFCASH(s[2105]);
initPFCASH_I(s[2106]);
initPFCASH_IFLAG(s[2107]);
initPFCASH2(s[2108]);
initPFCASH2_I(s[2109]);
initPFCASH2_IFLAG(s[2110]);
initPFCASH3(s[2111]);
initPFCASH3_I(s[2112]);
initPFCASH3_IFLAG(s[2113]);
initPFCASH4(s[2114]);
initPFCASH4_I(s[2115]);
initPFCASH4_IFLAG(s[2116]);
initPFCRET1(s[2117]);
initPFCRET2(s[2118]);
initPFCRET3(s[2119]);
initPFCRET4(s[2120]);
initPFCRET5(s[2121]);
initPFCRET6(s[2122]);
initPFCURV(s[2123]);
initPFCURV_I(s[2124]);
initPFCURV_IFLAG(s[2125]);
initPFCURV2(s[2126]);
initPFCURV2_I(s[2127]);
initPFCURV2_IFLAG(s[2128]);
initPFCURV3(s[2129]);
initPFCURV3_I(s[2130]);
initPFCURV3_IFLAG(s[2131]);
initPFCURV4(s[2132]);
initPFCURV4_I(s[2133]);
initPFCURV4_IFLAG(s[2134]);
initPFCURV5(s[2135]);
initPFCURV5_I(s[2136]);
initPFCURV5_IFLAG(s[2137]);
initPFCURV6(s[2138]);
initPFCURV6_I(s[2139]);
initPFCURV6_IFLAG(s[2140]);
initPFCUVB(s[2141]);
initPFCUVB2(s[2142]);
initPFCUVB3(s[2143]);
initPFCUVB4(s[2144]);
initPFCUVB5(s[2145]);
initPFCUVB6(s[2146]);
initPFDDV(s[2147]);
initPFDDV_I(s[2148]);
initPFDDV_IFLAG(s[2149]);
initPFDDV2(s[2150]);
initPFDDV2_I(s[2151]);
initPFDDV2_IFLAG(s[2152]);
initPFDDV3(s[2153]);
initPFDDV3_I(s[2154]);
initPFDDV3_IFLAG(s[2155]);
initPFDDV4(s[2156]);
initPFDDV4_I(s[2157]);
initPFDDV4_IFLAG(s[2158]);
initPFDDV5(s[2159]);
initPFDDV6(s[2160]);
initPFDDVB(s[2161]);
initPFDDVB2(s[2162]);
initPFDDVB3(s[2163]);
initPFDDVB4(s[2164]);
initPFDDVB5(s[2165]);
initPFDDVB6(s[2166]);
initPFDOCS2(s[2167]);
initPFDOCS3(s[2168]);
initPFDOCS4(s[2169]);
initPFDOCS5(s[2170]);
initPFDOCS6(s[2171]);
initPFDOCS(s[2172]);
initPFDRAW(s[2173]);
initPFDRAW_I(s[2174]);
initPFDRAW_IFLAG(s[2175]);
initPFDRA___W2(s[2176]);
initPFDRAW2_I(s[2177]);
initPFDRAW2_IFLAG(s[2178]);
initPFDRAW3(s[2179]);
initPFDRAW3_I(s[2180]);
initPFDRAW3_IFLAG(s[2181]);
initPFDRAW4(s[2182]);
initPFDRAW4_I(s[2183]);
initPFDRAW4_IFLAG(s[2184]);
initPFDRAW5(s[2185]);
initPFDRAW6(s[2186]);
initPFDRINC(s[2187]);
initPFDRINC2(s[2188]);
initPFDRINC3(s[2189]);
initPFDRINC4(s[2190]);
initPFDRINC5(s[2191]);
initPFDRINC6(s[2192]);
initPFDRINCB(s[2193]);
initPFDRINCB2(s[2194]);
initPFDRINCB3(s[2195]);
initPFDRINCB4(s[2196]);
initPFDRINCB5(s[2197]);
initPFDRINCB6(s[2198]);
initPFDRVB(s[2199]);
initPFDRVB2(s[2200]);
initPFDRVB3(s[2201]);
initPFDRVB4(s[2202]);
initPFDRVB5(s[2203]);
initPFDRVB6(s[2204]);
initPFDRVI2(s[2205]);
initPFDRVI3(s[2206]);
initPFDRVI4(s[2207]);
initPFDRVI5(s[2208]);
initPFDRVI6(s[2209]);
initPFDRVI(s[2210]);
initPFEND(s[2211]);
initPFEND2(s[2212]);
initPFEND3(s[2213]);
initPFEND4(s[2214]);
initPFEND5(s[2215]);
initPFEND6(s[2216]);
initPFENNUM(s[2217]);
initPFEN(s[2218]);
initPFFAAG(s[2219]);
initPFFAAG2(s[2220]);
initPFFAAG3(s[2221]);
initPFFAAG4(s[2222]);
initPFFAAG5(s[2223]);
initPFFAAG6(s[2224]);
initPFFAN2(s[2225]);
initPFFAN6(s[2226]);
initPFFAN11(s[2227]);
initPFFAN16(s[2228]);
initPFFAWH1(s[2229]);
initPFFAWH7(s[2230]);
initPFFAWH13(s[2231]);
initPFINCA(s[2232]);
initPFINCA_I(s[2233]);
initPFINCA_IFLAG(s[2234]);
initPFINCA2(s[2235]);
initPFINCA2_I(s[2236]);
initPFINCA2_IFLAG(s[2237]);
initPFINCA3(s[2238]);
initPFINCA3_I(s[2239]);
initPFINCA3_IFLAG(s[2240]);
initPFINCA4(s[2241]);
initPFINCA4_I(s[2242]);
initPFINCA4_IFLAG(s[2243]);
initPFINCA5(s[2244]);
initPFINCA5_I(s[2245]);
initPFINCA5_IFLAG(s[2246]);
initPFINCA6(s[2247]);
initPFINCA6_I(s[2248]);
initPFINCA6_IFLAG(s[2249]);
initPFINCP(s[2250]);
initPFINCP_I(s[2251]);
initPFINCP_IFLAG(s[2252]);
initPFINCP2(s[2253]);
initPFINCP2_I(s[2254]);
initPFINCP2_IFLAG(s[2255]);
initPFINCP3(s[2256]);
initPFINCP3_I(s[2257]);
initPFINCP3_IFLAG(s[2258]);
initPFINCP4(s[2259]);
initPFINCP4_I(s[2260]);
initPFINCP4_IFLAG(s[2261]);
initPFINCP5(s[2262]);
initPFINCP5_I(s[2263]);
initPFINCP5_IFLAG(s[2264]);
initPFINCP6(s[2265]);
initPFINCP6_I(s[2266]);
initPFINCP6_IFLAG(s[2267]);
initPFLMUS(s[2268]);
initPFLMUS2(s[2269]);
initPFLMUS3(s[2270]);
initPFLMUS4(s[2271]);
initPFLMUS5(s[2272]);
initPFLMUS6(s[2273]);
initPFLMV(s[2274]);
initPFLMV2(s[2275]);
initPFLMV3(s[2276]);
initPFLMV4(s[2277]);
initPFLMV5(s[2278]);
initPFLMV6(s[2279]);
initPFLMVB(s[2280]);
initPFLMVB2(s[2281]);
initPFLMVB3(s[2282]);
initPFLMVB4(s[2283]);
initPFLMVB5(s[2284]);
initPFLMVB6(s[2285]);
initPFLUM(s[2286]);
initPFLUM_I(s[2287]);
initPFLUM_IFLAG(s[2288]);
initPFLUM2(s[2289]);
initPFLUM2_I(s[2290]);
initPFLUM2_IFLAG(s[2291]);
initPFLUM3(s[2292]);
initPFLUM3_I(s[2293]);
initPFLUM3_IFLAG(s[2294]);
initPFLUM4(s[2295]);
initPFLUM4_I(s[2296]);
initPFLUM4_IFLAG(s[2297]);
initPFLUM5(s[2298]);
initPFLUM5_I(s[2299]);
initPFLUM5_IFLAG(s[2300]);
initPFLUM6(s[2301]);
initPFLUM6_I(s[2302]);
initPFLUM6_IFLAG(s[2303]);
initPFLUMALL(s[2304]);
initPFLUMALL_I(s[2305]);
initPFLUMALL_IFLAG(s[2306]);
initPFLUMALL2(s[2307]);
initPFLUMALL2_I(s[2308]);
initPFLUMALL2_IFLAG(s[2309]);
initPFLUMALL3(s[2310]);
initPFLUMALL3_I(s[2311]);
initPFLUMALL3_IFLAG(s[2312]);
initPFLUMALL4(s[2313]);
initPFLUMALL4_I(s[2314]);
initPFLUMALL4_IFLAG(s[2315]);
initPFLUMV(s[2316]);
initPFLUMV_I(s[2317]);
initPFLUMV_IFLAG(s[2318]);
initPFLUMV2(s[2319]);
initPFLUMV2_I(s[2320]);
initPFLUMV2_IFLAG(s[2321]);
initPFLUMV3(s[2322]);
initPFLUMV3_I(s[2323]);
initPFLUMV3_IFLAG(s[2324]);
initPFLUMV4(s[2325]);
initPFLUMV4_I(s[2326]);
initPFLUMV4_IFLAG(s[2327]);
initPFLUMV5(s[2328]);
initPFLUMV5_I(s[2329]);
initPFLUMV5_IFLAG(s[2330]);
initPFLUMV6(s[2331]);
initPFLUMV6_I(s[2332]);
initPFLUMV6_IFLAG(s[2333]);
initPFLUVB(s[2334]);
initPFLUVB2(s[2335]);
initPFLUVB3(s[2336]);
initPFLUVB4(s[2337]);
initPFLUVB5(s[2338]);
initPFLUVB6(s[2339]);
initPFNEWNO(s[2340]);
initPFNEWNO_I(s[2341]);
initPFNEWNO_IFLAG(s[2342]);
initPFNEW(s[2343]);
initPFNEW_I(s[2344]);
initPFNEW_IFLAG(s[2345]);
initPFNUM2(s[2346]);
initPFNUM(s[2347]);
initPFNUM_I(s[2348]);
initPFNUM_IFLAG(s[2349]);
initPFOCTY(s[2350]);
initPFOCTY_I(s[2351]);
initPFOCTY_IFLAG(s[2352]);
initPFOCTY2(s[2353]);
initPFOCTY2_I(s[2354]);
initPFOCTY2_IFLAG(s[2355]);
initPFOCTY3(s[2356]);
initPFOCTY3_I(s[2357]);
initPFOCTY3_IFLAG(s[2358]);
initPFOCTY4(s[2359]);
initPFOCTY4_I(s[2360]);
initPFOCTY4_IFLAG(s[2361]);
initPFOCTY5(s[2362]);
initPFOCTY5_I(s[2363]);
initPFOCTY5_IFLAG(s[2364]);
initPFOCTY6(s[2365]);
initPFOCTY6_I(s[2366]);
initPFOCTY6_IFLAG(s[2367]);
initPFPENVB(s[2368]);
initPFPENVB2(s[2369]);
initPFPENVB3(s[2370]);
initPFPENVB4(s[2371]);
initPFPENVB5(s[2372]);
initPFPENVB6(s[2373]);
initPFPENVI(s[2374]);
initPFPENVI2(s[2375]);
initPFPENVI3(s[2376]);
initPFPENVI4(s[2377]);
initPFPENVI5(s[2378]);
initPFPENVI6(s[2379]);
initPFREC(s[2380]);
initPFREC_I(s[2381]);
initPFREC_IFLAG(s[2382]);
initPFREC2(s[2383]);
initPFREC2_I(s[2384]);
initPFREC2_IFLAG(s[2385]);
initPFREC3(s[2386]);
initPFREC3_I(s[2387]);
initPFREC3_IFLAG(s[2388]);
initPFREC4(s[2389]);
initPFREC4_I(s[2390]);
initPFREC4_IFLAG(s[2391]);
initPFREC5(s[2392]);
initPFREC5_I(s[2393]);
initPFREC5_IFLAG(s[2394]);
initPFREC6(s[2395]);
initPFREC6_I(s[2396]);
initPFREC6_IFLAG(s[2397]);
initPFREM(s[2398]);
initPFREM_I(s[2399]);
initPFREM_IFLAG(s[2400]);
initPFREM2(s[2401]);
initPFREM2_I(s[2402]);
initPFREM2_IFLAG(s[2403]);
initPFREM3(s[2404]);
initPFREM3_I(s[2405]);
initPFREM3_IFLAG(s[2406]);
initPFREM4(s[2407]);
initPFREM4_I(s[2408]);
initPFREM4_IFLAG(s[2409]);
initPFREM5(s[2410]);
initPFREM6(s[2411]);
initPFSIPTY1(s[2412]);
initPFSIPTY2(s[2413]);
initPFSIPTY4(s[2414]);
initPFSIPTY5(s[2415]);
initPFSIPTY6(s[2416]);
initPFSIPTY7(s[2417]);
initPFSIPTY8(s[2418]);
initPFSIPTY9(s[2419]);
initPFSIPTY10(s[2420]);
initPFSIPTY11(s[2421]);
initPFSIPTY12(s[2422]);
initPFSIPTY13(s[2423]);
initPFSIPTY14(s[2424]);
initPFSIPTY15(s[2425]);
initPFSIPTY16(s[2426]);
initPFSIPTY17(s[2427]);
initPFSIPTY18(s[2428]);
initPFSIPTY19(s[2429]);
initPFSIPTY22(s[2430]);
initPFSIPTY23(s[2431]);
initPFSIPTY24(s[2432]);
initPFSTMM(s[2433]);
initPFSTMM2(s[2434]);
initPFSTMM3(s[2435]);
initPFSTMM4(s[2436]);
initPFSTMM5(s[2437]);
initPFSTMM6(s[2438]);
initPFSTMY(s[2439]);
initPFSTMY2(s[2440]);
initPFSTMY3(s[2441]);
initPFSTMY4(s[2442]);
initPFSTMY5(s[2443]);
initPFSTMY6(s[2444]);
initPFTYP(s[2445]);
initPFTYP_I(s[2446]);
initPFTYP_IFLAG(s[2447]);
initPFTYP2(s[2448]);
initPFTYP2_I(s[2449]);
initPFTYP2_IFLAG(s[2450]);
initPFTYP3(s[2451]);
initPFTYP3_I(s[2452]);
initPFTYP3_IFLAG(s[2453]);
initPFTYP4(s[2454]);
initPFTYP4_I(s[2455]);
initPFTYP4_IFLAG(s[2456]);
initPFTYP5(s[2457]);
initPFTYP5_I(s[2458]);
initPFTYP5_IFLAG(s[2459]);
initPFTYP6(s[2460]);
initPFTYP6_I(s[2461]);
initPFTYP6_IFLAG(s[2462]);
initPINCINP(s[2463]);
initPINCT(s[2464]);
initPINTRE(s[2465]);
initPINTRN(s[2466]);
initPIRREG(s[2467]);
initPIRREG2(s[2468]);
initPMORTC(s[2469]);
initPMORTC2(s[2470]);
initPMORTC3(s[2471]);
initPNANYO(s[2472]);
initPNCONT(s[2473]);
initPNEWMEM(s[2474]);
initPNUMOS(s[2475]);
initPNUMSC(s[2476]);
initPNUMSC_I(s[2477]);
initPNUMSC_IFLAG(s[2478]);
initPOADD1(s[2479]);
initPOADD1_I(s[2480]);
initPOADD1_IFLAG(s[2481]);
initPOADD2(s[2482]);
initPOADD2_I(s[2483]);
initPOADD2_IFLAG(s[2484]);
initPOADD3(s[2485]);
initPOADD3_I(s[2486]);
initPOADD3_IFLAG(s[2487]);
initPOADD4(s[2488]);
initPOADD4_I(s[2489]);
initPOADD4_IFLAG(s[2490]);
initPOADD5(s[2491]);
initPOADD5_I(s[2492]);
initPOADD5_IFLAG(s[2493]);
initPOADD6(s[2494]);
initPOADD6_I(s[2495]);
initPOADD6_IFLAG(s[2496]);
initPOANEH(s[2497]);
initPOANEH2(s[2498]);
initPOANEXM(s[2499]);
initPOANEXY(s[2500]);
initPOANGA(s[2501]);
initPOANGA2(s[2502]);
initPOANIF(s[2503]);
initPOANIF2(s[2504]);
initPOANJT(s[2505]);
initPOANJT2(s[2506]);
initPOANLM(s[2507]);
initPOANLM2(s[2508]);
initPOANN1(s[2509]);
initPOANN2(s[2510]);
initPOANN3(s[2511]);
initPOANN4(s[2512]);
initPOANN5(s[2513]);
initPOANN6(s[2514]);
initPOANN7(s[2515]);
initPOANN8(s[2516]);
initPOANVB(s[2517]);
initPOANVB2(s[2518]);
initPOANVI(s[2519]);
initPOANVI2(s[2520]);
initPOCASH(s[2521]);
initPOCASH2(s[2522]);
initPOCNAM2(s[2523]);
initPOCNAM3(s[2524]);
initPOCNDRS1(s[2525]);
initPOCNDRS2(s[2526]);
initPOCNDRS3(s[2527]);
initPOCNDRS4(s[2528]);
initPOCNDRS5(s[2529]);
initPOCNDRS6(s[2530]);
initPOCNDRS7(s[2531]);
initPOCNDRS8(s[2532]);
initPOCNDRS9(s[2533]);
initPOCNDRS10(s[2534]);
initPOCNDRS11(s[2535]);
initPOCNDRS12(s[2536]);
initPOCNFG(s[2537]);
initPOCNFG2(s[2538]);
initPOCNFR(s[2539]);
initPOCNFR2(s[2540]);
initPOCNHOW(s[2541]);
initPOCNHO___W2(s[2542]);
initPOCNLRS1(s[2543]);
initPOCNLRS2(s[2544]);
initPOCNLRS3(s[2545]);
initPOCNLRS4(s[2546]);
initPOCNLRS5(s[2547]);
initPOCNLRS6(s[2548]);
initPOCNLRS7(s[2549]);
initPOCNLRS8(s[2550]);
initPOCNMSC(s[2551]);
initPOCNMSC_I(s[2552]);
initPOCNMSC_IFLAG(s[2553]);
initPOCNMSC2(s[2554]);
initPOCNPLN(s[2555]);
initPOCNPLN2(s[2556]);
initPOCNPR(s[2557]);
initPOCNPR2(s[2558]);
initPOCNVOL(s[2559]);
initPOCNVOL2(s[2560]);
initPOCONCH(s[2561]);
initPOCONCH2(s[2562]);
initPOCONH(s[2563]);
initPOCONH2(s[2564]);
initPOCTYP(s[2565]);
initPOCTYP_I(s[2566]);
initPOCTYP_IFLAG(s[2567]);
initPOCTYP2(s[2568]);
initPOCTYP2_I(s[2569]);
initPOCTYP2_IFLAG(s[2570]);
initPODRINC(s[2571]);
initPODRINC2(s[2572]);
initPODRINCB(s[2573]);
initPODRINCB2(s[2574]);
initPODRVB(s[2575]);
initPODRVB2(s[2576]);
initPODRVI(s[2577]);
initPODRVI2(s[2578]);
initPOEMAM(s[2579]);
initPOEMAM2(s[2580]);
initPOEMFG(s[2581]);
initPOEMFG2(s[2582]);
initPOEMFR(s[2583]);
initPOEMFR2(s[2584]);
initPOEMP2(s[2585]);
initPOEMPH(s[2586]);
initPOEMPH2(s[2587]);
initPOEMPR(s[2588]);
initPOEMPR2(s[2589]);
initPOEMP(s[2590]);
initPOFAAG(s[2591]);
initPOFAAG2(s[2592]);
initPOFAN1(s[2593]);
initPOFAN2(s[2594]);
initPOFAN3(s[2595]);
initPOFAN4(s[2596]);
initPOFAN5(s[2597]);
initPOFAN6(s[2598]);
initPOFAN7(s[2599]);
initPOFAN8(s[2600]);
initPOFAN9(s[2601]);
initPOFAN10(s[2602]);
initPOFAN11(s[2603]);
initPOFAN12(s[2604]);
initPOFAWH1(s[2605]);
initPOFAWH2(s[2606]);
initPOFAWH3(s[2607]);
initPOFAWH4(s[2608]);
initPOFAWH5(s[2609]);
initPOFAWH6(s[2610]);
initPOFAWH7(s[2611]);
initPOFAWH8(s[2612]);
initPOFAWH9(s[2613]);
initPOFAWH10(s[2614]);
initPOFAWH11(s[2615]);
initPOFAWH12(s[2616]);
initPOJOIN(s[2617]);
initPOJOIN2(s[2618]);
initPOLMUS1(s[2619]);
initPOLMUS2(s[2620]);
initPOLMUS3(s[2621]);
initPOLMUS4(s[2622]);
initPOLMUS5(s[2623]);
initPOLMUS6(s[2624]);
initPOLMUS7(s[2625]);
initPOLMUS8(s[2626]);
initPOLMUS9(s[2627]);
initPOLMUS10(s[2628]);
initPOLMUS11(s[2629]);
initPOLMUS12(s[2630]);
initPOLMV(s[2631]);
initPOLMV2(s[2632]);
initPOLMVB(s[2633]);
initPOLMVB2(s[2634]);
initPOLSYR(s[2635]);
initPOLSYR2(s[2636]);
initPOLUM(s[2637]);
initPOLUM2(s[2638]);
initPOMETH(s[2639]);
initPOMETH2(s[2640]);
initPOPENVB(s[2641]);
initPOPENVB2(s[2642]);
initPOPENVI(s[2643]);
initPOPENVI2(s[2644]);
initPOPYCH(s[2645]);
initPOPYCH2(s[2646]);
initPOYRAM(s[2647]);
initPOYRAM2(s[2648]);
initPPACCU(s[2649]);
initPPACCU2(s[2650]);
initPPACCU3(s[2651]);
initPPANEH(s[2652]);
initPPANEH2(s[2653]);
initPPANEH3(s[2654]);
initPPANEXM(s[2655]);
initPPANEXM2(s[2656]);
initPPANEXM3(s[2657]);
initPPANEXY(s[2658]);
initPPANEXY2(s[2659]);
initPPANEXY3(s[2660]);
initPPANGA(s[2661]);
initPPANGA2(s[2662]);
initPPANGA3(s[2663]);
initPPANIF(s[2664]);
initPPANIF2(s[2665]);
initPPANIF3(s[2666]);
initPPANJT(s[2667]);
initPPANJT2(s[2668]);
initPPANJT3(s[2669]);
initPPANLM(s[2670]);
initPPANLM2(s[2671]);
initPPANLM3(s[2672]);
initPPANN1(s[2673]);
initPPANN2(s[2674]);
initPPANN3(s[2675]);
initPPANN4(s[2676]);
initPPANN5(s[2677]);
initPPANN6(s[2678]);
initPPANN7(s[2679]);
initPPANN8(s[2680]);
initPPANN9(s[2681]);
initPPANN10(s[2682]);
initPPANN11(s[2683]);
initPPANN12(s[2684]);
initPPANVB(s[2685]);
initPPANVB2(s[2686]);
initPPANVB3(s[2687]);
initPPANVI(s[2688]);
initPPANVI2(s[2689]);
initPPANVI3(s[2690]);
initPPCASH(s[2691]);
initPPCASH2(s[2692]);
initPPCASH3(s[2693]);
initPPCNDRS1(s[2694]);
initPPCNDRS2(s[2695]);
initPPCNDRS3(s[2696]);
initPPCNDRS9(s[2697]);
initPPCNDRS17(s[2698]);
initPPCNHOW(s[2699]);
initPPCNHO___W2(s[2700]);
initPPCNHOW3(s[2701]);
initPPCNLRS1(s[2702]);
initPPCNLRS2(s[2703]);
initPPCNLRS3(s[2704]);
initPPCNLRS5(s[2705]);
initPPCNLRS9(s[2706]);
initPPCNPLN(s[2707]);
initPPCNPLN2(s[2708]);
initPPCNPLN3(s[2709]);
initPPCONCH(s[2710]);
initPPCONCH2(s[2711]);
initPPCONCH3(s[2712]);
initPPDOCS(s[2713]);
initPPDOCS2(s[2714]);
initPPDOCS3(s[2715]);
initPPDRINC(s[2716]);
initPPDRINC2(s[2717]);
initPPDRINC3(s[2718]);
initPPDRINCB(s[2719]);
initPPDRINCB2(s[2720]);
initPPDRVB(s[2721]);
initPPDRVB2(s[2722]);
initPPDRVB3(s[2723]);
initPPDRVI(s[2724]);
initPPDRVI2(s[2725]);
initPPDRVI3(s[2726]);
initPPEIRA(s[2727]);
initPPEIRA2(s[2728]);
initPPEIRA3(s[2729]);
initPPEIRF(s[2730]);
initPPEIRF2(s[2731]);
initPPEIRF3(s[2732]);
initPPEIRH(s[2733]);
initPPEIRH2(s[2734]);
initPPEIRH3(s[2735]);
initPPEMAM(s[2736]);
initPPEMAM2(s[2737]);
initPPEMAM3(s[2738]);
initPPEMFR(s[2739]);
initPPEMFR2(s[2740]);
initPPEMFR3(s[2741]);
initPPEMP(s[2742]);
initPPEMP2(s[2743]);
initPPEMP3(s[2744]);
initPPEMPH(s[2745]);
initPPEMPH2(s[2746]);
initPPEMPH3(s[2747]);
initPPEMPR(s[2748]);
initPPEMPR2(s[2749]);
initPPEMPR3(s[2750]);
initPPEVRG2(s[2751]);
initPPEVRG3(s[2752]);
initPPEVRG(s[2753]);
initPPFAAG(s[2754]);
initPPFAAG2(s[2755]);
initPPFAAG3(s[2756]);
initPPFAN1(s[2757]);
initPPFAN2(s[2758]);
initPPFAN3(s[2759]);
initPPFAN4(s[2760]);
initPPFAN5(s[2761]);
initPPFAN6(s[2762]);
initPPFAN7(s[2763]);
initPPFAN8(s[2764]);
initPPFAN9(s[2765]);
initPPFAN10(s[2766]);
initPPFAN11(s[2767]);
initPPFAN12(s[2768]);
initPPFAN13(s[2769]);
initPPFAN14(s[2770]);
initPPFAN15(s[2771]);
initPPFAWH1(s[2772]);
initPPFAWH2(s[2773]);
initPPFAWH3(s[2774]);
initPPFAWH4(s[2775]);
initPPFAWH5(s[2776]);
initPPFAWH6(s[2777]);
initPPFAWH7(s[2778]);
initPPFAWH8(s[2779]);
initPPFAWH9(s[2780]);
initPPFAWH10(s[2781]);
initPPFAWH11(s[2782]);
initPPFAWH12(s[2783]);
initPPFAWH13(s[2784]);
initPPFAWH14(s[2785]);
initPPFAWH15(s[2786]);
initPPFAWH16(s[2787]);
initPPFAWH17(s[2788]);
initPPFAWH18(s[2789]);
initPPFAWH19(s[2790]);
initPPFAWH20(s[2791]);
initPPFAWH21(s[2792]);
initPPIRNO(s[2793]);
initPPIRNO2(s[2794]);
initPPIRNO3(s[2795]);
initPPIRRA(s[2796]);
initPPIRRA2(s[2797]);
initPPIRRA3(s[2798]);
initPPIRRF(s[2799]);
initPPIRRF2(s[2800]);
initPPIRRF3(s[2801]);
initPPIRRH(s[2802]);
initPPIRRH2(s[2803]);
initPPIRRH3(s[2804]);
initPPIRRY(s[2805]);
initPPIRRY2(s[2806]);
initPPIRRY3(s[2807]);
initPPLASY(s[2808]);
initPPLASY2(s[2809]);
initPPLASY3(s[2810]);
initPPLMUS(s[2811]);
initPPLMUS2(s[2812]);
initPPLMUS3(s[2813]);
initPPLMV(s[2814]);
initPPLMV2(s[2815]);
initPPLMV3(s[2816]);
initPPLMVB(s[2817]);
initPPLMVB2(s[2818]);
initPPLMVB3(s[2819]);
initPPLSTA(s[2820]);
initPPLSTA2(s[2821]);
initPPLSTA3(s[2822]);
initPPLSTP(s[2823]);
initPPLSTP2(s[2824]);
initPPLSTP3(s[2825]);
initPPLUM(s[2826]);
initPPLUM2(s[2827]);
initPPLUM3(s[2828]);
initPPNINS(s[2829]);
initPPNINS2(s[2830]);
initPPNINS3(s[2831]);
initPPORG(s[2832]);
initPPORG2(s[2833]);
initPPORG3(s[2834]);
initPPPAY(s[2835]);
initPPPAY2(s[2836]);
initPPPAY3(s[2837]);
initPPRGAM(s[2838]);
initPPRGAM2(s[2839]);
initPPRGAM3(s[2840]);
initPPRGFG(s[2841]);
initPPRGFG2(s[2842]);
initPPRGFG3(s[2843]);
initPPRGFR(s[2844]);
initPPRGFR2(s[2845]);
initPPRGFR3(s[2846]);
initPPRGH(s[2847]);
initPPRGH2(s[2848]);
initPPRGH3(s[2849]);
initPPRGPE(s[2850]);
initPPRGPE2(s[2851]);
initPPRGPE3(s[2852]);
initPPRNMSC(s[2853]);
initPPRNMSC_I(s[2854]);
initPPRNMSC_IFLAG(s[2855]);
initPPSIPP(s[2856]);
initPPSIPP2(s[2857]);
initPPSIPP3(s[2858]);
initPPSTMN(s[2859]);
initPPSTMN2(s[2860]);
initPPSTMN3(s[2861]);
initPPSTYR(s[2862]);
initPPSTYR2(s[2863]);
initPPSTYR3(s[2864]);
initPPTYP(s[2865]);
initPPTYP2(s[2866]);
initPPTYP3(s[2867]);
initPPVAL(s[2868]);
initPPVAL_I(s[2869]);
initPPVAL_IFLAG(s[2870]);
initPPVAL2(s[2871]);
initPPVAL2_I(s[2872]);
initPPVAL2_IFLAG(s[2873]);
initPPVAL3(s[2874]);
initPPVAL3_I(s[2875]);
initPPVAL3_IFLAG(s[2876]);
initPPVALB(s[2877]);
initPPVALB2(s[2878]);
initPPVALB3(s[2879]);
initPPYRST(s[2880]);
initPPYRST2(s[2881]);
initPPYRST3(s[2882]);
initPPYSTP1(s[2883]);
initPPYSTP2(s[2884]);
initPPYSTP3(s[2885]);
initPPYSTP8(s[2886]);
initPPYSTP9(s[2887]);
initPPYSTP10(s[2888]);
initPPYSTP15(s[2889]);
initPRACCU(s[2890]);
initPRACCU2(s[2891]);
initPRACCU3(s[2892]);
initPRACCU5(s[2893]);
initPRACCU6(s[2894]);
initPRETAIN(s[2895]);
initPRETAIN_I(s[2896]);
initPRETAIN_IFLAG(s[2897]);
initPREVPENS(s[2898]);
initPSCHM_F(s[2899]);
initPSCHM_F_I(s[2900]);
initPSCHM_F_IFLAG(s[2901]);
initPSCHM_S(s[2902]);
initPSCHM_S_I(s[2903]);
initPSCHM_S_IFLAG(s[2904]);
initPSCHM_T(s[2905]);
initPSCHM_T_I(s[2906]);
initPSCHM_T_IFLAG(s[2907]);
initPSCHY_F(s[2908]);
initPSCHY_S(s[2909]);
initPSCHY_T(s[2910]);
initPSPEXPA(s[2911]);
initPSPEXPA_I(s[2912]);
initPSPEXPA_IFLAG(s[2913]);
initPSPEXPH(s[2914]);
initPSPEXPH_I(s[2915]);
initPSPEXPH_IFLAG(s[2916]);
initPSPLUM(s[2917]);
initPSPLUVAL(s[2918]);
initPSPSE(s[2919]);
initPSPSE_I(s[2920]);
initPSPSE_IFLAG(s[2921]);
initPSTYPE1(s[2922]);
initPSTYPE2(s[2923]);
initPSTYPE3(s[2924]);
initPSTYPE4(s[2925]);
initPSTYPE5(s[2926]);
initPSTYPE6(s[2927]);
initPSTYPE7(s[2928]);
initPSTYPE8(s[2929]);
initPSTYPE9(s[2930]);
initPSTYPE10(s[2931]);
initPSTYPE11(s[2932]);
initPSTYPE12(s[2933]);
initPSTYPE13(s[2934]);
initPSTYPE14(s[2935]);
initPSTYPE15(s[2936]);
initPSTYPE16(s[2937]);
initPSTYPE17(s[2938]);
initPSTYPE18(s[2939]);
initPSTYPE19(s[2940]);
initPSTYPE20(s[2941]);
initPWEXPA(s[2942]);
initPWEXPA_I(s[2943]);
initPWEXPA_IFLAG(s[2944]);
initPWEXPH(s[2945]);
initPWEXPH_I(s[2946]);
initPWEXPH_IFLAG(s[2947]);
initPWIDFUT(s[2948]);
initPWIDFUT_I(s[2949]);
initPWIDFUT_IFLAG(s[2950]);
initPWLUM(s[2951]);
initPWLUVAL(s[2952]);
initACCFRAC(s[2953]);
initACCFRAC2(s[2954]);
initASAFT(s[2955]);
initASAF2T(s[2956]);
initDCVAL1(s[2957]);
initDCVAL2(s[2958]);
initDVDBINC1(s[2959]);
initDVDBINC2(s[2960]);
initDVDBINC3(s[2961]);
initDVDBINC4(s[2962]);
initDVDBINC5(s[2963]);
initDVDBINC6(s[2964]);
initDVDBINCALL(s[2965]);
initDVDBLUMP1(s[2966]);
initDVDBLUMP2(s[2967]);
initDVDBLUMP3(s[2968]);
initDVDBLUMP4(s[2969]);
initDVDBLUMP5(s[2970]);
initDVDBLUMP6(s[2971]);
initDVDBOPEN2T(s[2972]);
initDVDBOPENT(s[2973]);
initDVDBRWEALTHVAL(s[2974]);
initDVHASAVC(s[2975]);
initDVHASDB(s[2976]);
initDVHASDC(s[2977]);
initDVHASPFCUR(s[2978]);
initDVHASPFD(s[2979]);
initDVHASPP(s[2980]);
initDVPAVCUV(s[2981]);
initDVPENINC2(s[2982]);
initDVPENINC(s[2983]);
initDVPFCURVAL(s[2984]);
initDVPFDDV(s[2985]);
initDVPINPVAL(s[2986]);
initDVPPVAL(s[2987]);
initDVPUBLPRIV(s[2988]);
initDVSPEN(s[2989]);
initDVSPS(s[2990]);
initDVVALDBLUM(s[2991]);
initDVVALDBT(s[2992]);
initDVVALDCOS(s[2993]);
initDVVALPBLUM(s[2994]);
initDVWID(s[2995]);
initPORAGET(s[2996]);
initPORAGE2T(s[2997]);
initPWID(s[2998]);
initSPASAF(s[2999]);
initTOTPEN(s[3000]);
initVALPBLUM1(s[3001]);
initVALPBLUM2(s[3002]);
initCHOIC(s[3003]);
initCHOIC2(s[3004]);
initCHOIC3(s[3005]);
initCHOIC4(s[3006]);
initCHOIC5(s[3007]);
initCHOIC6(s[3008]);
initCHOIC7(s[3009]);
initCHOIC8(s[3010]);
initCHOIC9(s[3011]);
initCHOIC10(s[3012]);
initCHOICP(s[3013]);
initCHOICP2(s[3014]);
initCHOICP3(s[3015]);
initCHOICP4(s[3016]);
initCHOICP5(s[3017]);
initCHOICP6(s[3018]);
initCHOICP7(s[3019]);
initCHOICP8(s[3020]);
initCHOICP9(s[3021]);
initCHOICP10(s[3022]);
initCHOICP11(s[3023]);
initCHOICP18(s[3024]);
initCHOICP19(s[3025]);
initCOMMI(s[3026]);
initCONTSUB(s[3027]);
initCUTBACK(s[3028]);
initECHLCAR(s[3029]);
initECHLSUP(s[3030]);
initEFOOD(s[3031]);
initEFUEL(s[3032]);
initEINTRO(s[3033]);
initELARGE1(s[3034]);
initELARGE2(s[3035]);
initELARGE3(s[3036]);
initELARGE4(s[3037]);
initELARGE5(s[3038]);
initELARGE6(s[3039]);
initELARGE7(s[3040]);
initELARGE8(s[3041]);
initELGEAMB(s[3042]);
initEMEALS(s[3043]);
initETRANS(s[3044]);
initEYE1(s[3045]);
initEYE2(s[3046]);
initEYE3(s[3047]);
initEYE4(s[3048]);
initEYE5(s[3049]);
initEYE6(s[3050]);
initEYE7(s[3051]);
initEYE8(s[3052]);
initFNDCASH01(s[3053]);
initFNDCASH02(s[3054]);
initFNDCASH03(s[3055]);
initFNDCASH04(s[3056]);
initFNDCASH05(s[3057]);
initFNDCASH06(s[3058]);
initFNDCASH07(s[3059]);
initFNDCASH08(s[3060]);
initFNDCASH09(s[3061]);
initFNDCASH10(s[3062]);
initFNDCASH11(s[3063]);
initFNDCASH12(s[3064]);
initFNDCASH13(s[3065]);
initFNDCASH14(s[3066]);
initFNDCASH15(s[3067]);
initFNDCASH16(s[3068]);
initGSTDNW(s[3069]);
initINCDROP(s[3070]);
initINDFREQ(s[3071]);
initLVTDAY(s[3072]);
initOEXPINC01(s[3073]);
initOEXPINC02(s[3074]);
initOEXPINC03(s[3075]);
initOEXPINC04(s[3076]);
initOEXPINC05(s[3077]);
initOEXPINC06(s[3078]);
initOEXPINC07(s[3079]);
initOEXPINC08(s[3080]);
initOEXPINC09(s[3081]);
initOEXPINC10(s[3082]);
initOEXPINC11(s[3083]);
initOEXPINC12(s[3084]);
initOEXPINC13(s[3085]);
initOEXPINC14(s[3086]);
initOEXPINC15(s[3087]);
initOINTEND(s[3088]);
initOLEFTDO(s[3089]);
initOLEFT(s[3090]);
initOLONG(s[3091]);
initOLONGYR(s[3092]);
initONOSAVE1(s[3093]);
initONOSAVE2(s[3094]);
initONOSAVE3(s[3095]);
initONOSAVE4(s[3096]);
initONOSAVE5(s[3097]);
initONOSAVE6(s[3098]);
initONOSAVE7(s[3099]);
initONOSAVE8(s[3100]);
initONOSAVE9(s[3101]);
initORGNSED(s[3102]);
initORISKA(s[3103]);
initORISKC(s[3104]);
initORUNDO01(s[3105]);
initORUNDO02(s[3106]);
initORUNDO03(s[3107]);
initORUNDO04(s[3108]);
initORUNDO05(s[3109]);
initORUNDO06(s[3110]);
initORUNDO07(s[3111]);
initORUNDO08(s[3112]);
initORUNOUT(s[3113]);
initOSAFERE2(s[3114]);
initOSAFERET(s[3115]);
initOSAV2Y(s[3116]);
initOSAVA(s[3117]);
initOSAVB(s[3118]);
initOSAVC(s[3119]);
initOSAVEXT(s[3120]);
initOUNDER(s[3121]);
initOWAIT(s[3122]);
initOWHYSAV01(s[3123]);
initOWHYSAV02(s[3124]);
initOWHYSAV03(s[3125]);
initOWHYSAV04(s[3126]);
initOWHYSAV05(s[3127]);
initOWHYSAV06(s[3128]);
initOWHYSAV07(s[3129]);
initOWHYSAV08(s[3130]);
initOWHYSAV09(s[3131]);
initOWHYSAV10(s[3132]);
initOWRSRS01(s[3133]);
initOWRSRS02(s[3134]);
initOWRSRS03(s[3135]);
initOWRSRS04(s[3136]);
initOWRSRS05(s[3137]);
initOWRSRS06(s[3138]);
initOWRSRS07(s[3139]);
initOWRSRS08(s[3140]);
initOWRSRS09(s[3141]);
initOWRSRS10(s[3142]);
initPRODTS01(s[3143]);
initPRODTS02(s[3144]);
initPRODTS03(s[3145]);
initPRODTS04(s[3146]);
initPRODTS05(s[3147]);
initPRODTS06(s[3148]);
initPRODTS07(s[3149]);
initPRODTS08(s[3150]);
initPRODTS09(s[3151]);
initPRODTS10(s[3152]);
initPRODTS11(s[3153]);
initPRODTS12(s[3154]);
initPRODTS201(s[3155]);
initPRODTS202(s[3156]);
initPRODTS203(s[3157]);
initPRODTS204(s[3158]);
initPRODTS205(s[3159]);
initPRODTS206(s[3160]);
initPRODTS207(s[3161]);
initPRODTS208(s[3162]);
initPRODTS209(s[3163]);
initPRODTS210(s[3164]);
initRNYDAY(s[3165]);
initSOURC2(s[3166]);
initSOURC3(s[3167]);
initSOURC4(s[3168]);
initSOURC5(s[3169]);
initSOURC6(s[3170]);
initSOURC7(s[3171]);
initSOURC8(s[3172]);
initSOURC9(s[3173]);
initSOURC01(s[3174]);
initSOURC02(s[3175]);
initSOURC03(s[3176]);
initSOURC04(s[3177]);
initSOURC05(s[3178]);
initSOURC06(s[3179]);
initSOURC07(s[3180]);
initSOURC08(s[3181]);
initSOURC09(s[3182]);
initSOURC18(s[3183]);
initSOURC19(s[3184]);
initSOURC20(s[3185]);
initSOURC21(s[3186]);
initSOURC22(s[3187]);
initSOURC23(s[3188]);
initSOURC24(s[3189]);
initSOURC25(s[3190]);
initSOURC26(s[3191]);
initSOURC35(s[3192]);
initSOURC36(s[3193]);
initSOURC37(s[3194]);
initSOURC38(s[3195]);
initSOURC39(s[3196]);
initSOURC40(s[3197]);
initSOURC41(s[3198]);
initSOURC52(s[3199]);
initSOURC53(s[3200]);
initSOURC54(s[3201]);
initSOURC55(s[3202]);
initSOURC56(s[3203]);
initSOURC57(s[3204]);
initSOURC58(s[3205]);
initSOURC69(s[3206]);
initSOURC70(s[3207]);
initSOURC71(s[3208]);
initSOURC72(s[3209]);
initSOURC73(s[3210]);
initSOURC74(s[3211]);
initSOURC75(s[3212]);
initSOURC86(s[3213]);
initSOURC87(s[3214]);
initSOURC88(s[3215]);
initSOURC89(s[3216]);
initSOURC90(s[3217]);
initSOURC91(s[3218]);
initSOURC92(s[3219]);
initSOURC103(s[3220]);
initSOURC104(s[3221]);
initSOURC105(s[3222]);
initSOURC106(s[3223]);
initSOURC107(s[3224]);
initSOURC108(s[3225]);
initSOURC109(s[3226]);
initSOURC120(s[3227]);
initSOURC121(s[3228]);
initSOURC122(s[3229]);
initSOURC123(s[3230]);
initSOURC124(s[3231]);
initSOURC125(s[3232]);
initSOURC126(s[3233]);
initSOURC137(s[3234]);
initSOURC154(s[3235]);
initSOURC155(s[3236]);
initSOURC156(s[3237]);
initSOURC172(s[3238]);
initSOURCP01(s[3239]);
initSOURCP02(s[3240]);
initSOURCP03(s[3241]);
initSOURCP04(s[3242]);
initSOURCP05(s[3243]);
initSOURCP06(s[3244]);
initSOURCP07(s[3245]);
initSOURCP08(s[3246]);
initSOURCP09(s[3247]);
initSOURCP11(s[3248]);
initSOURCP12(s[3249]);
initSOURCP18(s[3250]);
initSOURCP19(s[3251]);
initSOURCP20(s[3252]);
initSOURCP21(s[3253]);
initSOURCP22(s[3254]);
initSOURCP23(s[3255]);
initSOURCP24(s[3256]);
initSOURCP25(s[3257]);
initSOURCP26(s[3258]);
initSOURCP27(s[3259]);
initSOURCP28(s[3260]);
initSOURCP35(s[3261]);
initSOURCP36(s[3262]);
initSOURCP37(s[3263]);
initSOURCP38(s[3264]);
initSOURCP39(s[3265]);
initSOURCP40(s[3266]);
initSOURCP41(s[3267]);
initSOURCP42(s[3268]);
initSOURCP43(s[3269]);
initSOURCP44(s[3270]);
initSOURCP52(s[3271]);
initSOURCP53(s[3272]);
initSOURCP54(s[3273]);
initSOURCP55(s[3274]);
initSOURCP56(s[3275]);
initSOURCP57(s[3276]);
initSOURCP58(s[3277]);
initSOURCP59(s[3278]);
initSOURCP60(s[3279]);
initSOURCP61(s[3280]);
initSOURCP69(s[3281]);
initSOURCP70(s[3282]);
initSOURCP71(s[3283]);
initSOURCP72(s[3284]);
initSOURCP73(s[3285]);
initSOURCP74(s[3286]);
initSOURCP75(s[3287]);
initSOURCP76(s[3288]);
initSOURCP86(s[3289]);
initSOURCP87(s[3290]);
initSOURCP88(s[3291]);
initSOURCP89(s[3292]);
initSOURCP90(s[3293]);
initSOURCP102(s[3294]);
initSOURCP103(s[3295]);
initSOURCP104(s[3296]);
initSOURCP105(s[3297]);
initSOURCP106(s[3298]);
initSOURCP107(s[3299]);
initSOURCP120(s[3300]);
initSOURCP121(s[3301]);
initSOURCP122(s[3302]);
initSOURCP123(s[3303]);
initSOURCP124(s[3304]);
initSOURCP125(s[3305]);
initSOURCP137(s[3306]);
initSOURCP154(s[3307]);
initSOURCP155(s[3308]);
initSOURCP171(s[3309]);
initSOURCP290(s[3310]);
initSOURC2P(s[3311]);
initSOURC2P2(s[3312]);
initSOURC2P3(s[3313]);
initSOURC2P4(s[3314]);
initSOURC2P5(s[3315]);
initSOURC2P6(s[3316]);
initSOURC2P7(s[3317]);
initSOURC2P8(s[3318]);
initSOURC2P9(s[3319]);
initSOURC2P10(s[3320]);
initSOURC2P11(s[3321]);
initSPENDM(s[3322]);
initATTALL(s[3323]);
initATTEND(s[3324]);
initBACCBEG2(s[3325]);
initBACCBEG3(s[3326]);
initBACCBEG(s[3327]);
initBACCEND2(s[3328]);
initBACCEND3(s[3329]);
initBACCEND(s[3330]);
initBACCSA2(s[3331]);
initBACCSA3(s[3332]);
initBACCSA(s[3333]);
initBACCSB2(s[3334]);
initBACCSB3(s[3335]);
initBACCSB(s[3336]);
initBAMT10(s[3337]);
initBAMT11(s[3338]);
initBAMT12(s[3339]);
initBAMT13(s[3340]);
initBAMT14(s[3341]);
initBAMT15(s[3342]);
initBAMT16(s[3343]);
initBAMT17(s[3344]);
initBAMT18(s[3345]);
initBAMT19(s[3346]);
initBAMT2(s[3347]);
initBAMT3(s[3348]);
initBAMT4(s[3349]);
initBAMT5(s[3350]);
initBAMT6(s[3351]);
initBAMT7(s[3352]);
initBAMT8(s[3353]);
initBAMT9(s[3354]);
initBAMTDK10(s[3355]);
initBAMTDK11(s[3356]);
initBAMTDK12(s[3357]);
initBAMTDK13(s[3358]);
initBAMTDK14(s[3359]);
initBAMTDK15(s[3360]);
initBAMTDK16(s[3361]);
initBAMTDK17(s[3362]);
initBAMTDK18(s[3363]);
initBAMTDK19(s[3364]);
initBAMTDK2(s[3365]);
initBAMTDK3(s[3366]);
initBAMTDK4(s[3367]);
initBAMTDK5(s[3368]);
initBAMTDK6(s[3369]);
initBAMTDK7(s[3370]);
initBAMTDK8(s[3371]);
initBAMTDK9(s[3372]);
initBAMTDK(s[3373]);
initBAMT(s[3374]);
initBBEFORE2(s[3375]);
initBBEFORE3(s[3376]);
initBBEFORE(s[3377]);
initBDEBTS2(s[3378]);
initBDEBTS3(s[3379]);
initBDEBTS(s[3380]);
initBDIRNI2(s[3381]);
initBDIRNI3(s[3382]);
initBDIRNI(s[3383]);
initBDOCS2(s[3384]);
initBDOCS3(s[3385]);
initBDOCS(s[3386]);
initBEMPN2(s[3387]);
initBEMPN3(s[3388]);
initBEMPN(s[3389]);
initBEN1Q1(s[3390]);
initBEN1Q2(s[3391]);
initBEN1Q3(s[3392]);
initBEN1Q4(s[3393]);
initBEN2Q1(s[3394]);
initBEN2Q2(s[3395]);
initBEN2Q3(s[3396]);
initBENUS(s[3397]);
initBFUND10(s[3398]);
initBFUND11(s[3399]);
initBFUND12(s[3400]);
initBFUND13(s[3401]);
initBFUND14(s[3402]);
initBFUND15(s[3403]);
initBFUND16(s[3404]);
initBFUND17(s[3405]);
initBFUND18(s[3406]);
initBFUND19(s[3407]);
initBFUND1(s[3408]);
initBFUND20(s[3409]);
initBFUND21(s[3410]);
initBFUND22(s[3411]);
initBFUND23(s[3412]);
initBFUND24(s[3413]);
initBFUND2(s[3414]);
initBFUND3(s[3415]);
initBFUND4(s[3416]);
initBFUND5(s[3417]);
initBFUND6(s[3418]);
initBFUND7(s[3419]);
initBFUND8(s[3420]);
initBFUND9(s[3421]);
initBMOREBUS(s[3422]);
initBNATINS2(s[3423]);
initBNATINS3(s[3424]);
initBNATINS(s[3425]);
initBONAMT(s[3426]);
initBONTAX(s[3427]);
initBOWED2(s[3428]);
initBOWED3(s[3429]);
initBOWED(s[3430]);
initBOWN2(s[3431]);
initBOWN3(s[3432]);
initBOWN(s[3433]);
initBPART2(s[3434]);
initBPART3(s[3435]);
initBPART(s[3436]);
initBPAST(s[3437]);
initBPD10(s[3438]);
initBPD11(s[3439]);
initBPD12(s[3440]);
initBPD13(s[3441]);
initBPD14(s[3442]);
initBPD15(s[3443]);
initBPD16(s[3444]);
initBPD17(s[3445]);
initBPD18(s[3446]);
initBPD19(s[3447]);
initBPD2(s[3448]);
initBPD3(s[3449]);
initBPD4(s[3450]);
initBPD5(s[3451]);
initBPD6(s[3452]);
initBPD7(s[3453]);
initBPD8(s[3454]);
initBPD9(s[3455]);
initBPD(s[3456]);
initBPRFLOSS2(s[3457]);
initBPRFLOSS3(s[3458]);
initBPRFLOSS(s[3459]);
initBPROFIT2(s[3460]);
initBPROFIT3(s[3461]);
initBPROFIT(s[3462]);
initBPROPN2(s[3463]);
initBPROPN3(s[3464]);
initBPROPN(s[3465]);
initBRETIRE2(s[3466]);
initBRETIRE3(s[3467]);
initBRETIRE(s[3468]);
initBSELLAB(s[3469]);
initBSELLAM(s[3470]);
initBSELLTX(s[3471]);
initBSELLYR(s[3472]);
initBSIZE2(s[3473]);
initBSIZE3(s[3474]);
initBSIZE(s[3475]);
initBSTART2(s[3476]);
initBSTART3(s[3477]);
initBSTART(s[3478]);
initBTAX2(s[3479]);
initBTAX3(s[3480]);
initBTAX(s[3481]);
initBTYPE2(s[3482]);
initBTYPE3(s[3483]);
initBTYPE(s[3484]);
initBUAMT(s[3485]);
initBUPD(s[3486]);
initBVAL2(s[3487]);
initBVAL3(s[3488]);
initBVALB2(s[3489]);
initBVALB3(s[3490]);
initBVALB(s[3491]);
initBVALQ2(s[3492]);
initBVALQ3(s[3493]);
initBVALQ(s[3494]);
initBVAL(s[3495]);
initBVALWH10(s[3496]);
initBVALWH11(s[3497]);
initBVALWH12(s[3498]);
initBVALWH13(s[3499]);
initBVALWH14(s[3500]);
initBVALWH15(s[3501]);
initBVALWH16(s[3502]);
initBVALWH17(s[3503]);
initBVALWH18(s[3504]);
initBVALWH1(s[3505]);
initBVALWH2(s[3506]);
initBVALWH3(s[3507]);
initBVALWH4(s[3508]);
initBVALWH5(s[3509]);
initBVALWH6(s[3510]);
initBVALWH7(s[3511]);
initBVALWH8(s[3512]);
initBVALWH9(s[3513]);
initBWORTHB(s[3514]);
initBWORTH(s[3515]);
initBYEAR2(s[3516]);
initBYEAR3(s[3517]);
initBYEAR(s[3518]);
initCAREDUR(s[3519]);
initCAREHR(s[3520]);
initCAREPS(s[3521]);
initCARER1Q(s[3522]);
initCOMBAM(s[3523]);
initCOMBPD(s[3524]);
initCOMBWK(s[3525]);
initCOURSE(s[3526]);
initCTBEN(s[3527]);
initCURSTAT(s[3528]);
initDISBEN1(s[3529]);
initDISBEN2(s[3530]);
initDISBEN3(s[3531]);
initDISEVER(s[3532]);
initDISTYPE1(s[3533]);
initDISTYPE2(s[3534]);
initDISTYPE3(s[3535]);
initDISTYPE4(s[3536]);
initDISTYPE5(s[3537]);
initDISTYPE6(s[3538]);
initDISTYPE7(s[3539]);
initDISTYPE8(s[3540]);
initDISTYPE9(s[3541]);
initDTJBL(s[3542]);
initDVAGE4(s[3543]);
initDVAGE5(s[3544]);
initDVAGE6(s[3545]);
initDVAGE9(s[3546]);
initDVGRSPAY(s[3547]);
initDVILO3A(s[3548]);
initDVILO4A(s[3549]);
initDVJB12ML(s[3550]);
initDVMRDF(s[3551]);
initDVNETPAY(s[3552]);
initDVSAME(s[3553]);
initEDAGE(s[3554]);
initEDATTN1(s[3555]);
initEDATTN2(s[3556]);
initEDATTN3(s[3557]);
initEDLEVEL(s[3558]);
initEMPNO(s[3559]);
initEMPN(s[3560]);
initEMPSTY(s[3561]);
initEMSHAR1(s[3562]);
initEMSHAR2(s[3563]);
initEMSHAR3(s[3564]);
initENROLL(s[3565]);
initES2000(s[3566]);
initESATYPE(s[3567]);
initFBFAED(s[3568]);
initFBMOED(s[3569]);
initFBSIBS(s[3570]);
initFBSITU(s[3571]);
initFBTEN(s[3572]);
initFTED19(s[3573]);
initFTED(s[3574]);
initFTHECST(s[3575]);
initFTPTWK(s[3576]);
initFTSTUD(s[3577]);
initGROSSPER(s[3578]);
initGRSAMK(s[3579]);
initGRSEESM(s[3580]);
initGRSEESW(s[3581]);
initGRSESM(s[3582]);
initGRSESP(s[3583]);
initGRSSEMJB(s[3584]);
initHASCHD(s[3585]);
initHASDEP(s[3586]);
initHASNDEP(s[3587]);
initHOUSBEN(s[3588]);
initILLLIM(s[3589]);
initINTRO(s[3590]);
initISADULT(s[3591]);
initISCH1618(s[3592]);
initISCHILD(s[3593]);
initISDEP(s[3594]);
initISHRPPART(s[3595]);
initISHRP(s[3596]);
initISNDEP(s[3597]);
initJBAWAY(s[3598]);
initJOBNO(s[3599]);
initLIVWTH(s[3600]);
initLKTIME(s[3601]);
initLOOKED(s[3602]);
initLSILL(s[3603]);
initMARBEF(s[3604]);
initMARSTA(s[3605]);
initMRECJB(s[3606]);
initMTHECST(s[3607]);
initNSSEC3(s[3608]);
initNSSEC5(s[3609]);
initNSSEC8(s[3610]);
initNSSECB(s[3611]);
initOIGGT(s[3612]);
initOIGRR(s[3613]);
initOINEG(s[3614]);
initOINFR(s[3615]);
initOINGT(s[3616]);
initOINMA(s[3617]);
initOINOP(s[3618]);
initOINRO(s[3619]);
initOINRR(s[3620]);
initONETEN(s[3621]);
initOVERSPA(s[3622]);
initOWNBUS(s[3623]);
initPAGERET(s[3624]);
initPAGESTP(s[3625]);
initPARTNER(s[3626]);
initPARTNO(s[3627]);
initPAYBON(s[3628]);
initPAYESM(s[3629]);
initPAYESP(s[3630]);
initPAYINC1(s[3631]);
initPAYINC2(s[3632]);
initPAYINC3(s[3633]);
initPAYINC4(s[3634]);
initPAYINC5(s[3635]);
initPAYINC6(s[3636]);
initPAYINC7(s[3637]);
initPAYPER(s[3638]);
initPAYSLP(s[3639]);
initPEARLRS(s[3640]);
initPERMJB(s[3641]);
initPERNOWK(s[3642]);
initPERSPROX(s[3643]);
initPEXPRET(s[3644]);
initPFULRET(s[3645]);
initPNOWKLN(s[3646]);
initPNOWK(s[3647]);
initPRCRELIG(s[3648]);
initPROXPERS(s[3649]);
initPROXYNUM(s[3650]);
initPSITF(s[3651]);
initPSIT(s[3652]);
initQHEALTH1(s[3653]);
initQUALCHK(s[3654]);
initR01(s[3655]);
initR02(s[3656]);
initR03(s[3657]);
initR04(s[3658]);
initR05(s[3659]);
initR06(s[3660]);
initR07(s[3661]);
initR08(s[3662]);
initR09(s[3663]);
initR10(s[3664]);
initR11(s[3665]);
initREGLRPY1(s[3666]);
initREGLRPY2(s[3667]);
initRELBUS(s[3668]);
initRENTAMT(s[3669]);
initRENTPAY(s[3670]);
initSAMEJOB1(s[3671]);
initSAMEJOB2(s[3672]);
initSAMEJOB3(s[3673]);
initSAMEJOB4(s[3674]);
initSAMEJOB5(s[3675]);
initSAMEJOB6(s[3676]);
initSAMEMP(s[3677]);
initSAMJOB(s[3678]);
initSCHEMEET(s[3679]);
initSEAMK(s[3680]);
initSEAML(s[3681]);
initSEAMT(s[3682]);
initSECTOR(s[3683]);
initSECTR2(s[3684]);
initSEESM(s[3685]);
initSEESW(s[3686]);
initSEMN(s[3687]);
initSEMPSTY(s[3688]);
initSEPEL(s[3689]);
initSEPER(s[3690]);
initSEX(s[3691]);
initSICCODE(s[3692]);
initSINGPAR(s[3693]);
initSJ12G(s[3694]);
initSJ12N(s[3695]);
initSJEMP1(s[3696]);
initSJEMP2(s[3697]);
initSJGRS(s[3698]);
initSJNET(s[3699]);
initSJOB2(s[3700]);
initSJSEG(s[3701]);
initSMTPEN(s[3702]);
initSOC2010_1DIGIT(s[3703]);
initSOC2010_2DIGIT(s[3704]);
initSOLO(s[3705]);
initSSFAM1(s[3706]);
initSSNOUNITS(s[3707]);
initSSPART(s[3708]);
initSSPNO(s[3709]);
initSTARTJ(s[3710]);
initSTATUS(s[3711]);
initSTAT(s[3712]);
initSVISE(s[3713]);
initTEA(s[3714]);
initTRAINEE(s[3715]);
initTXCRED1(s[3716]);
initTXCRED2(s[3717]);
initWHOREATT(s[3718]);
initWHORECAR(s[3719]);
initWHOREMOB(s[3720]);
initWKBETW(s[3721]);
initWKHRSIR(s[3722]);
initWKHRS(s[3723]);
initWORKAGE(s[3724]);
initWPENTYPE(s[3725]);
initWRKING(s[3726]);
initXMARSTA(s[3727]);
initYINACT(s[3728]);
initSTAT_I(s[3729]);
initEMPSTAT2(s[3730]);
initEVERWK(s[3731]);
initSIC2007D(s[3732]);
initCASEW1(s[3733]);
initDVAGE17(s[3734]);
initGOR(s[3735]);
initDVAGEW2BAND(s[3736]);
}
}
