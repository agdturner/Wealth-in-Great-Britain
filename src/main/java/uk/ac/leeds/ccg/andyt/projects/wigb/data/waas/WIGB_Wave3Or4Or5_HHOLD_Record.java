/**
 * This code has been generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas;
public abstract class WIGB_Wave3Or4Or5_HHOLD_Record extends WIGB_Wave1Or2Or3Or4Or5_HHOLD_Record {
protected static Double BUYLGDST_SUM;

protected static Double CASEW2;

protected static Double CASEW3;

protected static Double DVBLDDEBT_SUM;

protected static Double DVBLDVAL_SUM;

protected static Double DVBLTDEBT_SUM;

protected static Double DVBLTVAL_SUM;

protected static Double DVCACRVAL_AGGR;

protected static Double DVCACTV_AGGR;

protected static Double DVCAODVAL_AGGR;

protected static Double DVCASVV_AGGR;

protected static Double DVCAVAL_AGGR;

protected static Double DVCISAV_AGGR;

protected static Double DVDBRWEALTHVAL_AGGR;

protected static Double DVEQLTM;

protected static Double DVEQPRUN;

protected static Double DVEQSRB;

protected static Double DVERECGROSSANNUAL;

protected static Double DVERECNETANNUAL;

protected static Double DVERVRECGROSSANNUAL;

protected static Double DVERVRECNETANNUAL;

protected static Double DVFBONDV_AGGR;

protected static Double DVFCOLLV_AGGR;

protected static Double DVFEOPTV_AGGR;

protected static Double DVFESHARES_AGGR;

protected static Double DVFESHAV_AGGR;

protected static Double DVFFASSETS_AGGR;

protected static Double DVFGLTFOV_AGGR;

protected static Double DVFGLTUKV_AGGR;

protected static Double DVFINFLV_AGGR;

protected static Double DVFINFVAL_AGGR;

protected static Double DVFINFV_AGGR;

protected static Double DVFINVOTV_AGGR;

protected static Double DVFLFENV_AGGR;

protected static Double DVFLFFSV_AGGR;

protected static Double DVFLFSIV_AGGR;

protected static Double DVFLFTEV_AGGR;

protected static Double DVFNSVAL_AGGR;

protected static Double DVFSHOSV_AGGR;

protected static Double DVFSHUKV_AGGR;

protected static Double DVGIEMP_AGGR;

protected static Double DVGIINV_AGGR;

protected static Double DVGIOTHR_AGGR;

protected static Double DVGIPPEN_AGGR;

protected static Double DVGISE_AGGR;

protected static Double DVGRSRENTAMTANNUAL_AGGR;

protected static Double DVHSEDEBT_SUM;

protected static Double DVHSEVAL_SUM;

protected static Double DVIISAV_AGGR;

protected static Double DVINSV_AGGR;

protected static Double DVISAVAL_AGGR;

protected static Double DVKISAV_AGGR;

protected static Double DVLOSDEBT_SUM;

protected static Double DVLOSVAL_SUM;

protected static Double DVLUKDEBT_SUM;

protected static Double DVLUKVAL_SUM;

protected static Double DVNETRENTAMTANNUAL_AGGR;

protected static Double DVNIEMP_AGGR;

protected static Double DVNIINV_AGGR;

protected static Double DVNIOTHI_AGGR;

protected static Double DVNIOTHR_AGGR;

protected static Double DVNIPPEN_AGGR;

protected static Double DVNISE_AGGR;

protected static Double DVOIGEGANNUAL_AGGR;

protected static Double DVOIGFRANNUAL_AGGR;

protected static Double DVOIGGTANNUAL_AGGR;

protected static Double DVOIGMAANNUAL_AGGR;

protected static Double DVOIGOPANNUAL_AGGR;

protected static Double DVOIGROANNUAL_AGGR;

protected static Double DVOIGRRANNUAL_AGGR;

protected static Double DVOINEGANNUAL_AGGR;

protected static Double DVOINFRANNUAL_AGGR;

protected static Double DVOINGTANNUAL_AGGR;

protected static Double DVOINMAANNUAL_AGGR;

protected static Double DVOINOPANNUAL_AGGR;

protected static Double DVOINROANNUAL_AGGR;

protected static Double DVOINRRANNUAL_AGGR;

protected static Double DVOPRDEBT_SUM;

protected static Double DVOPRVAL_SUM;

protected static Double DVPAVCUV_AGGR;

protected static Double DVPFCURVAL_AGGR;

protected static Double DVPFDDV_AGGR;

protected static Double DVPINPVAL_AGGR;

protected static Double DVPPVAL_AGGR;

protected static Double DVSAVAL_AGGR;

protected static Double DVSPEN_AGGR;

protected static Double DVTOTGIR;

protected static Double DVTOTNIR;

protected static Double DVVALDBT_AGGR;

protected static Double DVVALDCOS_AGGR;

protected static Double EINT;

protected static Double EINTFIX;

protected static Double EINT_I;

protected static Double EINT_IFLAG;

protected static Double EMSARR;

protected static Double EMSPAY;

protected static Double EQDRAW;

protected static Double EQDRAW_I;

protected static Double EQDRAW_IFLAG;

protected static Double EQNEW;

protected static Double EQOLD;

protected static Double EQTYPE1;

protected static Double EQTYPE1_I;

protected static Double EQTYPE1_IFLAG;

protected static Double EQTYPE2;

protected static Double EQUITY_YN_I;

protected static Double EQUITY_YN_IFLAG;

protected static Double EQVALDR;

protected static Double EQVALDRB;

protected static Double EQWHENM;

protected static Double EQWHENY;

protected static Double EREC;

protected static Double ERECMBY;

protected static Double ERECMPD;

protected static Double ERVRECBY;

protected static Double ERVRECPD;

protected static Double ERVREG1;

protected static Double ERVREG2;

protected static Double ESHARAPP;

protected static Double FRREPFIX;

protected static Double GCONTVLS;

protected static Double HEXT1;

protected static Double HEXT2;

protected static Double HEXT3;

protected static Double HEXT4;

protected static Double HFINL_AGGR;

protected static Double HFINW_EXCENDW_AGGR;

protected static Double HOUSGDSOST_SUM;

protected static Double MARRSV2;

protected static Double MARRSV3;

protected static Double MCHGE;

protected static Double MCHGENUM;

protected static Double MENDNUM3_I;

protected static Double MENDNUM3_IFLAG;

protected static Double MENDV5_I;

protected static Double MENDV5_IFLAG;

protected static Double MENDV7_I;

protected static Double MENDV7_IFLAG;

protected static Double MENDW2;

protected static Double MEXTN;

protected static Double MEXTRS1;

protected static Double MEXTRS2;

protected static Double MEXTRS3;

protected static Double MNUMBN;

protected static Double MNUMBO;

protected static Double MNUMB_I;

protected static Double MNUMB_IFLAG;

protected static Double MREAS14;

protected static Double MREAS24;

protected static Double MW2CHK1;

protected static Double MW2CHK2;

protected static Double MW2CHK3;

protected static Double MYIFCH2;

protected static Double MYIFCH3;

protected static Double NOUNITS;

protected static Double NUMDEPCH;

protected static Double NUMELCH;

protected static Double NUMNOELCH;

protected static Double OTHMORT_SUM;

protected static Double PHYSBUYLGDST_AGGR;

protected static Double PHYSHOUSGDSOST_AGGR;

protected static Double PHYSHOUSGDST_AGGR;

protected static Double PRREPAY;

protected static Double PRREPAY_I;

protected static Double PRREPAY_IFLAG;

protected static Double PRREPFIX;

protected static Double PRREPFIX_I;

protected static Double PRREPFIX_IFLAG;

protected static Double PRREPPC;

protected static Double PRREPPC_I;

protected static Double PRREPPC_IFLAG;

protected static Double SHARAPP;

protected static Double TOTARR_EXCMORT_AGGR;

protected static Double TOTBILLARR_AGGR;

protected static Double TOTCC_AGGR;

protected static Double TOTDVNWFLN_AGGR;

protected static Double TOTDVNWILN_AGGR;

protected static Double TOTFLNS_AGGR;

protected static Double TOTHPARR_AGGR;

protected static Double TOTHP_AGGR;

protected static Double TOTLNARR_AGGR;

protected static Double TOTLNS_AGGR;

protected static Double TOTLOS_AGGR;

protected static Double TOTMOARR_AGGR;

protected static Double TOTMO_AGGR;

protected static Double TOTNLOS_AGGR;

protected static Double TOTNSLBNK_AGGR;

protected static Double TOTNSLC_AGGR;

protected static Double TOTOSLBNK_AGGR;

protected static Double TOTOSLC_AGGR;

protected static Double TOTPEN_AGGR;

protected static Double TOTSC_AGGR;

protected static Double TOTSLBNK_AGGR;

protected static Double TOTSLC_AGGR;

protected static Double VOTPN;

protected static Double VPERS_I;

protected static Double VPERS_IFLAG;

protected final void initBUYLGDST_SUM(String s) {
if (!s.trim().isEmpty()) {
BUYLGDST_SUM = new Double(s);
}
}

protected final void initCASEW2(String s) {
if (!s.trim().isEmpty()) {
CASEW2 = new Double(s);
}
}

protected final void initCASEW3(String s) {
if (!s.trim().isEmpty()) {
CASEW3 = new Double(s);
}
}

protected final void initDVBLDDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLDDEBT_SUM = new Double(s);
}
}

protected final void initDVBLDVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLDVAL_SUM = new Double(s);
}
}

protected final void initDVBLTDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLTDEBT_SUM = new Double(s);
}
}

protected final void initDVBLTVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVBLTVAL_SUM = new Double(s);
}
}

protected final void initDVCACRVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCACRVAL_AGGR = new Double(s);
}
}

protected final void initDVCACTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCACTV_AGGR = new Double(s);
}
}

protected final void initDVCAODVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCAODVAL_AGGR = new Double(s);
}
}

protected final void initDVCASVV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCASVV_AGGR = new Double(s);
}
}

protected final void initDVCAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCAVAL_AGGR = new Double(s);
}
}

protected final void initDVCISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVCISAV_AGGR = new Double(s);
}
}

protected final void initDVDBRWEALTHVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVDBRWEALTHVAL_AGGR = new Double(s);
}
}

protected final void initDVEQLTM(String s) {
if (!s.trim().isEmpty()) {
DVEQLTM = new Double(s);
}
}

protected final void initDVEQPRUN(String s) {
if (!s.trim().isEmpty()) {
DVEQPRUN = new Double(s);
}
}

protected final void initDVEQSRB(String s) {
if (!s.trim().isEmpty()) {
DVEQSRB = new Double(s);
}
}

protected final void initDVERECGROSSANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERECGROSSANNUAL = new Double(s);
}
}

protected final void initDVERECNETANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERECNETANNUAL = new Double(s);
}
}

protected final void initDVERVRECGROSSANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERVRECGROSSANNUAL = new Double(s);
}
}

protected final void initDVERVRECNETANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVERVRECNETANNUAL = new Double(s);
}
}

protected final void initDVFBONDV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFBONDV_AGGR = new Double(s);
}
}

protected final void initDVFCOLLV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFCOLLV_AGGR = new Double(s);
}
}

protected final void initDVFEOPTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFEOPTV_AGGR = new Double(s);
}
}

protected final void initDVFESHARES_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFESHARES_AGGR = new Double(s);
}
}

protected final void initDVFESHAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFESHAV_AGGR = new Double(s);
}
}

protected final void initDVFFASSETS_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFFASSETS_AGGR = new Double(s);
}
}

protected final void initDVFGLTFOV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFGLTFOV_AGGR = new Double(s);
}
}

protected final void initDVFGLTUKV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFGLTUKV_AGGR = new Double(s);
}
}

protected final void initDVFINFLV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFLV_AGGR = new Double(s);
}
}

protected final void initDVFINFVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFVAL_AGGR = new Double(s);
}
}

protected final void initDVFINFV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINFV_AGGR = new Double(s);
}
}

protected final void initDVFINVOTV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFINVOTV_AGGR = new Double(s);
}
}

protected final void initDVFLFENV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFENV_AGGR = new Double(s);
}
}

protected final void initDVFLFFSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFFSV_AGGR = new Double(s);
}
}

protected final void initDVFLFSIV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFSIV_AGGR = new Double(s);
}
}

protected final void initDVFLFTEV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFLFTEV_AGGR = new Double(s);
}
}

protected final void initDVFNSVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFNSVAL_AGGR = new Double(s);
}
}

protected final void initDVFSHOSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFSHOSV_AGGR = new Double(s);
}
}

protected final void initDVFSHUKV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVFSHUKV_AGGR = new Double(s);
}
}

protected final void initDVGIEMP_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIEMP_AGGR = new Double(s);
}
}

protected final void initDVGIINV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIINV_AGGR = new Double(s);
}
}

protected final void initDVGIOTHR_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIOTHR_AGGR = new Double(s);
}
}

protected final void initDVGIPPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGIPPEN_AGGR = new Double(s);
}
}

protected final void initDVGISE_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGISE_AGGR = new Double(s);
}
}

protected final void initDVGRSRENTAMTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVGRSRENTAMTANNUAL_AGGR = new Double(s);
}
}

protected final void initDVHSEDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVHSEDEBT_SUM = new Double(s);
}
}

protected final void initDVHSEVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVHSEVAL_SUM = new Double(s);
}
}

protected final void initDVIISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVIISAV_AGGR = new Double(s);
}
}

protected final void initDVINSV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVINSV_AGGR = new Double(s);
}
}

protected final void initDVISAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVISAVAL_AGGR = new Double(s);
}
}

protected final void initDVKISAV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVKISAV_AGGR = new Double(s);
}
}

protected final void initDVLOSDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLOSDEBT_SUM = new Double(s);
}
}

protected final void initDVLOSVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLOSVAL_SUM = new Double(s);
}
}

protected final void initDVLUKDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLUKDEBT_SUM = new Double(s);
}
}

protected final void initDVLUKVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVLUKVAL_SUM = new Double(s);
}
}

protected final void initDVNETRENTAMTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNETRENTAMTANNUAL_AGGR = new Double(s);
}
}

protected final void initDVNIEMP_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIEMP_AGGR = new Double(s);
}
}

protected final void initDVNIINV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIINV_AGGR = new Double(s);
}
}

protected final void initDVNIOTHI_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIOTHI_AGGR = new Double(s);
}
}

protected final void initDVNIOTHR_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIOTHR_AGGR = new Double(s);
}
}

protected final void initDVNIPPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNIPPEN_AGGR = new Double(s);
}
}

protected final void initDVNISE_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVNISE_AGGR = new Double(s);
}
}

protected final void initDVOIGEGANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGEGANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGFRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGFRANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGGTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGGTANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGMAANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGMAANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGOPANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGOPANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGROANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGROANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOIGRRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOIGRRANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINEGANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINEGANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINFRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINFRANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINGTANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINGTANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINMAANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINMAANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINOPANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINOPANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINROANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINROANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOINRRANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVOINRRANNUAL_AGGR = new Double(s);
}
}

protected final void initDVOPRDEBT_SUM(String s) {
if (!s.trim().isEmpty()) {
DVOPRDEBT_SUM = new Double(s);
}
}

protected final void initDVOPRVAL_SUM(String s) {
if (!s.trim().isEmpty()) {
DVOPRVAL_SUM = new Double(s);
}
}

protected final void initDVPAVCUV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPAVCUV_AGGR = new Double(s);
}
}

protected final void initDVPFCURVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPFCURVAL_AGGR = new Double(s);
}
}

protected final void initDVPFDDV_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPFDDV_AGGR = new Double(s);
}
}

protected final void initDVPINPVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPINPVAL_AGGR = new Double(s);
}
}

protected final void initDVPPVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVPPVAL_AGGR = new Double(s);
}
}

protected final void initDVSAVAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVSAVAL_AGGR = new Double(s);
}
}

protected final void initDVSPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVSPEN_AGGR = new Double(s);
}
}

protected final void initDVTOTGIR(String s) {
if (!s.trim().isEmpty()) {
DVTOTGIR = new Double(s);
}
}

protected final void initDVTOTNIR(String s) {
if (!s.trim().isEmpty()) {
DVTOTNIR = new Double(s);
}
}

protected final void initDVVALDBT_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVVALDBT_AGGR = new Double(s);
}
}

protected final void initDVVALDCOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVVALDCOS_AGGR = new Double(s);
}
}

protected final void initEINT(String s) {
if (!s.trim().isEmpty()) {
EINT = new Double(s);
}
}

protected final void initEINTFIX(String s) {
if (!s.trim().isEmpty()) {
EINTFIX = new Double(s);
}
}

protected final void initEINT_I(String s) {
if (!s.trim().isEmpty()) {
EINT_I = new Double(s);
}
}

protected final void initEINT_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EINT_IFLAG = new Double(s);
}
}

protected final void initEMSARR(String s) {
if (!s.trim().isEmpty()) {
EMSARR = new Double(s);
}
}

protected final void initEMSPAY(String s) {
if (!s.trim().isEmpty()) {
EMSPAY = new Double(s);
}
}

protected final void initEQDRAW(String s) {
if (!s.trim().isEmpty()) {
EQDRAW = new Double(s);
}
}

protected final void initEQDRAW_I(String s) {
if (!s.trim().isEmpty()) {
EQDRAW_I = new Double(s);
}
}

protected final void initEQDRAW_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQDRAW_IFLAG = new Double(s);
}
}

protected final void initEQNEW(String s) {
if (!s.trim().isEmpty()) {
EQNEW = new Double(s);
}
}

protected final void initEQOLD(String s) {
if (!s.trim().isEmpty()) {
EQOLD = new Double(s);
}
}

protected final void initEQTYPE1(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1 = new Double(s);
}
}

protected final void initEQTYPE1_I(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1_I = new Double(s);
}
}

protected final void initEQTYPE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQTYPE1_IFLAG = new Double(s);
}
}

protected final void initEQTYPE2(String s) {
if (!s.trim().isEmpty()) {
EQTYPE2 = new Double(s);
}
}

protected final void initEQUITY_YN_I(String s) {
if (!s.trim().isEmpty()) {
EQUITY_YN_I = new Double(s);
}
}

protected final void initEQUITY_YN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQUITY_YN_IFLAG = new Double(s);
}
}

protected final void initEQVALDR(String s) {
if (!s.trim().isEmpty()) {
EQVALDR = new Double(s);
}
}

protected final void initEQVALDRB(String s) {
if (!s.trim().isEmpty()) {
EQVALDRB = new Double(s);
}
}

protected final void initEQWHENM(String s) {
if (!s.trim().isEmpty()) {
EQWHENM = new Double(s);
}
}

protected final void initEQWHENY(String s) {
if (!s.trim().isEmpty()) {
EQWHENY = new Double(s);
}
}

protected final void initEREC(String s) {
if (!s.trim().isEmpty()) {
EREC = new Double(s);
}
}

protected final void initERECMBY(String s) {
if (!s.trim().isEmpty()) {
ERECMBY = new Double(s);
}
}

protected final void initERECMPD(String s) {
if (!s.trim().isEmpty()) {
ERECMPD = new Double(s);
}
}

protected final void initERVRECBY(String s) {
if (!s.trim().isEmpty()) {
ERVRECBY = new Double(s);
}
}

protected final void initERVRECPD(String s) {
if (!s.trim().isEmpty()) {
ERVRECPD = new Double(s);
}
}

protected final void initERVREG1(String s) {
if (!s.trim().isEmpty()) {
ERVREG1 = new Double(s);
}
}

protected final void initERVREG2(String s) {
if (!s.trim().isEmpty()) {
ERVREG2 = new Double(s);
}
}

protected final void initESHARAPP(String s) {
if (!s.trim().isEmpty()) {
ESHARAPP = new Double(s);
}
}

protected final void initFRREPFIX(String s) {
if (!s.trim().isEmpty()) {
FRREPFIX = new Double(s);
}
}

protected final void initGCONTVLS(String s) {
if (!s.trim().isEmpty()) {
GCONTVLS = new Double(s);
}
}

protected final void initHEXT1(String s) {
if (!s.trim().isEmpty()) {
HEXT1 = new Double(s);
}
}

protected final void initHEXT2(String s) {
if (!s.trim().isEmpty()) {
HEXT2 = new Double(s);
}
}

protected final void initHEXT3(String s) {
if (!s.trim().isEmpty()) {
HEXT3 = new Double(s);
}
}

protected final void initHEXT4(String s) {
if (!s.trim().isEmpty()) {
HEXT4 = new Double(s);
}
}

protected final void initHFINL_AGGR(String s) {
if (!s.trim().isEmpty()) {
HFINL_AGGR = new Double(s);
}
}

protected final void initHFINW_EXCENDW_AGGR(String s) {
if (!s.trim().isEmpty()) {
HFINW_EXCENDW_AGGR = new Double(s);
}
}

protected final void initHOUSGDSOST_SUM(String s) {
if (!s.trim().isEmpty()) {
HOUSGDSOST_SUM = new Double(s);
}
}

protected final void initMARRSV2(String s) {
if (!s.trim().isEmpty()) {
MARRSV2 = new Double(s);
}
}

protected final void initMARRSV3(String s) {
if (!s.trim().isEmpty()) {
MARRSV3 = new Double(s);
}
}

protected final void initMCHGE(String s) {
if (!s.trim().isEmpty()) {
MCHGE = new Double(s);
}
}

protected final void initMCHGENUM(String s) {
if (!s.trim().isEmpty()) {
MCHGENUM = new Double(s);
}
}

protected final void initMENDNUM3_I(String s) {
if (!s.trim().isEmpty()) {
MENDNUM3_I = new Double(s);
}
}

protected final void initMENDNUM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDNUM3_IFLAG = new Double(s);
}
}

protected final void initMENDV5_I(String s) {
if (!s.trim().isEmpty()) {
MENDV5_I = new Double(s);
}
}

protected final void initMENDV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV5_IFLAG = new Double(s);
}
}

protected final void initMENDV7_I(String s) {
if (!s.trim().isEmpty()) {
MENDV7_I = new Double(s);
}
}

protected final void initMENDV7_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV7_IFLAG = new Double(s);
}
}

protected final void initMENDW2(String s) {
if (!s.trim().isEmpty()) {
MENDW2 = new Double(s);
}
}

protected final void initMEXTN(String s) {
if (!s.trim().isEmpty()) {
MEXTN = new Double(s);
}
}

protected final void initMEXTRS1(String s) {
if (!s.trim().isEmpty()) {
MEXTRS1 = new Double(s);
}
}

protected final void initMEXTRS2(String s) {
if (!s.trim().isEmpty()) {
MEXTRS2 = new Double(s);
}
}

protected final void initMEXTRS3(String s) {
if (!s.trim().isEmpty()) {
MEXTRS3 = new Double(s);
}
}

protected final void initMNUMBN(String s) {
if (!s.trim().isEmpty()) {
MNUMBN = new Double(s);
}
}

protected final void initMNUMBO(String s) {
if (!s.trim().isEmpty()) {
MNUMBO = new Double(s);
}
}

protected final void initMNUMB_I(String s) {
if (!s.trim().isEmpty()) {
MNUMB_I = new Double(s);
}
}

protected final void initMNUMB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MNUMB_IFLAG = new Double(s);
}
}

protected final void initMREAS14(String s) {
if (!s.trim().isEmpty()) {
MREAS14 = new Double(s);
}
}

protected final void initMREAS24(String s) {
if (!s.trim().isEmpty()) {
MREAS24 = new Double(s);
}
}

protected final void initMW2CHK1(String s) {
if (!s.trim().isEmpty()) {
MW2CHK1 = new Double(s);
}
}

protected final void initMW2CHK2(String s) {
if (!s.trim().isEmpty()) {
MW2CHK2 = new Double(s);
}
}

protected final void initMW2CHK3(String s) {
if (!s.trim().isEmpty()) {
MW2CHK3 = new Double(s);
}
}

protected final void initMYIFCH2(String s) {
if (!s.trim().isEmpty()) {
MYIFCH2 = new Double(s);
}
}

protected final void initMYIFCH3(String s) {
if (!s.trim().isEmpty()) {
MYIFCH3 = new Double(s);
}
}

protected final void initNOUNITS(String s) {
if (!s.trim().isEmpty()) {
NOUNITS = new Double(s);
}
}

protected final void initNUMDEPCH(String s) {
if (!s.trim().isEmpty()) {
NUMDEPCH = new Double(s);
}
}

protected final void initNUMELCH(String s) {
if (!s.trim().isEmpty()) {
NUMELCH = new Double(s);
}
}

protected final void initNUMNOELCH(String s) {
if (!s.trim().isEmpty()) {
NUMNOELCH = new Double(s);
}
}

protected final void initOTHMORT_SUM(String s) {
if (!s.trim().isEmpty()) {
OTHMORT_SUM = new Double(s);
}
}

protected final void initPHYSBUYLGDST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSBUYLGDST_AGGR = new Double(s);
}
}

protected final void initPHYSHOUSGDSOST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSHOUSGDSOST_AGGR = new Double(s);
}
}

protected final void initPHYSHOUSGDST_AGGR(String s) {
if (!s.trim().isEmpty()) {
PHYSHOUSGDST_AGGR = new Double(s);
}
}

protected final void initPRREPAY(String s) {
if (!s.trim().isEmpty()) {
PRREPAY = new Double(s);
}
}

protected final void initPRREPAY_I(String s) {
if (!s.trim().isEmpty()) {
PRREPAY_I = new Double(s);
}
}

protected final void initPRREPAY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPAY_IFLAG = new Double(s);
}
}

protected final void initPRREPFIX(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX = new Double(s);
}
}

protected final void initPRREPFIX_I(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX_I = new Double(s);
}
}

protected final void initPRREPFIX_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPFIX_IFLAG = new Double(s);
}
}

protected final void initPRREPPC(String s) {
if (!s.trim().isEmpty()) {
PRREPPC = new Double(s);
}
}

protected final void initPRREPPC_I(String s) {
if (!s.trim().isEmpty()) {
PRREPPC_I = new Double(s);
}
}

protected final void initPRREPPC_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PRREPPC_IFLAG = new Double(s);
}
}

protected final void initSHARAPP(String s) {
if (!s.trim().isEmpty()) {
SHARAPP = new Double(s);
}
}

protected final void initTOTARR_EXCMORT_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTARR_EXCMORT_AGGR = new Double(s);
}
}

protected final void initTOTBILLARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTBILLARR_AGGR = new Double(s);
}
}

protected final void initTOTCC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTCC_AGGR = new Double(s);
}
}

protected final void initTOTDVNWFLN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTDVNWFLN_AGGR = new Double(s);
}
}

protected final void initTOTDVNWILN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTDVNWILN_AGGR = new Double(s);
}
}

protected final void initTOTFLNS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTFLNS_AGGR = new Double(s);
}
}

protected final void initTOTHPARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTHPARR_AGGR = new Double(s);
}
}

protected final void initTOTHP_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTHP_AGGR = new Double(s);
}
}

protected final void initTOTLNARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLNARR_AGGR = new Double(s);
}
}

protected final void initTOTLNS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLNS_AGGR = new Double(s);
}
}

protected final void initTOTLOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTLOS_AGGR = new Double(s);
}
}

protected final void initTOTMOARR_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTMOARR_AGGR = new Double(s);
}
}

protected final void initTOTMO_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTMO_AGGR = new Double(s);
}
}

protected final void initTOTNLOS_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNLOS_AGGR = new Double(s);
}
}

protected final void initTOTNSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNSLBNK_AGGR = new Double(s);
}
}

protected final void initTOTNSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTNSLC_AGGR = new Double(s);
}
}

protected final void initTOTOSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTOSLBNK_AGGR = new Double(s);
}
}

protected final void initTOTOSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTOSLC_AGGR = new Double(s);
}
}

protected final void initTOTPEN_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTPEN_AGGR = new Double(s);
}
}

protected final void initTOTSC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSC_AGGR = new Double(s);
}
}

protected final void initTOTSLBNK_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSLBNK_AGGR = new Double(s);
}
}

protected final void initTOTSLC_AGGR(String s) {
if (!s.trim().isEmpty()) {
TOTSLC_AGGR = new Double(s);
}
}

protected final void initVOTPN(String s) {
if (!s.trim().isEmpty()) {
VOTPN = new Double(s);
}
}

protected final void initVPERS_I(String s) {
if (!s.trim().isEmpty()) {
VPERS_I = new Double(s);
}
}

protected final void initVPERS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
VPERS_IFLAG = new Double(s);
}
}

public Double getBUYLGDST_SUM() {
return BUYLGDST_SUM;
}

public Double getCASEW2() {
return CASEW2;
}

public Double getCASEW3() {
return CASEW3;
}

public Double getDVBLDDEBT_SUM() {
return DVBLDDEBT_SUM;
}

public Double getDVBLDVAL_SUM() {
return DVBLDVAL_SUM;
}

public Double getDVBLTDEBT_SUM() {
return DVBLTDEBT_SUM;
}

public Double getDVBLTVAL_SUM() {
return DVBLTVAL_SUM;
}

public Double getDVCACRVAL_AGGR() {
return DVCACRVAL_AGGR;
}

public Double getDVCACTV_AGGR() {
return DVCACTV_AGGR;
}

public Double getDVCAODVAL_AGGR() {
return DVCAODVAL_AGGR;
}

public Double getDVCASVV_AGGR() {
return DVCASVV_AGGR;
}

public Double getDVCAVAL_AGGR() {
return DVCAVAL_AGGR;
}

public Double getDVCISAV_AGGR() {
return DVCISAV_AGGR;
}

public Double getDVDBRWEALTHVAL_AGGR() {
return DVDBRWEALTHVAL_AGGR;
}

public Double getDVEQLTM() {
return DVEQLTM;
}

public Double getDVEQPRUN() {
return DVEQPRUN;
}

public Double getDVEQSRB() {
return DVEQSRB;
}

public Double getDVERECGROSSANNUAL() {
return DVERECGROSSANNUAL;
}

public Double getDVERECNETANNUAL() {
return DVERECNETANNUAL;
}

public Double getDVERVRECGROSSANNUAL() {
return DVERVRECGROSSANNUAL;
}

public Double getDVERVRECNETANNUAL() {
return DVERVRECNETANNUAL;
}

public Double getDVFBONDV_AGGR() {
return DVFBONDV_AGGR;
}

public Double getDVFCOLLV_AGGR() {
return DVFCOLLV_AGGR;
}

public Double getDVFEOPTV_AGGR() {
return DVFEOPTV_AGGR;
}

public Double getDVFESHARES_AGGR() {
return DVFESHARES_AGGR;
}

public Double getDVFESHAV_AGGR() {
return DVFESHAV_AGGR;
}

public Double getDVFFASSETS_AGGR() {
return DVFFASSETS_AGGR;
}

public Double getDVFGLTFOV_AGGR() {
return DVFGLTFOV_AGGR;
}

public Double getDVFGLTUKV_AGGR() {
return DVFGLTUKV_AGGR;
}

public Double getDVFINFLV_AGGR() {
return DVFINFLV_AGGR;
}

public Double getDVFINFVAL_AGGR() {
return DVFINFVAL_AGGR;
}

public Double getDVFINFV_AGGR() {
return DVFINFV_AGGR;
}

public Double getDVFINVOTV_AGGR() {
return DVFINVOTV_AGGR;
}

public Double getDVFLFENV_AGGR() {
return DVFLFENV_AGGR;
}

public Double getDVFLFFSV_AGGR() {
return DVFLFFSV_AGGR;
}

public Double getDVFLFSIV_AGGR() {
return DVFLFSIV_AGGR;
}

public Double getDVFLFTEV_AGGR() {
return DVFLFTEV_AGGR;
}

public Double getDVFNSVAL_AGGR() {
return DVFNSVAL_AGGR;
}

public Double getDVFSHOSV_AGGR() {
return DVFSHOSV_AGGR;
}

public Double getDVFSHUKV_AGGR() {
return DVFSHUKV_AGGR;
}

public Double getDVGIEMP_AGGR() {
return DVGIEMP_AGGR;
}

public Double getDVGIINV_AGGR() {
return DVGIINV_AGGR;
}

public Double getDVGIOTHR_AGGR() {
return DVGIOTHR_AGGR;
}

public Double getDVGIPPEN_AGGR() {
return DVGIPPEN_AGGR;
}

public Double getDVGISE_AGGR() {
return DVGISE_AGGR;
}

public Double getDVGRSRENTAMTANNUAL_AGGR() {
return DVGRSRENTAMTANNUAL_AGGR;
}

public Double getDVHSEDEBT_SUM() {
return DVHSEDEBT_SUM;
}

public Double getDVHSEVAL_SUM() {
return DVHSEVAL_SUM;
}

public Double getDVIISAV_AGGR() {
return DVIISAV_AGGR;
}

public Double getDVINSV_AGGR() {
return DVINSV_AGGR;
}

public Double getDVISAVAL_AGGR() {
return DVISAVAL_AGGR;
}

public Double getDVKISAV_AGGR() {
return DVKISAV_AGGR;
}

public Double getDVLOSDEBT_SUM() {
return DVLOSDEBT_SUM;
}

public Double getDVLOSVAL_SUM() {
return DVLOSVAL_SUM;
}

public Double getDVLUKDEBT_SUM() {
return DVLUKDEBT_SUM;
}

public Double getDVLUKVAL_SUM() {
return DVLUKVAL_SUM;
}

public Double getDVNETRENTAMTANNUAL_AGGR() {
return DVNETRENTAMTANNUAL_AGGR;
}

public Double getDVNIEMP_AGGR() {
return DVNIEMP_AGGR;
}

public Double getDVNIINV_AGGR() {
return DVNIINV_AGGR;
}

public Double getDVNIOTHI_AGGR() {
return DVNIOTHI_AGGR;
}

public Double getDVNIOTHR_AGGR() {
return DVNIOTHR_AGGR;
}

public Double getDVNIPPEN_AGGR() {
return DVNIPPEN_AGGR;
}

public Double getDVNISE_AGGR() {
return DVNISE_AGGR;
}

public Double getDVOIGEGANNUAL_AGGR() {
return DVOIGEGANNUAL_AGGR;
}

public Double getDVOIGFRANNUAL_AGGR() {
return DVOIGFRANNUAL_AGGR;
}

public Double getDVOIGGTANNUAL_AGGR() {
return DVOIGGTANNUAL_AGGR;
}

public Double getDVOIGMAANNUAL_AGGR() {
return DVOIGMAANNUAL_AGGR;
}

public Double getDVOIGOPANNUAL_AGGR() {
return DVOIGOPANNUAL_AGGR;
}

public Double getDVOIGROANNUAL_AGGR() {
return DVOIGROANNUAL_AGGR;
}

public Double getDVOIGRRANNUAL_AGGR() {
return DVOIGRRANNUAL_AGGR;
}

public Double getDVOINEGANNUAL_AGGR() {
return DVOINEGANNUAL_AGGR;
}

public Double getDVOINFRANNUAL_AGGR() {
return DVOINFRANNUAL_AGGR;
}

public Double getDVOINGTANNUAL_AGGR() {
return DVOINGTANNUAL_AGGR;
}

public Double getDVOINMAANNUAL_AGGR() {
return DVOINMAANNUAL_AGGR;
}

public Double getDVOINOPANNUAL_AGGR() {
return DVOINOPANNUAL_AGGR;
}

public Double getDVOINROANNUAL_AGGR() {
return DVOINROANNUAL_AGGR;
}

public Double getDVOINRRANNUAL_AGGR() {
return DVOINRRANNUAL_AGGR;
}

public Double getDVOPRDEBT_SUM() {
return DVOPRDEBT_SUM;
}

public Double getDVOPRVAL_SUM() {
return DVOPRVAL_SUM;
}

public Double getDVPAVCUV_AGGR() {
return DVPAVCUV_AGGR;
}

public Double getDVPFCURVAL_AGGR() {
return DVPFCURVAL_AGGR;
}

public Double getDVPFDDV_AGGR() {
return DVPFDDV_AGGR;
}

public Double getDVPINPVAL_AGGR() {
return DVPINPVAL_AGGR;
}

public Double getDVPPVAL_AGGR() {
return DVPPVAL_AGGR;
}

public Double getDVSAVAL_AGGR() {
return DVSAVAL_AGGR;
}

public Double getDVSPEN_AGGR() {
return DVSPEN_AGGR;
}

public Double getDVTOTGIR() {
return DVTOTGIR;
}

public Double getDVTOTNIR() {
return DVTOTNIR;
}

public Double getDVVALDBT_AGGR() {
return DVVALDBT_AGGR;
}

public Double getDVVALDCOS_AGGR() {
return DVVALDCOS_AGGR;
}

public Double getEINT() {
return EINT;
}

public Double getEINTFIX() {
return EINTFIX;
}

public Double getEINT_I() {
return EINT_I;
}

public Double getEINT_IFLAG() {
return EINT_IFLAG;
}

public Double getEMSARR() {
return EMSARR;
}

public Double getEMSPAY() {
return EMSPAY;
}

public Double getEQDRAW() {
return EQDRAW;
}

public Double getEQDRAW_I() {
return EQDRAW_I;
}

public Double getEQDRAW_IFLAG() {
return EQDRAW_IFLAG;
}

public Double getEQNEW() {
return EQNEW;
}

public Double getEQOLD() {
return EQOLD;
}

public Double getEQTYPE1() {
return EQTYPE1;
}

public Double getEQTYPE1_I() {
return EQTYPE1_I;
}

public Double getEQTYPE1_IFLAG() {
return EQTYPE1_IFLAG;
}

public Double getEQTYPE2() {
return EQTYPE2;
}

public Double getEQUITY_YN_I() {
return EQUITY_YN_I;
}

public Double getEQUITY_YN_IFLAG() {
return EQUITY_YN_IFLAG;
}

public Double getEQVALDR() {
return EQVALDR;
}

public Double getEQVALDRB() {
return EQVALDRB;
}

public Double getEQWHENM() {
return EQWHENM;
}

public Double getEQWHENY() {
return EQWHENY;
}

public Double getEREC() {
return EREC;
}

public Double getERECMBY() {
return ERECMBY;
}

public Double getERECMPD() {
return ERECMPD;
}

public Double getERVRECBY() {
return ERVRECBY;
}

public Double getERVRECPD() {
return ERVRECPD;
}

public Double getERVREG1() {
return ERVREG1;
}

public Double getERVREG2() {
return ERVREG2;
}

public Double getESHARAPP() {
return ESHARAPP;
}

public Double getFRREPFIX() {
return FRREPFIX;
}

public Double getGCONTVLS() {
return GCONTVLS;
}

public Double getHEXT1() {
return HEXT1;
}

public Double getHEXT2() {
return HEXT2;
}

public Double getHEXT3() {
return HEXT3;
}

public Double getHEXT4() {
return HEXT4;
}

public Double getHFINL_AGGR() {
return HFINL_AGGR;
}

public Double getHFINW_EXCENDW_AGGR() {
return HFINW_EXCENDW_AGGR;
}

public Double getHOUSGDSOST_SUM() {
return HOUSGDSOST_SUM;
}

public Double getMARRSV2() {
return MARRSV2;
}

public Double getMARRSV3() {
return MARRSV3;
}

public Double getMCHGE() {
return MCHGE;
}

public Double getMCHGENUM() {
return MCHGENUM;
}

public Double getMENDNUM3_I() {
return MENDNUM3_I;
}

public Double getMENDNUM3_IFLAG() {
return MENDNUM3_IFLAG;
}

public Double getMENDV5_I() {
return MENDV5_I;
}

public Double getMENDV5_IFLAG() {
return MENDV5_IFLAG;
}

public Double getMENDV7_I() {
return MENDV7_I;
}

public Double getMENDV7_IFLAG() {
return MENDV7_IFLAG;
}

public Double getMENDW2() {
return MENDW2;
}

public Double getMEXTN() {
return MEXTN;
}

public Double getMEXTRS1() {
return MEXTRS1;
}

public Double getMEXTRS2() {
return MEXTRS2;
}

public Double getMEXTRS3() {
return MEXTRS3;
}

public Double getMNUMBN() {
return MNUMBN;
}

public Double getMNUMBO() {
return MNUMBO;
}

public Double getMNUMB_I() {
return MNUMB_I;
}

public Double getMNUMB_IFLAG() {
return MNUMB_IFLAG;
}

public Double getMREAS14() {
return MREAS14;
}

public Double getMREAS24() {
return MREAS24;
}

public Double getMW2CHK1() {
return MW2CHK1;
}

public Double getMW2CHK2() {
return MW2CHK2;
}

public Double getMW2CHK3() {
return MW2CHK3;
}

public Double getMYIFCH2() {
return MYIFCH2;
}

public Double getMYIFCH3() {
return MYIFCH3;
}

public Double getNOUNITS() {
return NOUNITS;
}

public Double getNUMDEPCH() {
return NUMDEPCH;
}

public Double getNUMELCH() {
return NUMELCH;
}

public Double getNUMNOELCH() {
return NUMNOELCH;
}

public Double getOTHMORT_SUM() {
return OTHMORT_SUM;
}

public Double getPHYSBUYLGDST_AGGR() {
return PHYSBUYLGDST_AGGR;
}

public Double getPHYSHOUSGDSOST_AGGR() {
return PHYSHOUSGDSOST_AGGR;
}

public Double getPHYSHOUSGDST_AGGR() {
return PHYSHOUSGDST_AGGR;
}

public Double getPRREPAY() {
return PRREPAY;
}

public Double getPRREPAY_I() {
return PRREPAY_I;
}

public Double getPRREPAY_IFLAG() {
return PRREPAY_IFLAG;
}

public Double getPRREPFIX() {
return PRREPFIX;
}

public Double getPRREPFIX_I() {
return PRREPFIX_I;
}

public Double getPRREPFIX_IFLAG() {
return PRREPFIX_IFLAG;
}

public Double getPRREPPC() {
return PRREPPC;
}

public Double getPRREPPC_I() {
return PRREPPC_I;
}

public Double getPRREPPC_IFLAG() {
return PRREPPC_IFLAG;
}

public Double getSHARAPP() {
return SHARAPP;
}

public Double getTOTARR_EXCMORT_AGGR() {
return TOTARR_EXCMORT_AGGR;
}

public Double getTOTBILLARR_AGGR() {
return TOTBILLARR_AGGR;
}

public Double getTOTCC_AGGR() {
return TOTCC_AGGR;
}

public Double getTOTDVNWFLN_AGGR() {
return TOTDVNWFLN_AGGR;
}

public Double getTOTDVNWILN_AGGR() {
return TOTDVNWILN_AGGR;
}

public Double getTOTFLNS_AGGR() {
return TOTFLNS_AGGR;
}

public Double getTOTHPARR_AGGR() {
return TOTHPARR_AGGR;
}

public Double getTOTHP_AGGR() {
return TOTHP_AGGR;
}

public Double getTOTLNARR_AGGR() {
return TOTLNARR_AGGR;
}

public Double getTOTLNS_AGGR() {
return TOTLNS_AGGR;
}

public Double getTOTLOS_AGGR() {
return TOTLOS_AGGR;
}

public Double getTOTMOARR_AGGR() {
return TOTMOARR_AGGR;
}

public Double getTOTMO_AGGR() {
return TOTMO_AGGR;
}

public Double getTOTNLOS_AGGR() {
return TOTNLOS_AGGR;
}

public Double getTOTNSLBNK_AGGR() {
return TOTNSLBNK_AGGR;
}

public Double getTOTNSLC_AGGR() {
return TOTNSLC_AGGR;
}

public Double getTOTOSLBNK_AGGR() {
return TOTOSLBNK_AGGR;
}

public Double getTOTOSLC_AGGR() {
return TOTOSLC_AGGR;
}

public Double getTOTPEN_AGGR() {
return TOTPEN_AGGR;
}

public Double getTOTSC_AGGR() {
return TOTSC_AGGR;
}

public Double getTOTSLBNK_AGGR() {
return TOTSLBNK_AGGR;
}

public Double getTOTSLC_AGGR() {
return TOTSLC_AGGR;
}

public Double getVOTPN() {
return VOTPN;
}

public Double getVPERS_I() {
return VPERS_I;
}

public Double getVPERS_IFLAG() {
return VPERS_IFLAG;
}

}
