/**
 * Source code generated by uk.ac.leeds.ccg.andyt.projects.wigb.process.WIGB_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.projects.wigb.data.waas.hhold;
public class WIGB_Wave4Or5_HHOLD_Record extends WIGB_Wave3Or4Or5_HHOLD_Record {
protected double BRIDLN1;
protected double BRIDLN2;
protected double BRIDLN3;
protected Integer CASEW4;
protected double DVBENEFITANNUAL_AGGR;
protected double EQVALB_I;
protected double EQVALB_IFLAG;
protected double HRPDVAGE;
protected double HRPDVECACT;
protected double HRPIOUT1;
protected double HRPPARTIOUT1;
protected double MALL1;
protected double MALL1_I;
protected double MALL1_IFLAG;
protected double MALLTY1;
protected double MALLTY1_I;
protected double MALLTY1_IFLAG;
protected double MARR2YR1;
protected double MARR2YR2;
protected double MARR2YR3;
protected double MARRCL01;
protected double MARRCL02;
protected double MARRCL12;
protected double MARRS1;
protected double MARRSV1;
protected double MENDNUM1;
protected double MENDNUM1_I;
protected double MENDNUM1_IFLAG;
protected double MENDV1;
protected double MENDV1_I;
protected double MENDV1_IFLAG;
protected double MENDVB1;
protected double MENDVB11_I;
protected double MENDVB11_IFLAG;
protected double MENDVB1_I;
protected double MENDVB1_IFLAG;
protected double MENDVB2_I;
protected double MENDVB2_IFLAG;
protected double MENDVB3_I;
protected double MENDVB3_IFLAG;
protected double MENDVB4_I;
protected double MENDVB4_IFLAG;
protected double MENDVB5_I;
protected double MENDVB5_IFLAG;
protected double MENDVB6_I;
protected double MENDVB6_IFLAG;
protected double MENDVB7_I;
protected double MENDVB7_IFLAG;
protected double MENDVB8_I;
protected double MENDVB8_IFLAG;
protected double MENDVB9_I;
protected double MENDVB9_IFLAG;
protected double MENDW1;
protected double MENDW1_I;
protected double MENDW1_IFLAG;
protected double MENDW3;
protected double MENDX1;
protected double MENDY1;
protected double MHOWPY1;
protected double MINVW1;
protected double MINVW2;
protected double MINVW3;
protected double MNAME1;
protected double MNEG1;
protected double MNEG1_I;
protected double MNEG1_IFLAG;
protected double MNEGB1;
protected double MONAME1;
protected double MONTHW1;
protected double MONTHW2;
protected double MONTHW3;
protected double MPAYB1;
protected double MPAYM1;
protected double MPOLICY1;
protected double MPOLICY2;
protected double MPP1;
protected double MTYPE1;
protected double MTYPE1_I;
protected double MTYPE1_IFLAG;
protected double MVAL1;
protected double MVAL1_I;
protected double MVAL1_IFLAG;
protected double MVALB1;
protected double MYIFCH1;
protected double MYLFT1;
protected double VTYPE1;
protected double YEARW1;
protected double YEARW2;
protected double YEARW3;
protected final void initBRIDLN1(String s) {
if (!s.trim().isEmpty()) {
BRIDLN1 = new Double(s);
} else {
BRIDLN1 = Double.NaN;
}
}

protected final void initBRIDLN2(String s) {
if (!s.trim().isEmpty()) {
BRIDLN2 = new Double(s);
} else {
BRIDLN2 = Double.NaN;
}
}

protected final void initBRIDLN3(String s) {
if (!s.trim().isEmpty()) {
BRIDLN3 = new Double(s);
} else {
BRIDLN3 = Double.NaN;
}
}

protected final void initCASEW4(String s) {
if (!s.trim().isEmpty()) {
CASEW4 = new Integer(s);
}
}

protected final void initDVBENEFITANNUAL_AGGR(String s) {
if (!s.trim().isEmpty()) {
DVBENEFITANNUAL_AGGR = new Double(s);
} else {
DVBENEFITANNUAL_AGGR = Double.NaN;
}
}

protected final void initEQVALB_I(String s) {
if (!s.trim().isEmpty()) {
EQVALB_I = new Double(s);
} else {
EQVALB_I = Double.NaN;
}
}

protected final void initEQVALB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
EQVALB_IFLAG = new Double(s);
} else {
EQVALB_IFLAG = Double.NaN;
}
}

protected final void initHRPDVAGE(String s) {
if (!s.trim().isEmpty()) {
HRPDVAGE = new Double(s);
} else {
HRPDVAGE = Double.NaN;
}
}

protected final void initHRPDVECACT(String s) {
if (!s.trim().isEmpty()) {
HRPDVECACT = new Double(s);
} else {
HRPDVECACT = Double.NaN;
}
}

protected final void initHRPIOUT1(String s) {
if (!s.trim().isEmpty()) {
HRPIOUT1 = new Double(s);
} else {
HRPIOUT1 = Double.NaN;
}
}

protected final void initHRPPARTIOUT1(String s) {
if (!s.trim().isEmpty()) {
HRPPARTIOUT1 = new Double(s);
} else {
HRPPARTIOUT1 = Double.NaN;
}
}

protected final void initMALL1(String s) {
if (!s.trim().isEmpty()) {
MALL1 = new Double(s);
} else {
MALL1 = Double.NaN;
}
}

protected final void initMALL1_I(String s) {
if (!s.trim().isEmpty()) {
MALL1_I = new Double(s);
} else {
MALL1_I = Double.NaN;
}
}

protected final void initMALL1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MALL1_IFLAG = new Double(s);
} else {
MALL1_IFLAG = Double.NaN;
}
}

protected final void initMALLTY1(String s) {
if (!s.trim().isEmpty()) {
MALLTY1 = new Double(s);
} else {
MALLTY1 = Double.NaN;
}
}

protected final void initMALLTY1_I(String s) {
if (!s.trim().isEmpty()) {
MALLTY1_I = new Double(s);
} else {
MALLTY1_I = Double.NaN;
}
}

protected final void initMALLTY1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MALLTY1_IFLAG = new Double(s);
} else {
MALLTY1_IFLAG = Double.NaN;
}
}

protected final void initMARR2YR1(String s) {
if (!s.trim().isEmpty()) {
MARR2YR1 = new Double(s);
} else {
MARR2YR1 = Double.NaN;
}
}

protected final void initMARR2YR2(String s) {
if (!s.trim().isEmpty()) {
MARR2YR2 = new Double(s);
} else {
MARR2YR2 = Double.NaN;
}
}

protected final void initMARR2YR3(String s) {
if (!s.trim().isEmpty()) {
MARR2YR3 = new Double(s);
} else {
MARR2YR3 = Double.NaN;
}
}

protected final void initMARRCL01(String s) {
if (!s.trim().isEmpty()) {
MARRCL01 = new Double(s);
} else {
MARRCL01 = Double.NaN;
}
}

protected final void initMARRCL02(String s) {
if (!s.trim().isEmpty()) {
MARRCL02 = new Double(s);
} else {
MARRCL02 = Double.NaN;
}
}

protected final void initMARRCL12(String s) {
if (!s.trim().isEmpty()) {
MARRCL12 = new Double(s);
} else {
MARRCL12 = Double.NaN;
}
}

protected final void initMARRS1(String s) {
if (!s.trim().isEmpty()) {
MARRS1 = new Double(s);
} else {
MARRS1 = Double.NaN;
}
}

protected final void initMARRSV1(String s) {
if (!s.trim().isEmpty()) {
MARRSV1 = new Double(s);
} else {
MARRSV1 = Double.NaN;
}
}

protected final void initMENDNUM1(String s) {
if (!s.trim().isEmpty()) {
MENDNUM1 = new Double(s);
} else {
MENDNUM1 = Double.NaN;
}
}

protected final void initMENDNUM1_I(String s) {
if (!s.trim().isEmpty()) {
MENDNUM1_I = new Double(s);
} else {
MENDNUM1_I = Double.NaN;
}
}

protected final void initMENDNUM1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDNUM1_IFLAG = new Double(s);
} else {
MENDNUM1_IFLAG = Double.NaN;
}
}

protected final void initMENDV1(String s) {
if (!s.trim().isEmpty()) {
MENDV1 = new Double(s);
} else {
MENDV1 = Double.NaN;
}
}

protected final void initMENDV1_I(String s) {
if (!s.trim().isEmpty()) {
MENDV1_I = new Double(s);
} else {
MENDV1_I = Double.NaN;
}
}

protected final void initMENDV1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDV1_IFLAG = new Double(s);
} else {
MENDV1_IFLAG = Double.NaN;
}
}

protected final void initMENDVB1(String s) {
if (!s.trim().isEmpty()) {
MENDVB1 = new Double(s);
} else {
MENDVB1 = Double.NaN;
}
}

protected final void initMENDVB11_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB11_I = new Double(s);
} else {
MENDVB11_I = Double.NaN;
}
}

protected final void initMENDVB11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB11_IFLAG = new Double(s);
} else {
MENDVB11_IFLAG = Double.NaN;
}
}

protected final void initMENDVB1_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB1_I = new Double(s);
} else {
MENDVB1_I = Double.NaN;
}
}

protected final void initMENDVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB1_IFLAG = new Double(s);
} else {
MENDVB1_IFLAG = Double.NaN;
}
}

protected final void initMENDVB2_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB2_I = new Double(s);
} else {
MENDVB2_I = Double.NaN;
}
}

protected final void initMENDVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB2_IFLAG = new Double(s);
} else {
MENDVB2_IFLAG = Double.NaN;
}
}

protected final void initMENDVB3_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB3_I = new Double(s);
} else {
MENDVB3_I = Double.NaN;
}
}

protected final void initMENDVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB3_IFLAG = new Double(s);
} else {
MENDVB3_IFLAG = Double.NaN;
}
}

protected final void initMENDVB4_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB4_I = new Double(s);
} else {
MENDVB4_I = Double.NaN;
}
}

protected final void initMENDVB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB4_IFLAG = new Double(s);
} else {
MENDVB4_IFLAG = Double.NaN;
}
}

protected final void initMENDVB5_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB5_I = new Double(s);
} else {
MENDVB5_I = Double.NaN;
}
}

protected final void initMENDVB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB5_IFLAG = new Double(s);
} else {
MENDVB5_IFLAG = Double.NaN;
}
}

protected final void initMENDVB6_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB6_I = new Double(s);
} else {
MENDVB6_I = Double.NaN;
}
}

protected final void initMENDVB6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB6_IFLAG = new Double(s);
} else {
MENDVB6_IFLAG = Double.NaN;
}
}

protected final void initMENDVB7_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB7_I = new Double(s);
} else {
MENDVB7_I = Double.NaN;
}
}

protected final void initMENDVB7_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB7_IFLAG = new Double(s);
} else {
MENDVB7_IFLAG = Double.NaN;
}
}

protected final void initMENDVB8_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB8_I = new Double(s);
} else {
MENDVB8_I = Double.NaN;
}
}

protected final void initMENDVB8_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB8_IFLAG = new Double(s);
} else {
MENDVB8_IFLAG = Double.NaN;
}
}

protected final void initMENDVB9_I(String s) {
if (!s.trim().isEmpty()) {
MENDVB9_I = new Double(s);
} else {
MENDVB9_I = Double.NaN;
}
}

protected final void initMENDVB9_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDVB9_IFLAG = new Double(s);
} else {
MENDVB9_IFLAG = Double.NaN;
}
}

protected final void initMENDW1(String s) {
if (!s.trim().isEmpty()) {
MENDW1 = new Double(s);
} else {
MENDW1 = Double.NaN;
}
}

protected final void initMENDW1_I(String s) {
if (!s.trim().isEmpty()) {
MENDW1_I = new Double(s);
} else {
MENDW1_I = Double.NaN;
}
}

protected final void initMENDW1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MENDW1_IFLAG = new Double(s);
} else {
MENDW1_IFLAG = Double.NaN;
}
}

protected final void initMENDW3(String s) {
if (!s.trim().isEmpty()) {
MENDW3 = new Double(s);
} else {
MENDW3 = Double.NaN;
}
}

protected final void initMENDX1(String s) {
if (!s.trim().isEmpty()) {
MENDX1 = new Double(s);
} else {
MENDX1 = Double.NaN;
}
}

protected final void initMENDY1(String s) {
if (!s.trim().isEmpty()) {
MENDY1 = new Double(s);
} else {
MENDY1 = Double.NaN;
}
}

protected final void initMHOWPY1(String s) {
if (!s.trim().isEmpty()) {
MHOWPY1 = new Double(s);
} else {
MHOWPY1 = Double.NaN;
}
}

protected final void initMINVW1(String s) {
if (!s.trim().isEmpty()) {
MINVW1 = new Double(s);
} else {
MINVW1 = Double.NaN;
}
}

protected final void initMINVW2(String s) {
if (!s.trim().isEmpty()) {
MINVW2 = new Double(s);
} else {
MINVW2 = Double.NaN;
}
}

protected final void initMINVW3(String s) {
if (!s.trim().isEmpty()) {
MINVW3 = new Double(s);
} else {
MINVW3 = Double.NaN;
}
}

protected final void initMNAME1(String s) {
if (!s.trim().isEmpty()) {
MNAME1 = new Double(s);
} else {
MNAME1 = Double.NaN;
}
}

protected final void initMNEG1(String s) {
if (!s.trim().isEmpty()) {
MNEG1 = new Double(s);
} else {
MNEG1 = Double.NaN;
}
}

protected final void initMNEG1_I(String s) {
if (!s.trim().isEmpty()) {
MNEG1_I = new Double(s);
} else {
MNEG1_I = Double.NaN;
}
}

protected final void initMNEG1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MNEG1_IFLAG = new Double(s);
} else {
MNEG1_IFLAG = Double.NaN;
}
}

protected final void initMNEGB1(String s) {
if (!s.trim().isEmpty()) {
MNEGB1 = new Double(s);
} else {
MNEGB1 = Double.NaN;
}
}

protected final void initMONAME1(String s) {
if (!s.trim().isEmpty()) {
MONAME1 = new Double(s);
} else {
MONAME1 = Double.NaN;
}
}

protected final void initMONTHW1(String s) {
if (!s.trim().isEmpty()) {
MONTHW1 = new Double(s);
} else {
MONTHW1 = Double.NaN;
}
}

protected final void initMONTHW2(String s) {
if (!s.trim().isEmpty()) {
MONTHW2 = new Double(s);
} else {
MONTHW2 = Double.NaN;
}
}

protected final void initMONTHW3(String s) {
if (!s.trim().isEmpty()) {
MONTHW3 = new Double(s);
} else {
MONTHW3 = Double.NaN;
}
}

protected final void initMPAYB1(String s) {
if (!s.trim().isEmpty()) {
MPAYB1 = new Double(s);
} else {
MPAYB1 = Double.NaN;
}
}

protected final void initMPAYM1(String s) {
if (!s.trim().isEmpty()) {
MPAYM1 = new Double(s);
} else {
MPAYM1 = Double.NaN;
}
}

protected final void initMPOLICY1(String s) {
if (!s.trim().isEmpty()) {
MPOLICY1 = new Double(s);
} else {
MPOLICY1 = Double.NaN;
}
}

protected final void initMPOLICY2(String s) {
if (!s.trim().isEmpty()) {
MPOLICY2 = new Double(s);
} else {
MPOLICY2 = Double.NaN;
}
}

protected final void initMPP1(String s) {
if (!s.trim().isEmpty()) {
MPP1 = new Double(s);
} else {
MPP1 = Double.NaN;
}
}

protected final void initMTYPE1(String s) {
if (!s.trim().isEmpty()) {
MTYPE1 = new Double(s);
} else {
MTYPE1 = Double.NaN;
}
}

protected final void initMTYPE1_I(String s) {
if (!s.trim().isEmpty()) {
MTYPE1_I = new Double(s);
} else {
MTYPE1_I = Double.NaN;
}
}

protected final void initMTYPE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MTYPE1_IFLAG = new Double(s);
} else {
MTYPE1_IFLAG = Double.NaN;
}
}

protected final void initMVAL1(String s) {
if (!s.trim().isEmpty()) {
MVAL1 = new Double(s);
} else {
MVAL1 = Double.NaN;
}
}

protected final void initMVAL1_I(String s) {
if (!s.trim().isEmpty()) {
MVAL1_I = new Double(s);
} else {
MVAL1_I = Double.NaN;
}
}

protected final void initMVAL1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
MVAL1_IFLAG = new Double(s);
} else {
MVAL1_IFLAG = Double.NaN;
}
}

protected final void initMVALB1(String s) {
if (!s.trim().isEmpty()) {
MVALB1 = new Double(s);
} else {
MVALB1 = Double.NaN;
}
}

protected final void initMYIFCH1(String s) {
if (!s.trim().isEmpty()) {
MYIFCH1 = new Double(s);
} else {
MYIFCH1 = Double.NaN;
}
}

protected final void initMYLFT1(String s) {
if (!s.trim().isEmpty()) {
MYLFT1 = new Double(s);
} else {
MYLFT1 = Double.NaN;
}
}

protected final void initVTYPE1(String s) {
if (!s.trim().isEmpty()) {
VTYPE1 = new Double(s);
} else {
VTYPE1 = Double.NaN;
}
}

protected final void initYEARW1(String s) {
if (!s.trim().isEmpty()) {
YEARW1 = new Double(s);
} else {
YEARW1 = Double.NaN;
}
}

protected final void initYEARW2(String s) {
if (!s.trim().isEmpty()) {
YEARW2 = new Double(s);
} else {
YEARW2 = Double.NaN;
}
}

protected final void initYEARW3(String s) {
if (!s.trim().isEmpty()) {
YEARW3 = new Double(s);
} else {
YEARW3 = Double.NaN;
}
}

public double getBRIDLN1() {
return BRIDLN1;
}

public double getBRIDLN2() {
return BRIDLN2;
}

public double getBRIDLN3() {
return BRIDLN3;
}

public Integer getCASEW4() {
return CASEW4;
}

public double getDVBENEFITANNUAL_AGGR() {
return DVBENEFITANNUAL_AGGR;
}

public double getEQVALB_I() {
return EQVALB_I;
}

public double getEQVALB_IFLAG() {
return EQVALB_IFLAG;
}

public double getHRPDVAGE() {
return HRPDVAGE;
}

public double getHRPDVECACT() {
return HRPDVECACT;
}

public double getHRPIOUT1() {
return HRPIOUT1;
}

public double getHRPPARTIOUT1() {
return HRPPARTIOUT1;
}

public double getMALL1() {
return MALL1;
}

public double getMALL1_I() {
return MALL1_I;
}

public double getMALL1_IFLAG() {
return MALL1_IFLAG;
}

public double getMALLTY1() {
return MALLTY1;
}

public double getMALLTY1_I() {
return MALLTY1_I;
}

public double getMALLTY1_IFLAG() {
return MALLTY1_IFLAG;
}

public double getMARR2YR1() {
return MARR2YR1;
}

public double getMARR2YR2() {
return MARR2YR2;
}

public double getMARR2YR3() {
return MARR2YR3;
}

public double getMARRCL01() {
return MARRCL01;
}

public double getMARRCL02() {
return MARRCL02;
}

public double getMARRCL12() {
return MARRCL12;
}

public double getMARRS1() {
return MARRS1;
}

public double getMARRSV1() {
return MARRSV1;
}

public double getMENDNUM1() {
return MENDNUM1;
}

public double getMENDNUM1_I() {
return MENDNUM1_I;
}

public double getMENDNUM1_IFLAG() {
return MENDNUM1_IFLAG;
}

public double getMENDV1() {
return MENDV1;
}

public double getMENDV1_I() {
return MENDV1_I;
}

public double getMENDV1_IFLAG() {
return MENDV1_IFLAG;
}

public double getMENDVB1() {
return MENDVB1;
}

public double getMENDVB11_I() {
return MENDVB11_I;
}

public double getMENDVB11_IFLAG() {
return MENDVB11_IFLAG;
}

public double getMENDVB1_I() {
return MENDVB1_I;
}

public double getMENDVB1_IFLAG() {
return MENDVB1_IFLAG;
}

public double getMENDVB2_I() {
return MENDVB2_I;
}

public double getMENDVB2_IFLAG() {
return MENDVB2_IFLAG;
}

public double getMENDVB3_I() {
return MENDVB3_I;
}

public double getMENDVB3_IFLAG() {
return MENDVB3_IFLAG;
}

public double getMENDVB4_I() {
return MENDVB4_I;
}

public double getMENDVB4_IFLAG() {
return MENDVB4_IFLAG;
}

public double getMENDVB5_I() {
return MENDVB5_I;
}

public double getMENDVB5_IFLAG() {
return MENDVB5_IFLAG;
}

public double getMENDVB6_I() {
return MENDVB6_I;
}

public double getMENDVB6_IFLAG() {
return MENDVB6_IFLAG;
}

public double getMENDVB7_I() {
return MENDVB7_I;
}

public double getMENDVB7_IFLAG() {
return MENDVB7_IFLAG;
}

public double getMENDVB8_I() {
return MENDVB8_I;
}

public double getMENDVB8_IFLAG() {
return MENDVB8_IFLAG;
}

public double getMENDVB9_I() {
return MENDVB9_I;
}

public double getMENDVB9_IFLAG() {
return MENDVB9_IFLAG;
}

public double getMENDW1() {
return MENDW1;
}

public double getMENDW1_I() {
return MENDW1_I;
}

public double getMENDW1_IFLAG() {
return MENDW1_IFLAG;
}

public double getMENDW3() {
return MENDW3;
}

public double getMENDX1() {
return MENDX1;
}

public double getMENDY1() {
return MENDY1;
}

public double getMHOWPY1() {
return MHOWPY1;
}

public double getMINVW1() {
return MINVW1;
}

public double getMINVW2() {
return MINVW2;
}

public double getMINVW3() {
return MINVW3;
}

public double getMNAME1() {
return MNAME1;
}

public double getMNEG1() {
return MNEG1;
}

public double getMNEG1_I() {
return MNEG1_I;
}

public double getMNEG1_IFLAG() {
return MNEG1_IFLAG;
}

public double getMNEGB1() {
return MNEGB1;
}

public double getMONAME1() {
return MONAME1;
}

public double getMONTHW1() {
return MONTHW1;
}

public double getMONTHW2() {
return MONTHW2;
}

public double getMONTHW3() {
return MONTHW3;
}

public double getMPAYB1() {
return MPAYB1;
}

public double getMPAYM1() {
return MPAYM1;
}

public double getMPOLICY1() {
return MPOLICY1;
}

public double getMPOLICY2() {
return MPOLICY2;
}

public double getMPP1() {
return MPP1;
}

public double getMTYPE1() {
return MTYPE1;
}

public double getMTYPE1_I() {
return MTYPE1_I;
}

public double getMTYPE1_IFLAG() {
return MTYPE1_IFLAG;
}

public double getMVAL1() {
return MVAL1;
}

public double getMVAL1_I() {
return MVAL1_I;
}

public double getMVAL1_IFLAG() {
return MVAL1_IFLAG;
}

public double getMVALB1() {
return MVALB1;
}

public double getMYIFCH1() {
return MYIFCH1;
}

public double getMYLFT1() {
return MYLFT1;
}

public double getVTYPE1() {
return VTYPE1;
}

public double getYEARW1() {
return YEARW1;
}

public double getYEARW2() {
return YEARW2;
}

public double getYEARW3() {
return YEARW3;
}

}
